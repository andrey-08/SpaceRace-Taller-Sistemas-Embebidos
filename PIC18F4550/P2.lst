;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 25/4/2022 16:58:15
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0xF024EFAD  	GOTO        18778
0x0004	0x0000      	NOP
0x0006	0x0000      	NOP
0x0008	0xF000EF00  	GOTO        0
0x000C	0x0000      	NOP
0x000E	0x0000      	NOP
0x0010	0x0000      	NOP
0x0012	0x0000      	NOP
0x0014	0x0000      	NOP
0x0016	0x0000      	NOP
0x0018	0xD7F3      	BRA         0
_Delay_10us:
;__Lib_Delays.c,11 :: 		void Delay_10us() {
;__Lib_Delays.c,12 :: 		Delay_us(10);
0x001C	0x0E06      	MOVLW       6
0x001E	0x6E0D      	MOVWF       R13, 0
L_Delay_10us0:
0x0020	0x2E0D      	DECFSZ      R13, 1, 0
0x0022	0xD7FE      	BRA         L_Delay_10us0
0x0024	0x0000      	NOP
;__Lib_Delays.c,13 :: 		}
L_end_Delay_10us:
0x0026	0x0012      	RETURN      0
; end of _Delay_10us
__Lib_Glcd_Strobe:
;__Lib_Glcd.c,32 :: 		
;__Lib_Glcd.c,33 :: 		
0x0028	0xDFF9      	RCALL       _Delay_10us
;__Lib_Glcd.c,34 :: 		
0x002A	0x888A      	BSF         GLCD_EN, BitPos(GLCD_EN+0) 
;__Lib_Glcd.c,35 :: 		
0x002C	0xDFF7      	RCALL       _Delay_10us
;__Lib_Glcd.c,36 :: 		
0x002E	0x988A      	BCF         GLCD_EN, BitPos(GLCD_EN+0) 
;__Lib_Glcd.c,37 :: 		
L_end_Strobe:
0x0030	0x0012      	RETURN      0
; end of __Lib_Glcd_Strobe
_Delay_1us:
;__Lib_Delays.c,7 :: 		void Delay_1us() {
;__Lib_Delays.c,8 :: 		Delay_us(1);
0x0032	0x0000      	NOP
0x0034	0x0000      	NOP
;__Lib_Delays.c,9 :: 		}
L_end_Delay_1us:
0x0036	0x0012      	RETURN      0
; end of _Delay_1us
_Glcd_Read_Data:
;__Lib_Glcd.c,75 :: 		
;__Lib_Glcd.c,80 :: 		
0x0038	0x0E12      	MOVLW       18
0x003A	0x6E00      	MOVWF       R0 
0x003C	0x0E00      	MOVLW       0
0x003E	0x6E01      	MOVWF       R1 
0x0040	0x0E83      	MOVLW       GLCD_DataPort
0x0042	0x2400      	ADDWF       R0, 0 
0x0044	0x6EE1      	MOVWF       FSR1L 
0x0046	0x0E0F      	MOVLW       hi_addr(GLCD_DataPort)
0x0048	0x2001      	ADDWFC      R1, 0 
0x004A	0x6EE2      	MOVWF       FSR1L+1 
0x004C	0x0EFF      	MOVLW       255
0x004E	0x6EE6      	MOVWF       POSTINC1 
;__Lib_Glcd.c,82 :: 		
0x0050	0xDFF0      	RCALL       _Delay_1us
;__Lib_Glcd.c,83 :: 		
0x0052	0xDFEF      	RCALL       _Delay_1us
;__Lib_Glcd.c,85 :: 		
0x0054	0x848A      	BSF         GLCD_RS, BitPos(GLCD_RS+0) 
;__Lib_Glcd.c,86 :: 		
0x0056	0x988A      	BCF         GLCD_EN, BitPos(GLCD_EN+0) 
;__Lib_Glcd.c,87 :: 		
0x0058	0x868A      	BSF         GLCD_RW, BitPos(GLCD_RW+0) 
;__Lib_Glcd.c,89 :: 		
0x005A	0x888A      	BSF         GLCD_EN, BitPos(GLCD_EN+0) 
;__Lib_Glcd.c,91 :: 		
0x005C	0xDFDF      	RCALL       _Delay_10us
;__Lib_Glcd.c,99 :: 		
0x005E	0xF210CF83  	MOVFF       GLCD_DataPort, Glcd_Read_Data_local_L0
;__Lib_Glcd.c,101 :: 		
0x0062	0x988A      	BCF         GLCD_EN, BitPos(GLCD_EN+0) 
;__Lib_Glcd.c,102 :: 		
0x0064	0x968A      	BCF         GLCD_RW, BitPos(GLCD_RW+0) 
;__Lib_Glcd.c,104 :: 		
0x0066	0xDFE5      	RCALL       _Delay_1us
;__Lib_Glcd.c,105 :: 		
0x0068	0xDFE4      	RCALL       _Delay_1us
;__Lib_Glcd.c,108 :: 		
0x006A	0x0E12      	MOVLW       18
0x006C	0x6E00      	MOVWF       R0 
0x006E	0x0E00      	MOVLW       0
0x0070	0x6E01      	MOVWF       R1 
0x0072	0x0E83      	MOVLW       GLCD_DataPort
0x0074	0x2400      	ADDWF       R0, 0 
0x0076	0x6EE1      	MOVWF       FSR1L 
0x0078	0x0E0F      	MOVLW       hi_addr(GLCD_DataPort)
0x007A	0x2001      	ADDWFC      R1, 0 
0x007C	0x6EE2      	MOVWF       FSR1L+1 
0x007E	0x6AE6      	CLRF        POSTINC1 
;__Lib_Glcd.c,110 :: 		
0x0080	0xF000C210  	MOVFF       Glcd_Read_Data_local_L0, R0
;__Lib_Glcd.c,111 :: 		
L_end_Glcd_Read_Data:
0x0084	0x0012      	RETURN      0
; end of _Glcd_Read_Data
_Glcd_Write_Data:
;__Lib_Glcd.c,114 :: 		
;__Lib_Glcd.c,116 :: 		
0x0086	0x988A      	BCF         GLCD_EN, BitPos(GLCD_EN+0) 
;__Lib_Glcd.c,117 :: 		
0x0088	0x848A      	BSF         GLCD_RS, BitPos(GLCD_RS+0) 
;__Lib_Glcd.c,118 :: 		
0x008A	0x968A      	BCF         GLCD_RW, BitPos(GLCD_RW+0) 
;__Lib_Glcd.c,120 :: 		
0x008C	0xFF83C210  	MOVFF       FARG_Glcd_Write_Data_ddata, GLCD_DataPort
;__Lib_Glcd.c,121 :: 		
0x0090	0xDFCB      	RCALL       __Lib_Glcd_Strobe
;__Lib_Glcd.c,122 :: 		
L_end_Glcd_Write_Data:
0x0092	0x0012      	RETURN      0
; end of _Glcd_Write_Data
_Glcd_Set_Side:
;__Lib_Glcd.c,49 :: 		
;__Lib_Glcd.c,50 :: 		
0x0094	0x0E7F      	MOVLW       127
0x0096	0x0102      	MOVLB       2
0x0098	0x1510      	ANDWF       FARG_Glcd_Set_Side_x_pos, 0, 1
0x009A	0x6E01      	MOVWF       R1 
0x009C	0xF210C001  	MOVFF       R1, FARG_Glcd_Set_Side_x_pos
;__Lib_Glcd.c,51 :: 		
0x00A0	0xAC01      	BTFSS       R1, 6 
0x00A2	0xD003      	BRA         L_Glcd_Set_Side0
;__Lib_Glcd.c,52 :: 		
0x00A4	0x808A      	BSF         GLCD_CS1, BitPos(GLCD_CS1+0) 
;__Lib_Glcd.c,53 :: 		
0x00A6	0x928A      	BCF         GLCD_CS2, BitPos(GLCD_CS2+0) 
;__Lib_Glcd.c,54 :: 		
0x00A8	0xD002      	BRA         L_Glcd_Set_Side1
L_Glcd_Set_Side0:
;__Lib_Glcd.c,55 :: 		
0x00AA	0x908A      	BCF         GLCD_CS1, BitPos(GLCD_CS1+0) 
;__Lib_Glcd.c,56 :: 		
0x00AC	0x828A      	BSF         GLCD_CS2, BitPos(GLCD_CS2+0) 
;__Lib_Glcd.c,57 :: 		
L_Glcd_Set_Side1:
;__Lib_Glcd.c,58 :: 		
L_end_Glcd_Set_Side:
0x00AE	0x0012      	RETURN      0
; end of _Glcd_Set_Side
_Glcd_Set_Page:
;__Lib_Glcd.c,40 :: 		
;__Lib_Glcd.c,42 :: 		
0x00B0	0x948A      	BCF         GLCD_RS, BitPos(GLCD_RS+0) 
;__Lib_Glcd.c,43 :: 		
0x00B2	0x968A      	BCF         GLCD_RW, BitPos(GLCD_RW+0) 
;__Lib_Glcd.c,44 :: 		
0x00B4	0x0EB8      	MOVLW       184
0x00B6	0x0102      	MOVLB       2
0x00B8	0x1110      	IORWF       FARG_Glcd_Set_Page_page, 0, 1
0x00BA	0x6E83      	MOVWF       GLCD_DataPort 
;__Lib_Glcd.c,45 :: 		
0x00BC	0xDFB5      	RCALL       __Lib_Glcd_Strobe
;__Lib_Glcd.c,46 :: 		
L_end_Glcd_Set_Page:
0x00BE	0x0012      	RETURN      0
; end of _Glcd_Set_Page
_Glcd_Set_X:
;__Lib_Glcd.c,61 :: 		
;__Lib_Glcd.c,63 :: 		
0x00C0	0x0E7F      	MOVLW       127
0x00C2	0x0102      	MOVLB       2
0x00C4	0x1510      	ANDWF       FARG_Glcd_Set_X_x_pos, 0, 1
0x00C6	0x6E00      	MOVWF       R0 
0x00C8	0xF210C000  	MOVFF       R0, FARG_Glcd_Set_X_x_pos
;__Lib_Glcd.c,64 :: 		
0x00CC	0x948A      	BCF         GLCD_RS, BitPos(GLCD_RS+0) 
;__Lib_Glcd.c,65 :: 		
0x00CE	0x968A      	BCF         GLCD_RW, BitPos(GLCD_RW+0) 
;__Lib_Glcd.c,67 :: 		
0x00D0	0x0EBF      	MOVLW       191
0x00D2	0x1600      	ANDWF       R0, 1 
0x00D4	0xF210C000  	MOVFF       R0, FARG_Glcd_Set_X_x_pos
;__Lib_Glcd.c,68 :: 		
0x00D8	0x8C00      	BSF         R0, 6 
0x00DA	0xF210C000  	MOVFF       R0, FARG_Glcd_Set_X_x_pos
;__Lib_Glcd.c,70 :: 		
0x00DE	0xFF83C000  	MOVFF       R0, GLCD_DataPort
;__Lib_Glcd.c,71 :: 		
0x00E2	0xDFA2      	RCALL       __Lib_Glcd_Strobe
;__Lib_Glcd.c,72 :: 		
L_end_Glcd_Set_X:
0x00E4	0x0012      	RETURN      0
; end of _Glcd_Set_X
_Glcd_Dot:
;__Lib_Glcd.c,321 :: 		
;__Lib_Glcd.c,325 :: 		
0x00E6	0x0E00      	MOVLW       0
0x00E8	0x0102      	MOVLB       2
0x00EA	0x5D0B      	SUBWF       FARG_Glcd_Dot_x_pos, 0, 1
0x00EC	0xE30A      	BNC         L__Glcd_Dot299
0x00EE	0x510B      	MOVF        FARG_Glcd_Dot_x_pos, 0, 1
0x00F0	0x087F      	SUBLW       127
0x00F2	0xE307      	BNC         L__Glcd_Dot299
0x00F4	0x0E00      	MOVLW       0
0x00F6	0x5D0C      	SUBWF       FARG_Glcd_Dot_y_pos, 0, 1
0x00F8	0xE304      	BNC         L__Glcd_Dot299
0x00FA	0x510C      	MOVF        FARG_Glcd_Dot_y_pos, 0, 1
0x00FC	0x083F      	SUBLW       63
0x00FE	0xE301      	BNC         L__Glcd_Dot299
0x0100	0xD001      	BRA         L_Glcd_Dot36
L__Glcd_Dot299:
;__Lib_Glcd.c,326 :: 		
0x0102	0xD04A      	BRA         L_end_Glcd_Dot
L_Glcd_Dot36:
;__Lib_Glcd.c,329 :: 		
0x0104	0xF210C20B  	MOVFF       FARG_Glcd_Dot_x_pos, FARG_Glcd_Set_Side_x_pos
0x0108	0xDFC5      	RCALL       _Glcd_Set_Side
;__Lib_Glcd.c,330 :: 		
0x010A	0xF210C20C  	MOVFF       FARG_Glcd_Dot_y_pos, FARG_Glcd_Set_Page_page
0x010E	0x3310      	RRCF        FARG_Glcd_Set_Page_page, 1, 1
0x0110	0x9F10      	BCF         FARG_Glcd_Set_Page_page, 7, 1
0x0112	0x3310      	RRCF        FARG_Glcd_Set_Page_page, 1, 1
0x0114	0x9F10      	BCF         FARG_Glcd_Set_Page_page, 7, 1
0x0116	0x3310      	RRCF        FARG_Glcd_Set_Page_page, 1, 1
0x0118	0x9F10      	BCF         FARG_Glcd_Set_Page_page, 7, 1
0x011A	0xDFCA      	RCALL       _Glcd_Set_Page
;__Lib_Glcd.c,331 :: 		
0x011C	0xF210C20B  	MOVFF       FARG_Glcd_Dot_x_pos, FARG_Glcd_Set_X_x_pos
0x0120	0xDFCF      	RCALL       _Glcd_Set_X
;__Lib_Glcd.c,334 :: 		
0x0122	0xDF8A      	RCALL       _Glcd_Read_Data
0x0124	0xF20FC000  	MOVFF       R0, Glcd_Dot_ddata_L0
;__Lib_Glcd.c,335 :: 		
0x0128	0xDF87      	RCALL       _Glcd_Read_Data
0x012A	0xF20FC000  	MOVFF       R0, Glcd_Dot_ddata_L0
;__Lib_Glcd.c,337 :: 		
0x012E	0xF210C20C  	MOVFF       FARG_Glcd_Dot_y_pos, FARG_Glcd_Set_Page_page
0x0132	0x3310      	RRCF        FARG_Glcd_Set_Page_page, 1, 1
0x0134	0x9F10      	BCF         FARG_Glcd_Set_Page_page, 7, 1
0x0136	0x3310      	RRCF        FARG_Glcd_Set_Page_page, 1, 1
0x0138	0x9F10      	BCF         FARG_Glcd_Set_Page_page, 7, 1
0x013A	0x3310      	RRCF        FARG_Glcd_Set_Page_page, 1, 1
0x013C	0x9F10      	BCF         FARG_Glcd_Set_Page_page, 7, 1
0x013E	0xDFB8      	RCALL       _Glcd_Set_Page
;__Lib_Glcd.c,338 :: 		
0x0140	0xF210C20B  	MOVFF       FARG_Glcd_Dot_x_pos, FARG_Glcd_Set_X_x_pos
0x0144	0xDFBD      	RCALL       _Glcd_Set_X
;__Lib_Glcd.c,340 :: 		
0x0146	0x0E07      	MOVLW       7
0x0148	0x150C      	ANDWF       FARG_Glcd_Dot_y_pos, 0, 1
0x014A	0x6E00      	MOVWF       R0 
0x014C	0xF200C000  	MOVFF       R0, Glcd_Dot_bit_mask1_L0
;__Lib_Glcd.c,341 :: 		
0x0150	0xF001C000  	MOVFF       R0, R1
0x0154	0x0E01      	MOVLW       1
0x0156	0x6E00      	MOVWF       R0 
0x0158	0x5001      	MOVF        R1, 0 
L__Glcd_Dot324:
0x015A	0xE004      	BZ          L__Glcd_Dot325
0x015C	0x3600      	RLCF        R0, 1 
0x015E	0x9000      	BCF         R0, 0 
0x0160	0x0FFF      	ADDLW       255
0x0162	0xD7FB      	BRA         L__Glcd_Dot324
L__Glcd_Dot325:
0x0164	0xF200C000  	MOVFF       R0, Glcd_Dot_bit_mask1_L0
;__Lib_Glcd.c,342 :: 		
0x0168	0x1C00      	COMF        R0, 0 
0x016A	0x6F0E      	MOVWF       Glcd_Dot_bit_mask0_L0, 1
;__Lib_Glcd.c,345 :: 		
0x016C	0xD009      	BRA         L_Glcd_Dot37
;__Lib_Glcd.c,346 :: 		
L_Glcd_Dot39:
;__Lib_Glcd.c,347 :: 		
0x016E	0x510E      	MOVF        Glcd_Dot_bit_mask0_L0, 0, 1
0x0170	0x170F      	ANDWF       Glcd_Dot_ddata_L0, 1, 1
;__Lib_Glcd.c,348 :: 		
0x0172	0xD00F      	BRA         L_Glcd_Dot38
;__Lib_Glcd.c,349 :: 		
L_Glcd_Dot40:
;__Lib_Glcd.c,350 :: 		
0x0174	0x5100      	MOVF        Glcd_Dot_bit_mask1_L0, 0, 1
0x0176	0x130F      	IORWF       Glcd_Dot_ddata_L0, 1, 1
;__Lib_Glcd.c,351 :: 		
0x0178	0xD00C      	BRA         L_Glcd_Dot38
;__Lib_Glcd.c,352 :: 		
L_Glcd_Dot41:
;__Lib_Glcd.c,353 :: 		
0x017A	0x5100      	MOVF        Glcd_Dot_bit_mask1_L0, 0, 1
0x017C	0x1B0F      	XORWF       Glcd_Dot_ddata_L0, 1, 1
;__Lib_Glcd.c,354 :: 		
0x017E	0xD009      	BRA         L_Glcd_Dot38
L_Glcd_Dot37:
0x0180	0x510D      	MOVF        FARG_Glcd_Dot_color, 0, 1
0x0182	0x0A00      	XORLW       0
0x0184	0xE0F4      	BZ          L_Glcd_Dot39
0x0186	0x510D      	MOVF        FARG_Glcd_Dot_color, 0, 1
0x0188	0x0A01      	XORLW       1
0x018A	0xE0F4      	BZ          L_Glcd_Dot40
0x018C	0x510D      	MOVF        FARG_Glcd_Dot_color, 0, 1
0x018E	0x0A02      	XORLW       2
0x0190	0xE0F4      	BZ          L_Glcd_Dot41
L_Glcd_Dot38:
;__Lib_Glcd.c,356 :: 		
0x0192	0xF210C20F  	MOVFF       Glcd_Dot_ddata_L0, FARG_Glcd_Write_Data_ddata
0x0196	0xDF77      	RCALL       _Glcd_Write_Data
;__Lib_Glcd.c,357 :: 		
L_end_Glcd_Dot:
0x0198	0x0012      	RETURN      0
; end of _Glcd_Dot
_____DoIFC:
;__Lib_System.c,93 :: 		
;__Lib_System.c,94 :: 		
0x019A	0x50F2      	MOVF        INTCON, 0, 0
;__Lib_System.c,95 :: 		
0x019C	0x6E02      	MOVWF       R2, 0
;__Lib_System.c,96 :: 		
0x019E	0x9EF2      	BCF         INTCON, 7 
;__Lib_System.c,97 :: 		
0x01A0	0x0005      	PUSH
;__Lib_System.c,98 :: 		
0x01A2	0x6AFF      	CLRF        TOSU, 0
;__Lib_System.c,99 :: 		
0x01A4	0x5001      	MOVF        R1, 0, 0
;__Lib_System.c,100 :: 		
0x01A6	0x6EFE      	MOVWF       TOSH, 0
;__Lib_System.c,101 :: 		
0x01A8	0x5000      	MOVF        R0, 0, 0
;__Lib_System.c,102 :: 		
0x01AA	0x6EFD      	MOVWF       TOSL, 0
;__Lib_System.c,103 :: 		
0x01AC	0xBE02      	BTFSC       R2, 7, 0
;__Lib_System.c,104 :: 		
0x01AE	0x8EF2      	BSF         INTCON, 7, 0
;__Lib_System.c,105 :: 		
;__Lib_System.c,107 :: 		
L_end_____DoIFC:
0x01B0	0x0012      	RETURN      0
; end of _____DoIFC
_Glcd_Set_Font_Adv:
;__Lib_Glcd.c,901 :: 		
;__Lib_Glcd.c,902 :: 		
0x01B2	0xF118C201  	MOVFF       FARG_Glcd_Set_Font_Adv_activeFont, __Lib_Glcd__font
0x01B6	0xF119C202  	MOVFF       FARG_Glcd_Set_Font_Adv_activeFont+1, __Lib_Glcd__font+1
0x01BA	0xF11AC203  	MOVFF       FARG_Glcd_Set_Font_Adv_activeFont+2, __Lib_Glcd__font+2
;__Lib_Glcd.c,903 :: 		
0x01BE	0x0E02      	MOVLW       2
0x01C0	0x0102      	MOVLB       2
0x01C2	0x2501      	ADDWF       FARG_Glcd_Set_Font_Adv_activeFont, 0, 1
0x01C4	0x6EF6      	MOVWF       TBLPTR 
0x01C6	0x0E00      	MOVLW       0
0x01C8	0x2102      	ADDWFC      FARG_Glcd_Set_Font_Adv_activeFont+1, 0, 1
0x01CA	0x6EF7      	MOVWF       TBLPTR+1 
0x01CC	0x0E00      	MOVLW       0
0x01CE	0x2103      	ADDWFC      FARG_Glcd_Set_Font_Adv_activeFont+2, 0, 1
0x01D0	0x6EF8      	MOVWF       TBLPTR+2 
0x01D2	0x0009      	TBLRD*+
0x01D4	0xF004CFF5  	MOVFF       TABLAT, R4
0x01D8	0x0E03      	MOVLW       3
0x01DA	0x2501      	ADDWF       FARG_Glcd_Set_Font_Adv_activeFont, 0, 1
0x01DC	0x6EF6      	MOVWF       TBLPTR 
0x01DE	0x0E00      	MOVLW       0
0x01E0	0x2102      	ADDWFC      FARG_Glcd_Set_Font_Adv_activeFont+1, 0, 1
0x01E2	0x6EF7      	MOVWF       TBLPTR+1 
0x01E4	0x0E00      	MOVLW       0
0x01E6	0x2103      	ADDWFC      FARG_Glcd_Set_Font_Adv_activeFont+2, 0, 1
0x01E8	0x6EF8      	MOVWF       TBLPTR+2 
0x01EA	0x0009      	TBLRD*+
0x01EC	0xF003CFF5  	MOVFF       TABLAT, R3
0x01F0	0xF001C003  	MOVFF       R3, R1
0x01F4	0x6A00      	CLRF        R0 
0x01F6	0x5004      	MOVF        R4, 0 
0x01F8	0x2400      	ADDWF       R0, 0 
0x01FA	0x0101      	MOVLB       1
0x01FC	0x6F21      	MOVWF       __Lib_Glcd__fontFirstChar, 1
0x01FE	0x0E00      	MOVLW       0
0x0200	0x2001      	ADDWFC      R1, 0 
0x0202	0x6F22      	MOVWF       __Lib_Glcd__fontFirstChar+1, 1
;__Lib_Glcd.c,904 :: 		
0x0204	0x0E04      	MOVLW       4
0x0206	0x0102      	MOVLB       2
0x0208	0x2501      	ADDWF       FARG_Glcd_Set_Font_Adv_activeFont, 0, 1
0x020A	0x6EF6      	MOVWF       TBLPTR 
0x020C	0x0E00      	MOVLW       0
0x020E	0x2102      	ADDWFC      FARG_Glcd_Set_Font_Adv_activeFont+1, 0, 1
0x0210	0x6EF7      	MOVWF       TBLPTR+1 
0x0212	0x0E00      	MOVLW       0
0x0214	0x2103      	ADDWFC      FARG_Glcd_Set_Font_Adv_activeFont+2, 0, 1
0x0216	0x6EF8      	MOVWF       TBLPTR+2 
0x0218	0x0009      	TBLRD*+
0x021A	0xF004CFF5  	MOVFF       TABLAT, R4
0x021E	0x0E05      	MOVLW       5
0x0220	0x2501      	ADDWF       FARG_Glcd_Set_Font_Adv_activeFont, 0, 1
0x0222	0x6EF6      	MOVWF       TBLPTR 
0x0224	0x0E00      	MOVLW       0
0x0226	0x2102      	ADDWFC      FARG_Glcd_Set_Font_Adv_activeFont+1, 0, 1
0x0228	0x6EF7      	MOVWF       TBLPTR+1 
0x022A	0x0E00      	MOVLW       0
0x022C	0x2103      	ADDWFC      FARG_Glcd_Set_Font_Adv_activeFont+2, 0, 1
0x022E	0x6EF8      	MOVWF       TBLPTR+2 
0x0230	0x0009      	TBLRD*+
0x0232	0xF003CFF5  	MOVFF       TABLAT, R3
0x0236	0xF001C003  	MOVFF       R3, R1
0x023A	0x6A00      	CLRF        R0 
0x023C	0x5004      	MOVF        R4, 0 
0x023E	0x2400      	ADDWF       R0, 0 
0x0240	0x0101      	MOVLB       1
0x0242	0x6F1E      	MOVWF       __Lib_Glcd__fontLastChar, 1
0x0244	0x0E00      	MOVLW       0
0x0246	0x2001      	ADDWFC      R1, 0 
0x0248	0x6F1F      	MOVWF       __Lib_Glcd__fontLastChar+1, 1
;__Lib_Glcd.c,905 :: 		
0x024A	0x0E06      	MOVLW       6
0x024C	0x0102      	MOVLB       2
0x024E	0x2501      	ADDWF       FARG_Glcd_Set_Font_Adv_activeFont, 0, 1
0x0250	0x6EF6      	MOVWF       TBLPTR 
0x0252	0x0E00      	MOVLW       0
0x0254	0x2102      	ADDWFC      FARG_Glcd_Set_Font_Adv_activeFont+1, 0, 1
0x0256	0x6EF7      	MOVWF       TBLPTR+1 
0x0258	0x0E00      	MOVLW       0
0x025A	0x2103      	ADDWFC      FARG_Glcd_Set_Font_Adv_activeFont+2, 0, 1
0x025C	0x6EF8      	MOVWF       TBLPTR+2 
0x025E	0x0009      	TBLRD*+
0x0260	0xF123CFF5  	MOVFF       TABLAT, __Lib_Glcd__fontHeight
0x0264	0x0E00      	MOVLW       0
0x0266	0x0101      	MOVLB       1
0x0268	0x6F24      	MOVWF       __Lib_Glcd__fontHeight+1, 1
;__Lib_Glcd.c,907 :: 		
0x026A	0xF137C204  	MOVFF       FARG_Glcd_Set_Font_Adv_font_color, __Lib_Glcd_FontColor
0x026E	0x0E00      	MOVLW       0
0x0270	0x6F38      	MOVWF       __Lib_Glcd_FontColor+1, 1
;__Lib_Glcd.c,908 :: 		
0x0272	0xF11BC205  	MOVFF       FARG_Glcd_Set_Font_Adv_font_orientation, __Lib_Glcd_FontOrientation
;__Lib_Glcd.c,909 :: 		
0x0276	0x0E01      	MOVLW       1
0x0278	0x0100      	MOVLB       0
0x027A	0x6FB9      	MOVWF       __Lib_Glcd_FontInitialized_Adv, 1
;__Lib_Glcd.c,910 :: 		
0x027C	0x0101      	MOVLB       1
0x027E	0x6B52      	CLRF        __Lib_Glcd_ExternalFontSet, 1
0x0280	0x6B53      	CLRF        __Lib_Glcd_ExternalFontSet+1, 1
;__Lib_Glcd.c,911 :: 		
L_end_Glcd_Set_Font_Adv:
0x0282	0x0012      	RETURN      0
; end of _Glcd_Set_Font_Adv
_Mul_16X16_U:
;__Lib_Math.c,440 :: 		
;__Lib_Math.c,447 :: 		
0x0284	0x6A0B      	CLRF        R11, 0
;__Lib_Math.c,448 :: 		
0x0286	0x6A0A      	CLRF        R10, 0
;__Lib_Math.c,449 :: 		
0x0288	0x6A09      	CLRF        R9, 0
;__Lib_Math.c,450 :: 		
0x028A	0x5000      	MOVF        R0, 0, 0
;__Lib_Math.c,451 :: 		
0x028C	0x0204      	MULWF       R4, 0
;__Lib_Math.c,453 :: 		
0x028E	0xF009CFF4  	MOVFF       PRODH, R9
;__Lib_Math.c,454 :: 		
0x0292	0xF008CFF3  	MOVFF       PRODL, R8
;__Lib_Math.c,455 :: 		
0x0296	0x5001      	MOVF        R1, 0, 0
;__Lib_Math.c,456 :: 		
0x0298	0x0205      	MULWF       R5, 0
;__Lib_Math.c,458 :: 		
0x029A	0xF00BCFF4  	MOVFF       PRODH, R11
;__Lib_Math.c,459 :: 		
0x029E	0xF00ACFF3  	MOVFF       PRODL, R10
;__Lib_Math.c,460 :: 		
0x02A2	0x5000      	MOVF        R0, 0, 0
;__Lib_Math.c,461 :: 		
0x02A4	0x0205      	MULWF       R5, 0
;__Lib_Math.c,463 :: 		
0x02A6	0x50F3      	MOVF        PRODL, 0, 0
;__Lib_Math.c,464 :: 		
0x02A8	0x2609      	ADDWF       R9, 1, 0
;__Lib_Math.c,465 :: 		
0x02AA	0x50F4      	MOVF        PRODH, 0, 0
;__Lib_Math.c,466 :: 		
0x02AC	0x220A      	ADDWFC      R10, 1, 0
;__Lib_Math.c,467 :: 		
0x02AE	0x6AE8      	CLRF        WREG, 0
;__Lib_Math.c,468 :: 		
0x02B0	0x220B      	ADDWFC      R11, 1, 0
;__Lib_Math.c,469 :: 		
0x02B2	0x5001      	MOVF        R1, 0, 0
;__Lib_Math.c,470 :: 		
0x02B4	0x0204      	MULWF       R4, 0
;__Lib_Math.c,472 :: 		
0x02B6	0x50F3      	MOVF        PRODL, 0, 0
;__Lib_Math.c,473 :: 		
0x02B8	0x2609      	ADDWF       R9, 1, 0
;__Lib_Math.c,474 :: 		
0x02BA	0x50F4      	MOVF        PRODH, 0, 0
;__Lib_Math.c,475 :: 		
0x02BC	0x220A      	ADDWFC      R10, 1, 0
;__Lib_Math.c,476 :: 		
0x02BE	0x6AE8      	CLRF        WREG, 0
;__Lib_Math.c,477 :: 		
0x02C0	0x220B      	ADDWFC      R11, 1, 0
;__Lib_Math.c,479 :: 		
0x02C2	0xF000C008  	MOVFF       R8, R0
;__Lib_Math.c,480 :: 		
0x02C6	0xF001C009  	MOVFF       R9, R1
;__Lib_Math.c,481 :: 		
0x02CA	0xF002C00A  	MOVFF       R10, R2
;__Lib_Math.c,482 :: 		
0x02CE	0xF003C00B  	MOVFF       R11, R3
;__Lib_Math.c,485 :: 		
L_end_Mul_16X16_U:
0x02D2	0x0012      	RETURN      0
; end of _Mul_16X16_U
__Lib_Glcd__Glcd_getHeader:
;__Lib_Glcd.c,884 :: 		
;__Lib_Glcd.c,888 :: 		
0x02D4	0x0E44      	MOVLW       __Lib_Glcd_headerBuffer
0x02D6	0x0102      	MOVLB       2
0x02D8	0x6F09      	MOVWF       __Lib_Glcd__Glcd_getHeader_ptrH_L0, 1
0x02DA	0x0E01      	MOVLW       hi_addr(__Lib_Glcd_headerBuffer)
0x02DC	0x6F0A      	MOVWF       __Lib_Glcd__Glcd_getHeader_ptrH_L0+1, 1
;__Lib_Glcd.c,889 :: 		
L___Lib_Glcd__Glcd_getHeader167:
0x02DE	0x0E00      	MOVLW       0
0x02E0	0x6E00      	MOVWF       R0 
0x02E2	0x5106      	MOVF        FARG___Lib_Glcd__Glcd_getHeader_count+1, 0, 1
0x02E4	0x5C00      	SUBWF       R0, 0 
0x02E6	0xE102      	BNZ         L___Lib_Glcd__Glcd_getHeader413
0x02E8	0x5105      	MOVF        FARG___Lib_Glcd__Glcd_getHeader_count, 0, 1
0x02EA	0x0800      	SUBLW       0
L___Lib_Glcd__Glcd_getHeader413:
0x02EC	0xE24C      	BC          L___Lib_Glcd__Glcd_getHeader168
;__Lib_Glcd.c,890 :: 		
0x02EE	0xFFE1C14E  	MOVFF       _Glcd_Get_Ext_Data_Ptr+2, FSR1
0x02F2	0xFFE2C14F  	MOVFF       _Glcd_Get_Ext_Data_Ptr+3, FSR1+1
0x02F6	0xFFE6C201  	MOVFF       FARG___Lib_Glcd__Glcd_getHeader_offset, POSTINC1
0x02FA	0xFFE6C202  	MOVFF       FARG___Lib_Glcd__Glcd_getHeader_offset+1, POSTINC1
0x02FE	0xFFE6C203  	MOVFF       FARG___Lib_Glcd__Glcd_getHeader_offset+2, POSTINC1
0x0302	0xFFE6C204  	MOVFF       FARG___Lib_Glcd__Glcd_getHeader_offset+3, POSTINC1
0x0306	0xFFE6C205  	MOVFF       FARG___Lib_Glcd__Glcd_getHeader_count, POSTINC1
0x030A	0xFFE6C206  	MOVFF       FARG___Lib_Glcd__Glcd_getHeader_count+1, POSTINC1
0x030E	0x0EFE      	MOVLW       __Lib_Glcd__Glcd_getHeader_num_L0
0x0310	0x6EE6      	MOVWF       POSTINC1 
0x0312	0x0E01      	MOVLW       hi_addr(__Lib_Glcd__Glcd_getHeader_num_L0)
0x0314	0x6EE6      	MOVWF       POSTINC1 
0x0316	0xF000C14C  	MOVFF       _Glcd_Get_Ext_Data_Ptr, R0
0x031A	0xF001C14D  	MOVFF       _Glcd_Get_Ext_Data_Ptr+1, R1
0x031E	0xDF3D      	RCALL       _____DoIFC
0x0320	0xF207C000  	MOVFF       R0, __Lib_Glcd__Glcd_getHeader_ptr_L0
0x0324	0xF208C001  	MOVFF       R1, __Lib_Glcd__Glcd_getHeader_ptr_L0+1
;__Lib_Glcd.c,891 :: 		
0x0328	0x0101      	MOVLB       1
0x032A	0x6BFC      	CLRF        __Lib_Glcd__Glcd_getHeader_i_L0, 1
0x032C	0x6BFD      	CLRF        __Lib_Glcd__Glcd_getHeader_i_L0+1, 1
L___Lib_Glcd__Glcd_getHeader169:
0x032E	0x51FF      	MOVF        __Lib_Glcd__Glcd_getHeader_num_L0+1, 0, 1
0x0330	0x5DFD      	SUBWF       __Lib_Glcd__Glcd_getHeader_i_L0+1, 0, 1
0x0332	0xE102      	BNZ         L___Lib_Glcd__Glcd_getHeader414
0x0334	0x51FE      	MOVF        __Lib_Glcd__Glcd_getHeader_num_L0, 0, 1
0x0336	0x5DFC      	SUBWF       __Lib_Glcd__Glcd_getHeader_i_L0, 0, 1
L___Lib_Glcd__Glcd_getHeader414:
0x0338	0xE213      	BC          L___Lib_Glcd__Glcd_getHeader170
;__Lib_Glcd.c,892 :: 		
0x033A	0xFFE9C207  	MOVFF       __Lib_Glcd__Glcd_getHeader_ptr_L0, FSR0L
0x033E	0xFFEAC208  	MOVFF       __Lib_Glcd__Glcd_getHeader_ptr_L0+1, FSR0H
0x0342	0xFFE1C209  	MOVFF       __Lib_Glcd__Glcd_getHeader_ptrH_L0, FSR1L
0x0346	0xFFE2C20A  	MOVFF       __Lib_Glcd__Glcd_getHeader_ptrH_L0+1, FSR1H
0x034A	0xFFE6CFEE  	MOVFF       POSTINC0, POSTINC1
;__Lib_Glcd.c,893 :: 		
0x034E	0x0102      	MOVLB       2
0x0350	0x4B09      	INFSNZ      __Lib_Glcd__Glcd_getHeader_ptrH_L0, 1, 1
0x0352	0x2B0A      	INCF        __Lib_Glcd__Glcd_getHeader_ptrH_L0+1, 1, 1
;__Lib_Glcd.c,894 :: 		
0x0354	0x4B07      	INFSNZ      __Lib_Glcd__Glcd_getHeader_ptr_L0, 1, 1
0x0356	0x2B08      	INCF        __Lib_Glcd__Glcd_getHeader_ptr_L0+1, 1, 1
;__Lib_Glcd.c,891 :: 		
0x0358	0x0101      	MOVLB       1
0x035A	0x4BFC      	INFSNZ      __Lib_Glcd__Glcd_getHeader_i_L0, 1, 1
0x035C	0x2BFD      	INCF        __Lib_Glcd__Glcd_getHeader_i_L0+1, 1, 1
;__Lib_Glcd.c,895 :: 		
0x035E	0xD7E7      	BRA         L___Lib_Glcd__Glcd_getHeader169
L___Lib_Glcd__Glcd_getHeader170:
;__Lib_Glcd.c,896 :: 		
0x0360	0x51FE      	MOVF        __Lib_Glcd__Glcd_getHeader_num_L0, 0, 1
0x0362	0x0102      	MOVLB       2
0x0364	0x5F05      	SUBWF       FARG___Lib_Glcd__Glcd_getHeader_count, 1, 1
0x0366	0x0101      	MOVLB       1
0x0368	0x51FF      	MOVF        __Lib_Glcd__Glcd_getHeader_num_L0+1, 0, 1
0x036A	0x0102      	MOVLB       2
0x036C	0x5B06      	SUBWFB      FARG___Lib_Glcd__Glcd_getHeader_count+1, 1, 1
;__Lib_Glcd.c,897 :: 		
0x036E	0x0101      	MOVLB       1
0x0370	0x51FE      	MOVF        __Lib_Glcd__Glcd_getHeader_num_L0, 0, 1
0x0372	0x0102      	MOVLB       2
0x0374	0x2701      	ADDWF       FARG___Lib_Glcd__Glcd_getHeader_offset, 1, 1
0x0376	0x0101      	MOVLB       1
0x0378	0x51FF      	MOVF        __Lib_Glcd__Glcd_getHeader_num_L0+1, 0, 1
0x037A	0x0102      	MOVLB       2
0x037C	0x2302      	ADDWFC      FARG___Lib_Glcd__Glcd_getHeader_offset+1, 1, 1
0x037E	0x0E00      	MOVLW       0
0x0380	0x2303      	ADDWFC      FARG___Lib_Glcd__Glcd_getHeader_offset+2, 1, 1
0x0382	0x2304      	ADDWFC      FARG___Lib_Glcd__Glcd_getHeader_offset+3, 1, 1
;__Lib_Glcd.c,898 :: 		
0x0384	0xD7AC      	BRA         L___Lib_Glcd__Glcd_getHeader167
L___Lib_Glcd__Glcd_getHeader168:
;__Lib_Glcd.c,899 :: 		
L_end__Glcd_getHeader:
0x0386	0x0012      	RETURN      0
; end of __Lib_Glcd__Glcd_getHeader
_FIXSIGN32:
;__Lib_MathDouble.c,117 :: 		
;__Lib_MathDouble.c,121 :: 		
0x0388	0xAE0A      	BTFSS       R10, 7, 0
;__Lib_MathDouble.c,122 :: 		
0x038A	0x9E02      	BCF         R2, 7, 0
;__Lib_MathDouble.c,123 :: 		
0x038C	0x0E00      	MOVLW       0
;__Lib_MathDouble.c,125 :: 		
L_end_FIXSIGN32:
0x038E	0x0012      	RETURN      0
; end of _FIXSIGN32
_draw_player:
;glcd.c,190 :: 		void draw_player(unsigned short x, unsigned short y){
;glcd.c,191 :: 		Glcd_Dot(x+2, y, 1);
0x0390	0x0E02      	MOVLW       2
0x0392	0x0101      	MOVLB       1
0x0394	0x25FC      	ADDWF       FARG_draw_player_x, 0, 1
0x0396	0x0102      	MOVLB       2
0x0398	0x6F0B      	MOVWF       FARG_Glcd_Dot_x_pos, 1
0x039A	0xF20CC1FD  	MOVFF       FARG_draw_player_y, FARG_Glcd_Dot_y_pos
0x039E	0x0E01      	MOVLW       1
0x03A0	0x6F0D      	MOVWF       FARG_Glcd_Dot_color, 1
0x03A2	0xDEA1      	RCALL       _Glcd_Dot
;glcd.c,192 :: 		Glcd_Dot(x+2, y+2, 1);
0x03A4	0x0E02      	MOVLW       2
0x03A6	0x0101      	MOVLB       1
0x03A8	0x25FC      	ADDWF       FARG_draw_player_x, 0, 1
0x03AA	0x0102      	MOVLB       2
0x03AC	0x6F0B      	MOVWF       FARG_Glcd_Dot_x_pos, 1
0x03AE	0x0E02      	MOVLW       2
0x03B0	0x0101      	MOVLB       1
0x03B2	0x25FD      	ADDWF       FARG_draw_player_y, 0, 1
0x03B4	0x0102      	MOVLB       2
0x03B6	0x6F0C      	MOVWF       FARG_Glcd_Dot_y_pos, 1
0x03B8	0x0E01      	MOVLW       1
0x03BA	0x6F0D      	MOVWF       FARG_Glcd_Dot_color, 1
0x03BC	0xDE94      	RCALL       _Glcd_Dot
;glcd.c,193 :: 		Glcd_Dot(x+4, y+4, 1);
0x03BE	0x0E04      	MOVLW       4
0x03C0	0x0101      	MOVLB       1
0x03C2	0x25FC      	ADDWF       FARG_draw_player_x, 0, 1
0x03C4	0x0102      	MOVLB       2
0x03C6	0x6F0B      	MOVWF       FARG_Glcd_Dot_x_pos, 1
0x03C8	0x0E04      	MOVLW       4
0x03CA	0x0101      	MOVLB       1
0x03CC	0x25FD      	ADDWF       FARG_draw_player_y, 0, 1
0x03CE	0x0102      	MOVLB       2
0x03D0	0x6F0C      	MOVWF       FARG_Glcd_Dot_y_pos, 1
0x03D2	0x0E01      	MOVLW       1
0x03D4	0x6F0D      	MOVWF       FARG_Glcd_Dot_color, 1
0x03D6	0xDE87      	RCALL       _Glcd_Dot
;glcd.c,194 :: 		Glcd_Dot(x, y+4, 1);
0x03D8	0xF20BC1FC  	MOVFF       FARG_draw_player_x, FARG_Glcd_Dot_x_pos
0x03DC	0x0E04      	MOVLW       4
0x03DE	0x0101      	MOVLB       1
0x03E0	0x25FD      	ADDWF       FARG_draw_player_y, 0, 1
0x03E2	0x0102      	MOVLB       2
0x03E4	0x6F0C      	MOVWF       FARG_Glcd_Dot_y_pos, 1
0x03E6	0x0E01      	MOVLW       1
0x03E8	0x6F0D      	MOVWF       FARG_Glcd_Dot_color, 1
0x03EA	0xDE7D      	RCALL       _Glcd_Dot
;glcd.c,195 :: 		}
L_end_draw_player:
0x03EC	0x0012      	RETURN      0
; end of _draw_player
_RES032:
;__Lib_MathDouble.c,128 :: 		
;__Lib_MathDouble.c,134 :: 		
0x03EE	0x6A02      	CLRF        R2, 0
;__Lib_MathDouble.c,135 :: 		
0x03F0	0x6A01      	CLRF        R1, 0
;__Lib_MathDouble.c,136 :: 		
0x03F2	0x6A00      	CLRF        R0, 0
;__Lib_MathDouble.c,137 :: 		
0x03F4	0x6A08      	CLRF        R8, 0
;__Lib_MathDouble.c,138 :: 		
0x03F6	0x6A03      	CLRF        R3, 0
;__Lib_MathDouble.c,139 :: 		
0x03F8	0x0E00      	MOVLW       0
;__Lib_MathDouble.c,141 :: 		
L_end_RES032:
0x03FA	0x0012      	RETURN      0
; end of _RES032
_SETFUN32:
;__Lib_MathDouble.c,144 :: 		
;__Lib_MathDouble.c,152 :: 		
0x03FC	0x840B      	BSF         R11, 2, 0
;__Lib_MathDouble.c,153 :: 		
0x03FE	0xAE0B      	BTFSS       R11, 7, 0
;__Lib_MathDouble.c,154 :: 		
0x0400	0xF002EF09  	GOTO        SETFUN32EEE
;__Lib_MathDouble.c,156 :: 		
0x0404	0x0E01      	MOVLW       1
;__Lib_MathDouble.c,157 :: 		
0x0406	0x6E03      	MOVWF       R3, 0
;__Lib_MathDouble.c,158 :: 		
0x0408	0x6A02      	CLRF        R2, 0
;__Lib_MathDouble.c,159 :: 		
0x040A	0x6A01      	CLRF        R1, 0
;__Lib_MathDouble.c,160 :: 		
0x040C	0x6A00      	CLRF        R0, 0
;__Lib_MathDouble.c,161 :: 		
0x040E	0x360A      	RLCF        R10, 1, 0
;__Lib_MathDouble.c,162 :: 		
0x0410	0x3202      	RRCF        R2, 1, 0
;__Lib_MathDouble.c,163 :: 		
SETFUN32EEE:
;__Lib_MathDouble.c,164 :: 		
0x0412	0x0EFF      	MOVLW       255
;__Lib_MathDouble.c,166 :: 		
L_end_SETFUN32:
0x0414	0x0012      	RETURN      0
; end of _SETFUN32
__Lib_Glcd_Glcd_Move_Cursor:
;__Lib_Glcd.c,1182 :: 		
;__Lib_Glcd.c,1183 :: 		
0x0416	0xF135C1E2  	MOVFF       FARG___Lib_Glcd_Glcd_Move_Cursor__x, __Lib_Glcd_x_cord
0x041A	0xF136C1E3  	MOVFF       FARG___Lib_Glcd_Glcd_Move_Cursor__x+1, __Lib_Glcd_x_cord+1
;__Lib_Glcd.c,1184 :: 		
0x041E	0xF11CC1E4  	MOVFF       FARG___Lib_Glcd_Glcd_Move_Cursor__y, __Lib_Glcd_y_cord
0x0422	0xF11DC1E5  	MOVFF       FARG___Lib_Glcd_Glcd_Move_Cursor__y+1, __Lib_Glcd_y_cord+1
;__Lib_Glcd.c,1185 :: 		
L_end_Glcd_Move_Cursor:
0x0426	0x0012      	RETURN      0
; end of __Lib_Glcd_Glcd_Move_Cursor
_NRM3232:
;__Lib_MathDouble.c,455 :: 		
;__Lib_MathDouble.c,463 :: 		
0x0428	0x6A0C      	CLRF        R12, 0
;__Lib_MathDouble.c,464 :: 		
0x042A	0x6A0E      	CLRF        R14, 0
;__Lib_MathDouble.c,465 :: 		
0x042C	0x5002      	MOVF        R2, 0, 0
;__Lib_MathDouble.c,466 :: 		
0x042E	0xA4D8      	BTFSS       STATUS, 2, 0
;__Lib_MathDouble.c,467 :: 		
0x0430	0xF002EF2D  	GOTO        NORM3232
;__Lib_MathDouble.c,468 :: 		
0x0434	0xF002C001  	MOVFF       R1, R2
;__Lib_MathDouble.c,469 :: 		
0x0438	0xF001C000  	MOVFF       R0, R1
;__Lib_MathDouble.c,470 :: 		
0x043C	0x6A00      	CLRF        R0, 0
;__Lib_MathDouble.c,471 :: 		
0x043E	0x860E      	BSF         R14, 3, 0
;__Lib_MathDouble.c,473 :: 		
0x0440	0x5002      	MOVF        R2, 0, 0
;__Lib_MathDouble.c,474 :: 		
0x0442	0xA4D8      	BTFSS       STATUS, 2, 0
;__Lib_MathDouble.c,475 :: 		
0x0444	0xF002EF2D  	GOTO        NORM3232
;__Lib_MathDouble.c,476 :: 		
0x0448	0xF002C001  	MOVFF       R1, R2
;__Lib_MathDouble.c,477 :: 		
0x044C	0x6A01      	CLRF        R1, 0
;__Lib_MathDouble.c,478 :: 		
0x044E	0x960E      	BCF         R14, 3, 0
;__Lib_MathDouble.c,479 :: 		
0x0450	0x880E      	BSF         R14, 4, 0
;__Lib_MathDouble.c,481 :: 		
0x0452	0x5002      	MOVF        R2, 0, 0
;__Lib_MathDouble.c,482 :: 		
0x0454	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_MathDouble.c,483 :: 		
0x0456	0xF002EF3F  	GOTO        JPNRES032
;__Lib_MathDouble.c,484 :: 		
NORM3232:
;__Lib_MathDouble.c,485 :: 		
0x045A	0x500E      	MOVF        R14, 0, 0
;__Lib_MathDouble.c,486 :: 		
0x045C	0x5E03      	SUBWF       R3, 1, 0
;__Lib_MathDouble.c,487 :: 		
0x045E	0xA4D8      	BTFSS       STATUS, 2, 0
;__Lib_MathDouble.c,488 :: 		
0x0460	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_MathDouble.c,489 :: 		
0x0462	0xF002EF44  	GOTO        JPNSETFUN32
;__Lib_MathDouble.c,490 :: 		
0x0466	0x90D8      	BCF         STATUS, 0, 0
;__Lib_MathDouble.c,491 :: 		
NORM3232A:
;__Lib_MathDouble.c,492 :: 		
0x0468	0xBE02      	BTFSC       R2, 7, 0
;__Lib_MathDouble.c,493 :: 		
0x046A	0xF002EF49  	GOTO        JMPNFIXSIGN32
;__Lib_MathDouble.c,494 :: 		
0x046E	0x3600      	RLCF        R0, 1, 0
;__Lib_MathDouble.c,495 :: 		
0x0470	0x3601      	RLCF        R1, 1, 0
;__Lib_MathDouble.c,496 :: 		
0x0472	0x3602      	RLCF        R2, 1, 0
;__Lib_MathDouble.c,497 :: 		
0x0474	0x2E03      	DECFSZ      R3, 1, 0
;__Lib_MathDouble.c,498 :: 		
0x0476	0xF002EF34  	GOTO        NORM3232A
;__Lib_MathDouble.c,499 :: 		
0x047A	0xF002EF44  	GOTO        JPNSETFUN32
;__Lib_MathDouble.c,500 :: 		
JPNRES032:
;__Lib_MathDouble.c,501 :: 		
0x047E	0x0E01      	MOVLW       1
;__Lib_MathDouble.c,502 :: 		
0x0480	0x6E0C      	MOVWF       R12, 0
;__Lib_MathDouble.c,504 :: 		
0x0482	0xDFB5      	RCALL       _RES032
;__Lib_MathDouble.c,506 :: 		
0x0484	0xF002EF4C  	GOTO        NORM32EEE
;__Lib_MathDouble.c,507 :: 		
JPNSETFUN32:
;__Lib_MathDouble.c,508 :: 		
0x0488	0x0E02      	MOVLW       2
;__Lib_MathDouble.c,509 :: 		
0x048A	0x6E0C      	MOVWF       R12, 0
;__Lib_MathDouble.c,511 :: 		
0x048C	0xDFB7      	RCALL       _SETFUN32
;__Lib_MathDouble.c,513 :: 		
0x048E	0xF002EF4C  	GOTO        NORM32EEE
;__Lib_MathDouble.c,514 :: 		
JMPNFIXSIGN32:
;__Lib_MathDouble.c,515 :: 		
0x0492	0x0E04      	MOVLW       4
;__Lib_MathDouble.c,516 :: 		
0x0494	0x6E0C      	MOVWF       R12, 0
;__Lib_MathDouble.c,518 :: 		
0x0496	0xDF78      	RCALL       _FIXSIGN32
;__Lib_MathDouble.c,520 :: 		
NORM32EEE:
;__Lib_MathDouble.c,527 :: 		
L_end_NRM3232:
0x0498	0x0012      	RETURN      0
; end of _NRM3232
_Compare_Double:
;__Lib_MathDouble.c,2518 :: 		
;__Lib_MathDouble.c,2529 :: 		
0x049A	0x6A0A      	CLRF        R10, 0
;__Lib_MathDouble.c,2530 :: 		
0x049C	0x5003      	MOVF        R3, 0, 0
;__Lib_MathDouble.c,2531 :: 		
0x049E	0xA4D8      	BTFSS       STATUS, 2, 0
;__Lib_MathDouble.c,2532 :: 		
0x04A0	0x800A      	BSF         R10, 0, 0
;__Lib_MathDouble.c,2533 :: 		
0x04A2	0x5007      	MOVF        R7, 0, 0
;__Lib_MathDouble.c,2534 :: 		
0x04A4	0xA4D8      	BTFSS       STATUS, 2, 0
;__Lib_MathDouble.c,2535 :: 		
0x04A6	0x820A      	BSF         R10, 1, 0
;__Lib_MathDouble.c,2537 :: 		
0x04A8	0x500A      	MOVF        R10, 0, 0
;__Lib_MathDouble.c,2538 :: 		
0x04AA	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_MathDouble.c,2539 :: 		
0x04AC	0xF002EFB0  	GOTO        COMPARE_EQU
;__Lib_MathDouble.c,2540 :: 		
0x04B0	0x0A03      	XORLW       3
;__Lib_MathDouble.c,2541 :: 		
0x04B2	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_MathDouble.c,2542 :: 		
0x04B4	0xF002EF69  	GOTO        COMPARE_NOTZERO
;__Lib_MathDouble.c,2544 :: 		
0x04B8	0xB00A      	BTFSC       R10, 0, 0
;__Lib_MathDouble.c,2545 :: 		
0x04BA	0xF002EF64  	GOTO        COMPARE_XNOTZERO
;__Lib_MathDouble.c,2547 :: 		
0x04BE	0xAE06      	BTFSS       R6, 7, 0
;__Lib_MathDouble.c,2548 :: 		
0x04C0	0xF002EFAE  	GOTO        COMPARE_LT
;__Lib_MathDouble.c,2549 :: 		
0x04C4	0xF002EFAC  	GOTO        COMPARE_GT
;__Lib_MathDouble.c,2550 :: 		
COMPARE_XNOTZERO:
;__Lib_MathDouble.c,2551 :: 		
0x04C8	0xAE02      	BTFSS       R2, 7, 0
;__Lib_MathDouble.c,2552 :: 		
0x04CA	0xF002EFAC  	GOTO        COMPARE_GT
;__Lib_MathDouble.c,2553 :: 		
0x04CE	0xF002EFAE  	GOTO        COMPARE_LT
;__Lib_MathDouble.c,2555 :: 		
COMPARE_NOTZERO:
;__Lib_MathDouble.c,2556 :: 		
0x04D2	0x5002      	MOVF        R2, 0, 0
;__Lib_MathDouble.c,2557 :: 		
0x04D4	0x0B80      	ANDLW       128
;__Lib_MathDouble.c,2558 :: 		
0x04D6	0x6E0A      	MOVWF       R10, 0
;__Lib_MathDouble.c,2559 :: 		
0x04D8	0x9E02      	BCF         R2, 7, 0
;__Lib_MathDouble.c,2561 :: 		
0x04DA	0x5006      	MOVF        R6, 0, 0
;__Lib_MathDouble.c,2562 :: 		
0x04DC	0x0B80      	ANDLW       128
;__Lib_MathDouble.c,2563 :: 		
0x04DE	0x9E06      	BCF         R6, 7, 0
;__Lib_MathDouble.c,2565 :: 		
0x04E0	0x180A      	XORWF       R10, 0, 0
;__Lib_MathDouble.c,2566 :: 		
0x04E2	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_MathDouble.c,2567 :: 		
0x04E4	0xF002EF7A  	GOTO        COMPARE_TESTALL
;__Lib_MathDouble.c,2569 :: 		
0x04E8	0x500A      	MOVF        R10, 0, 0
;__Lib_MathDouble.c,2570 :: 		
0x04EA	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_MathDouble.c,2571 :: 		
0x04EC	0xF002EFAC  	GOTO        COMPARE_GT
;__Lib_MathDouble.c,2572 :: 		
0x04F0	0xF002EFAE  	GOTO        COMPARE_LT
;__Lib_MathDouble.c,2574 :: 		
COMPARE_TESTALL:
;__Lib_MathDouble.c,2575 :: 		
0x04F4	0x5007      	MOVF        R7, 0, 0
;__Lib_MathDouble.c,2576 :: 		
0x04F6	0x5C03      	SUBWF       R3, 0, 0
;__Lib_MathDouble.c,2577 :: 		
0x04F8	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_MathDouble.c,2578 :: 		
0x04FA	0xF002EF84  	GOTO        COMPARE_C1
;__Lib_MathDouble.c,2579 :: 		
0x04FE	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_MathDouble.c,2580 :: 		
0x0500	0xF002EFA0  	GOTO        GT_FALSE
;__Lib_MathDouble.c,2581 :: 		
0x0504	0xF002EFA6  	GOTO        GT_TRUE
;__Lib_MathDouble.c,2582 :: 		
COMPARE_C1:
;__Lib_MathDouble.c,2583 :: 		
0x0508	0x5006      	MOVF        R6, 0, 0
;__Lib_MathDouble.c,2584 :: 		
0x050A	0x5C02      	SUBWF       R2, 0, 0
;__Lib_MathDouble.c,2585 :: 		
0x050C	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_MathDouble.c,2586 :: 		
0x050E	0xF002EF8E  	GOTO        COMPARE_C2
;__Lib_MathDouble.c,2587 :: 		
0x0512	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_MathDouble.c,2588 :: 		
0x0514	0xF002EFA0  	GOTO        GT_FALSE
;__Lib_MathDouble.c,2589 :: 		
0x0518	0xF002EFA6  	GOTO        GT_TRUE
;__Lib_MathDouble.c,2590 :: 		
COMPARE_C2:
;__Lib_MathDouble.c,2591 :: 		
0x051C	0x5005      	MOVF        R5, 0, 0
;__Lib_MathDouble.c,2592 :: 		
0x051E	0x5C01      	SUBWF       R1, 0, 0
;__Lib_MathDouble.c,2593 :: 		
0x0520	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_MathDouble.c,2594 :: 		
0x0522	0xF002EF98  	GOTO        COMPARE_C3
;__Lib_MathDouble.c,2595 :: 		
0x0526	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_MathDouble.c,2596 :: 		
0x0528	0xF002EFA0  	GOTO        GT_FALSE
;__Lib_MathDouble.c,2597 :: 		
0x052C	0xF002EFA6  	GOTO        GT_TRUE
;__Lib_MathDouble.c,2598 :: 		
COMPARE_C3:
;__Lib_MathDouble.c,2599 :: 		
0x0530	0x5004      	MOVF        R4, 0, 0
;__Lib_MathDouble.c,2600 :: 		
0x0532	0x5C00      	SUBWF       R0, 0, 0
;__Lib_MathDouble.c,2601 :: 		
0x0534	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_MathDouble.c,2602 :: 		
0x0536	0xF002EFB0  	GOTO        COMPARE_EQU
;__Lib_MathDouble.c,2603 :: 		
0x053A	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_MathDouble.c,2604 :: 		
0x053C	0xF002EFA6  	GOTO        GT_TRUE
;__Lib_MathDouble.c,2606 :: 		
GT_FALSE:
;__Lib_MathDouble.c,2607 :: 		
0x0540	0x520A      	MOVF        R10, 1, 0
;__Lib_MathDouble.c,2608 :: 		
0x0542	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_MathDouble.c,2609 :: 		
0x0544	0xF002EFAE  	GOTO        COMPARE_LT
;__Lib_MathDouble.c,2610 :: 		
0x0548	0xF002EFAC  	GOTO        COMPARE_GT
;__Lib_MathDouble.c,2611 :: 		
GT_TRUE:
;__Lib_MathDouble.c,2612 :: 		
0x054C	0x520A      	MOVF        R10, 1, 0
;__Lib_MathDouble.c,2613 :: 		
0x054E	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_MathDouble.c,2614 :: 		
0x0550	0xF002EFAC  	GOTO        COMPARE_GT
;__Lib_MathDouble.c,2615 :: 		
0x0554	0xF002EFAE  	GOTO        COMPARE_LT
;__Lib_MathDouble.c,2617 :: 		
COMPARE_GT:
;__Lib_MathDouble.c,2620 :: 		
0x0558	0x80D8      	BSF         STATUS, 0, 0
;__Lib_MathDouble.c,2621 :: 		
0x055A	0x0012      	RETURN      0
;__Lib_MathDouble.c,2622 :: 		
COMPARE_LT:
;__Lib_MathDouble.c,2625 :: 		
0x055C	0x90D8      	BCF         STATUS, 0, 0
;__Lib_MathDouble.c,2626 :: 		
0x055E	0x0012      	RETURN      0
;__Lib_MathDouble.c,2627 :: 		
COMPARE_EQU:
;__Lib_MathDouble.c,2630 :: 		
0x0560	0x80D8      	BSF         STATUS, 0, 0
;__Lib_MathDouble.c,2631 :: 		
0x0562	0x84D8      	BSF         STATUS, 2, 0
;__Lib_MathDouble.c,2632 :: 		
0x0564	0x0012      	RETURN      0
;__Lib_MathDouble.c,2634 :: 		
L_end_Compare_Double:
0x0566	0x0012      	RETURN      0
; end of _Compare_Double
__Lib_Glcd__Glcd_Write_Char_AdvE:
;__Lib_Glcd.c,932 :: 		
;__Lib_Glcd.c,934 :: 		
0x0568	0x0101      	MOVLB       1
0x056A	0x6BF7      	CLRF        __Lib_Glcd__Glcd_Write_Char_AdvE_chWidth_L0, 1
0x056C	0x6BF8      	CLRF        __Lib_Glcd__Glcd_Write_Char_AdvE_x_L0, 1
0x056E	0x6BF9      	CLRF        __Lib_Glcd__Glcd_Write_Char_AdvE_x_L0+1, 1
0x0570	0x6BFA      	CLRF        __Lib_Glcd__Glcd_Write_Char_AdvE_temp_L0, 1
;__Lib_Glcd.c,945 :: 		
0x0572	0x5122      	MOVF        __Lib_Glcd__fontFirstChar+1, 0, 1
0x0574	0x5DE3      	SUBWF       FARG___Lib_Glcd__Glcd_Write_Char_AdvE_ch+1, 0, 1
0x0576	0xE102      	BNZ         L___Lib_Glcd__Glcd_Write_Char_AdvE418
0x0578	0x5121      	MOVF        __Lib_Glcd__fontFirstChar, 0, 1
0x057A	0x5DE2      	SUBWF       FARG___Lib_Glcd__Glcd_Write_Char_AdvE_ch, 0, 1
L___Lib_Glcd__Glcd_Write_Char_AdvE418:
0x057C	0xE201      	BC          L___Lib_Glcd__Glcd_Write_Char_AdvE172
;__Lib_Glcd.c,946 :: 		
0x057E	0xD1BF      	BRA         L_end__Glcd_Write_Char_AdvE
L___Lib_Glcd__Glcd_Write_Char_AdvE172:
;__Lib_Glcd.c,947 :: 		
0x0580	0x51E3      	MOVF        FARG___Lib_Glcd__Glcd_Write_Char_AdvE_ch+1, 0, 1
0x0582	0x5D1F      	SUBWF       __Lib_Glcd__fontLastChar+1, 0, 1
0x0584	0xE102      	BNZ         L___Lib_Glcd__Glcd_Write_Char_AdvE419
0x0586	0x51E2      	MOVF        FARG___Lib_Glcd__Glcd_Write_Char_AdvE_ch, 0, 1
0x0588	0x5D1E      	SUBWF       __Lib_Glcd__fontLastChar, 0, 1
L___Lib_Glcd__Glcd_Write_Char_AdvE419:
0x058A	0xE201      	BC          L___Lib_Glcd__Glcd_Write_Char_AdvE173
;__Lib_Glcd.c,948 :: 		
0x058C	0xD1B8      	BRA         L_end__Glcd_Write_Char_AdvE
L___Lib_Glcd__Glcd_Write_Char_AdvE173:
;__Lib_Glcd.c,951 :: 		
0x058E	0x5121      	MOVF        __Lib_Glcd__fontFirstChar, 0, 1
0x0590	0x5DE2      	SUBWF       FARG___Lib_Glcd__Glcd_Write_Char_AdvE_ch, 0, 1
0x0592	0x6E03      	MOVWF       R3 
0x0594	0x5122      	MOVF        __Lib_Glcd__fontFirstChar+1, 0, 1
0x0596	0x59E3      	SUBWFB      FARG___Lib_Glcd__Glcd_Write_Char_AdvE_ch+1, 0, 1
0x0598	0x6E04      	MOVWF       R4 
0x059A	0xF000C003  	MOVFF       R3, R0
0x059E	0xF001C004  	MOVFF       R4, R1
0x05A2	0x3600      	RLCF        R0, 1 
0x05A4	0x9000      	BCF         R0, 0 
0x05A6	0x3601      	RLCF        R1, 1 
0x05A8	0x3600      	RLCF        R0, 1 
0x05AA	0x9000      	BCF         R0, 0 
0x05AC	0x3601      	RLCF        R1, 1 
;__Lib_Glcd.c,952 :: 		
0x05AE	0x0E08      	MOVLW       8
0x05B0	0x2539      	ADDWF       __Lib_Glcd_activeExtFont, 0, 1
0x05B2	0x0102      	MOVLB       2
0x05B4	0x6F01      	MOVWF       FARG___Lib_Glcd__Glcd_getHeader_offset, 1
0x05B6	0x0E00      	MOVLW       0
0x05B8	0x0101      	MOVLB       1
0x05BA	0x213A      	ADDWFC      __Lib_Glcd_activeExtFont+1, 0, 1
0x05BC	0x0102      	MOVLB       2
0x05BE	0x6F02      	MOVWF       FARG___Lib_Glcd__Glcd_getHeader_offset+1, 1
0x05C0	0x0E00      	MOVLW       0
0x05C2	0x0101      	MOVLB       1
0x05C4	0x213B      	ADDWFC      __Lib_Glcd_activeExtFont+2, 0, 1
0x05C6	0x0102      	MOVLB       2
0x05C8	0x6F03      	MOVWF       FARG___Lib_Glcd__Glcd_getHeader_offset+2, 1
0x05CA	0x0E00      	MOVLW       0
0x05CC	0x0101      	MOVLB       1
0x05CE	0x213C      	ADDWFC      __Lib_Glcd_activeExtFont+3, 0, 1
0x05D0	0x0102      	MOVLB       2
0x05D2	0x6F04      	MOVWF       FARG___Lib_Glcd__Glcd_getHeader_offset+3, 1
0x05D4	0x5000      	MOVF        R0, 0 
0x05D6	0x2701      	ADDWF       FARG___Lib_Glcd__Glcd_getHeader_offset, 1, 1
0x05D8	0x5001      	MOVF        R1, 0 
0x05DA	0x2302      	ADDWFC      FARG___Lib_Glcd__Glcd_getHeader_offset+1, 1, 1
0x05DC	0x0E00      	MOVLW       0
0x05DE	0x2303      	ADDWFC      FARG___Lib_Glcd__Glcd_getHeader_offset+2, 1, 1
0x05E0	0x2304      	ADDWFC      FARG___Lib_Glcd__Glcd_getHeader_offset+3, 1, 1
;__Lib_Glcd.c,955 :: 		
0x05E2	0x0E04      	MOVLW       4
0x05E4	0x6F05      	MOVWF       FARG___Lib_Glcd__Glcd_getHeader_count, 1
0x05E6	0x0E00      	MOVLW       0
0x05E8	0x6F06      	MOVWF       FARG___Lib_Glcd__Glcd_getHeader_count+1, 1
0x05EA	0xDE74      	RCALL       __Lib_Glcd__Glcd_getHeader
;__Lib_Glcd.c,956 :: 		
0x05EC	0x0E44      	MOVLW       __Lib_Glcd_headerBuffer
0x05EE	0x0101      	MOVLB       1
0x05F0	0x6FF5      	MOVWF       __Lib_Glcd__Glcd_Write_Char_AdvE_ptr_L0, 1
0x05F2	0x0E01      	MOVLW       hi_addr(__Lib_Glcd_headerBuffer)
0x05F4	0x6FF6      	MOVWF       __Lib_Glcd__Glcd_Write_Char_AdvE_ptr_L0+1, 1
;__Lib_Glcd.c,958 :: 		
0x05F6	0xFFE9C1F5  	MOVFF       __Lib_Glcd__Glcd_Write_Char_AdvE_ptr_L0, FSR0L
0x05FA	0xFFEAC1F6  	MOVFF       __Lib_Glcd__Glcd_Write_Char_AdvE_ptr_L0+1, FSR0H
0x05FE	0xF1FBCFEE  	MOVFF       POSTINC0, FLOC___Lib_Glcd__Glcd_Write_Char_AdvE
0x0602	0xF1F7C1FB  	MOVFF       FLOC___Lib_Glcd__Glcd_Write_Char_AdvE, __Lib_Glcd__Glcd_Write_Char_AdvE_chWidth_L0
;__Lib_Glcd.c,960 :: 		
0x0606	0x0E01      	MOVLW       1
0x0608	0x25F5      	ADDWF       __Lib_Glcd__Glcd_Write_Char_AdvE_ptr_L0, 0, 1
0x060A	0x6EE9      	MOVWF       FSR0L 
0x060C	0x0E00      	MOVLW       0
0x060E	0x21F6      	ADDWFC      __Lib_Glcd__Glcd_Write_Char_AdvE_ptr_L0+1, 0, 1
0x0610	0x6EEA      	MOVWF       FSR0L+1 
0x0612	0xF004CFEE  	MOVFF       POSTINC0, R4
0x0616	0x0E00      	MOVLW       0
0x0618	0x6E05      	MOVWF       R5 
0x061A	0x6E06      	MOVWF       R6 
0x061C	0x6E07      	MOVWF       R7 
0x061E	0x0E02      	MOVLW       2
0x0620	0x25F5      	ADDWF       __Lib_Glcd__Glcd_Write_Char_AdvE_ptr_L0, 0, 1
0x0622	0x6EE9      	MOVWF       FSR0L 
0x0624	0x0E00      	MOVLW       0
0x0626	0x21F6      	ADDWFC      __Lib_Glcd__Glcd_Write_Char_AdvE_ptr_L0+1, 0, 1
0x0628	0x6EEA      	MOVWF       FSR0L+1 
0x062A	0xF003CFEE  	MOVFF       POSTINC0, R3
0x062E	0xF001C003  	MOVFF       R3, R1
0x0632	0x6A00      	CLRF        R0 
0x0634	0x0E00      	MOVLW       0
0x0636	0x6E02      	MOVWF       R2 
0x0638	0x6E03      	MOVWF       R3 
0x063A	0x5004      	MOVF        R4, 0 
0x063C	0x2600      	ADDWF       R0, 1 
0x063E	0x5005      	MOVF        R5, 0 
0x0640	0x2201      	ADDWFC      R1, 1 
0x0642	0x5006      	MOVF        R6, 0 
0x0644	0x2202      	ADDWFC      R2, 1 
0x0646	0x5007      	MOVF        R7, 0 
0x0648	0x2203      	ADDWFC      R3, 1 
;__Lib_Glcd.c,962 :: 		
0x064A	0x5000      	MOVF        R0, 0 
0x064C	0x2539      	ADDWF       __Lib_Glcd_activeExtFont, 0, 1
0x064E	0x6FE9      	MOVWF       __Lib_Glcd__Glcd_Write_Char_AdvE_pChBitMap_L0, 1
0x0650	0x5001      	MOVF        R1, 0 
0x0652	0x213A      	ADDWFC      __Lib_Glcd_activeExtFont+1, 0, 1
0x0654	0x6FEA      	MOVWF       __Lib_Glcd__Glcd_Write_Char_AdvE_pChBitMap_L0+1, 1
0x0656	0x5002      	MOVF        R2, 0 
0x0658	0x213B      	ADDWFC      __Lib_Glcd_activeExtFont+2, 0, 1
0x065A	0x6FEB      	MOVWF       __Lib_Glcd__Glcd_Write_Char_AdvE_pChBitMap_L0+2, 1
0x065C	0x5003      	MOVF        R3, 0 
0x065E	0x213C      	ADDWFC      __Lib_Glcd_activeExtFont+3, 0, 1
0x0660	0x6FEC      	MOVWF       __Lib_Glcd__Glcd_Write_Char_AdvE_pChBitMap_L0+3, 1
;__Lib_Glcd.c,964 :: 		
0x0662	0xF000C1FB  	MOVFF       FLOC___Lib_Glcd__Glcd_Write_Char_AdvE, R0
0x0666	0x3200      	RRCF        R0, 1 
0x0668	0x9E00      	BCF         R0, 7 
0x066A	0x3200      	RRCF        R0, 1 
0x066C	0x9E00      	BCF         R0, 7 
0x066E	0x3200      	RRCF        R0, 1 
0x0670	0x9E00      	BCF         R0, 7 
0x0672	0x0E00      	MOVLW       0
0x0674	0x6E01      	MOVWF       R1 
0x0676	0xF004C123  	MOVFF       __Lib_Glcd__fontHeight, R4
0x067A	0xF005C124  	MOVFF       __Lib_Glcd__fontHeight+1, R5
0x067E	0xDE02      	RCALL       _Mul_16X16_U
0x0680	0xF1EFC000  	MOVFF       R0, __Lib_Glcd__Glcd_Write_Char_AdvE_count_L0
0x0684	0xF1F0C001  	MOVFF       R1, __Lib_Glcd__Glcd_Write_Char_AdvE_count_L0+1
;__Lib_Glcd.c,965 :: 		
0x0688	0x0E07      	MOVLW       7
0x068A	0x15FB      	ANDWF       FLOC___Lib_Glcd__Glcd_Write_Char_AdvE, 0, 1
0x068C	0x6E00      	MOVWF       R0 
0x068E	0xE004      	BZ          L___Lib_Glcd__Glcd_Write_Char_AdvE174
;__Lib_Glcd.c,966 :: 		
0x0690	0x5123      	MOVF        __Lib_Glcd__fontHeight, 0, 1
0x0692	0x27EF      	ADDWF       __Lib_Glcd__Glcd_Write_Char_AdvE_count_L0, 1, 1
0x0694	0x5124      	MOVF        __Lib_Glcd__fontHeight+1, 0, 1
0x0696	0x23F0      	ADDWFC      __Lib_Glcd__Glcd_Write_Char_AdvE_count_L0+1, 1, 1
L___Lib_Glcd__Glcd_Write_Char_AdvE174:
;__Lib_Glcd.c,967 :: 		
0x0698	0xF1F3C1EF  	MOVFF       __Lib_Glcd__Glcd_Write_Char_AdvE_count_L0, __Lib_Glcd__Glcd_Write_Char_AdvE_countSaved_L0
0x069C	0xF1F4C1F0  	MOVFF       __Lib_Glcd__Glcd_Write_Char_AdvE_count_L0+1, __Lib_Glcd__Glcd_Write_Char_AdvE_countSaved_L0+1
;__Lib_Glcd.c,968 :: 		
0x06A0	0xFFE1C14E  	MOVFF       _Glcd_Get_Ext_Data_Ptr+2, FSR1
0x06A4	0xFFE2C14F  	MOVFF       _Glcd_Get_Ext_Data_Ptr+3, FSR1+1
0x06A8	0xFFE6C1E9  	MOVFF       __Lib_Glcd__Glcd_Write_Char_AdvE_pChBitMap_L0, POSTINC1
0x06AC	0xFFE6C1EA  	MOVFF       __Lib_Glcd__Glcd_Write_Char_AdvE_pChBitMap_L0+1, POSTINC1
0x06B0	0xFFE6C1EB  	MOVFF       __Lib_Glcd__Glcd_Write_Char_AdvE_pChBitMap_L0+2, POSTINC1
0x06B4	0xFFE6C1EC  	MOVFF       __Lib_Glcd__Glcd_Write_Char_AdvE_pChBitMap_L0+3, POSTINC1
0x06B8	0xFFE6C1EF  	MOVFF       __Lib_Glcd__Glcd_Write_Char_AdvE_count_L0, POSTINC1
0x06BC	0xFFE6C1F0  	MOVFF       __Lib_Glcd__Glcd_Write_Char_AdvE_count_L0+1, POSTINC1
0x06C0	0x0EED      	MOVLW       __Lib_Glcd__Glcd_Write_Char_AdvE_readed_L0
0x06C2	0x6EE6      	MOVWF       POSTINC1 
0x06C4	0x0E01      	MOVLW       hi_addr(__Lib_Glcd__Glcd_Write_Char_AdvE_readed_L0)
0x06C6	0x6EE6      	MOVWF       POSTINC1 
0x06C8	0xF000C14C  	MOVFF       _Glcd_Get_Ext_Data_Ptr, R0
0x06CC	0xF001C14D  	MOVFF       _Glcd_Get_Ext_Data_Ptr+1, R1
0x06D0	0xDD64      	RCALL       _____DoIFC
0x06D2	0xF1F5C000  	MOVFF       R0, __Lib_Glcd__Glcd_Write_Char_AdvE_ptr_L0
0x06D6	0xF1F6C001  	MOVFF       R1, __Lib_Glcd__Glcd_Write_Char_AdvE_ptr_L0+1
;__Lib_Glcd.c,969 :: 		
0x06DA	0x0101      	MOVLB       1
0x06DC	0x51ED      	MOVF        __Lib_Glcd__Glcd_Write_Char_AdvE_readed_L0, 0, 1
0x06DE	0x27E9      	ADDWF       __Lib_Glcd__Glcd_Write_Char_AdvE_pChBitMap_L0, 1, 1
0x06E0	0x51EE      	MOVF        __Lib_Glcd__Glcd_Write_Char_AdvE_readed_L0+1, 0, 1
0x06E2	0x23EA      	ADDWFC      __Lib_Glcd__Glcd_Write_Char_AdvE_pChBitMap_L0+1, 1, 1
0x06E4	0x0E00      	MOVLW       0
0x06E6	0x23EB      	ADDWFC      __Lib_Glcd__Glcd_Write_Char_AdvE_pChBitMap_L0+2, 1, 1
0x06E8	0x23EC      	ADDWFC      __Lib_Glcd__Glcd_Write_Char_AdvE_pChBitMap_L0+3, 1, 1
;__Lib_Glcd.c,970 :: 		
0x06EA	0x51ED      	MOVF        __Lib_Glcd__Glcd_Write_Char_AdvE_readed_L0, 0, 1
0x06EC	0x5FEF      	SUBWF       __Lib_Glcd__Glcd_Write_Char_AdvE_count_L0, 1, 1
0x06EE	0x51EE      	MOVF        __Lib_Glcd__Glcd_Write_Char_AdvE_readed_L0+1, 0, 1
0x06F0	0x5BF0      	SUBWFB      __Lib_Glcd__Glcd_Write_Char_AdvE_count_L0+1, 1, 1
;__Lib_Glcd.c,972 :: 		
0x06F2	0x6BF1      	CLRF        __Lib_Glcd__Glcd_Write_Char_AdvE_byteCount_L0, 1
0x06F4	0x6BF2      	CLRF        __Lib_Glcd__Glcd_Write_Char_AdvE_byteCount_L0+1, 1
;__Lib_Glcd.c,973 :: 		
0x06F6	0x511B      	MOVF        __Lib_Glcd_FontOrientation, 0, 1
0x06F8	0x0A00      	XORLW       0
0x06FA	0xA4D8      	BTFSS       STATUS, 2 
0x06FC	0xD07F      	BRA         L___Lib_Glcd__Glcd_Write_Char_AdvE175
;__Lib_Glcd.c,974 :: 		
0x06FE	0xF1E6C11C  	MOVFF       __Lib_Glcd_y_cord, __Lib_Glcd__Glcd_Write_Char_AdvE_y_L0
0x0702	0xF1E7C11D  	MOVFF       __Lib_Glcd_y_cord+1, __Lib_Glcd__Glcd_Write_Char_AdvE_y_L0+1
;__Lib_Glcd.c,975 :: 		
0x0706	0x6BE5      	CLRF        __Lib_Glcd__Glcd_Write_Char_AdvE_yCnt_L0, 1
L___Lib_Glcd__Glcd_Write_Char_AdvE176:
0x0708	0x0E00      	MOVLW       0
0x070A	0x6E00      	MOVWF       R0 
0x070C	0x5124      	MOVF        __Lib_Glcd__fontHeight+1, 0, 1
0x070E	0x5C00      	SUBWF       R0, 0 
0x0710	0xE102      	BNZ         L___Lib_Glcd__Glcd_Write_Char_AdvE420
0x0712	0x5123      	MOVF        __Lib_Glcd__fontHeight, 0, 1
0x0714	0x5DE5      	SUBWF       __Lib_Glcd__Glcd_Write_Char_AdvE_yCnt_L0, 0, 1
L___Lib_Glcd__Glcd_Write_Char_AdvE420:
0x0716	0xE26B      	BC          L___Lib_Glcd__Glcd_Write_Char_AdvE177
;__Lib_Glcd.c,976 :: 		
0x0718	0xF1F8C135  	MOVFF       __Lib_Glcd_x_cord, __Lib_Glcd__Glcd_Write_Char_AdvE_x_L0
0x071C	0xF1F9C136  	MOVFF       __Lib_Glcd_x_cord+1, __Lib_Glcd__Glcd_Write_Char_AdvE_x_L0+1
;__Lib_Glcd.c,977 :: 		
0x0720	0x6BE8      	CLRF        __Lib_Glcd__Glcd_Write_Char_AdvE_mask_L0, 1
;__Lib_Glcd.c,978 :: 		
0x0722	0x6BE4      	CLRF        __Lib_Glcd__Glcd_Write_Char_AdvE_xCnt_L0, 1
L___Lib_Glcd__Glcd_Write_Char_AdvE179:
0x0724	0x51F7      	MOVF        __Lib_Glcd__Glcd_Write_Char_AdvE_chWidth_L0, 0, 1
0x0726	0x5DE4      	SUBWF       __Lib_Glcd__Glcd_Write_Char_AdvE_xCnt_L0, 0, 1
0x0728	0xE25E      	BC          L___Lib_Glcd__Glcd_Write_Char_AdvE180
;__Lib_Glcd.c,979 :: 		
0x072A	0x51E8      	MOVF        __Lib_Glcd__Glcd_Write_Char_AdvE_mask_L0, 0, 1
0x072C	0x0A00      	XORLW       0
0x072E	0xE149      	BNZ         L___Lib_Glcd__Glcd_Write_Char_AdvE182
;__Lib_Glcd.c,980 :: 		
0x0730	0x4BF1      	INFSNZ      __Lib_Glcd__Glcd_Write_Char_AdvE_byteCount_L0, 1, 1
0x0732	0x2BF2      	INCF        __Lib_Glcd__Glcd_Write_Char_AdvE_byteCount_L0+1, 1, 1
;__Lib_Glcd.c,981 :: 		
0x0734	0x51F4      	MOVF        __Lib_Glcd__Glcd_Write_Char_AdvE_countSaved_L0+1, 0, 1
0x0736	0x5DEE      	SUBWF       __Lib_Glcd__Glcd_Write_Char_AdvE_readed_L0+1, 0, 1
0x0738	0xE102      	BNZ         L___Lib_Glcd__Glcd_Write_Char_AdvE421
0x073A	0x51F3      	MOVF        __Lib_Glcd__Glcd_Write_Char_AdvE_countSaved_L0, 0, 1
0x073C	0x5DED      	SUBWF       __Lib_Glcd__Glcd_Write_Char_AdvE_readed_L0, 0, 1
L___Lib_Glcd__Glcd_Write_Char_AdvE421:
0x073E	0xE237      	BC          L___Lib_Glcd__Glcd_Write_Char_AdvE183
;__Lib_Glcd.c,982 :: 		
0x0740	0x51F2      	MOVF        __Lib_Glcd__Glcd_Write_Char_AdvE_byteCount_L0+1, 0, 1
0x0742	0x5DEE      	SUBWF       __Lib_Glcd__Glcd_Write_Char_AdvE_readed_L0+1, 0, 1
0x0744	0xE102      	BNZ         L___Lib_Glcd__Glcd_Write_Char_AdvE422
0x0746	0x51F1      	MOVF        __Lib_Glcd__Glcd_Write_Char_AdvE_byteCount_L0, 0, 1
0x0748	0x5DED      	SUBWF       __Lib_Glcd__Glcd_Write_Char_AdvE_readed_L0, 0, 1
L___Lib_Glcd__Glcd_Write_Char_AdvE422:
0x074A	0xE231      	BC          L___Lib_Glcd__Glcd_Write_Char_AdvE184
;__Lib_Glcd.c,983 :: 		
0x074C	0x0E01      	MOVLW       1
0x074E	0x6FF1      	MOVWF       __Lib_Glcd__Glcd_Write_Char_AdvE_byteCount_L0, 1
0x0750	0x0E00      	MOVLW       0
0x0752	0x6FF2      	MOVWF       __Lib_Glcd__Glcd_Write_Char_AdvE_byteCount_L0+1, 1
;__Lib_Glcd.c,984 :: 		
0x0754	0xFFE1C14E  	MOVFF       _Glcd_Get_Ext_Data_Ptr+2, FSR1
0x0758	0xFFE2C14F  	MOVFF       _Glcd_Get_Ext_Data_Ptr+3, FSR1+1
0x075C	0xFFE6C1E9  	MOVFF       __Lib_Glcd__Glcd_Write_Char_AdvE_pChBitMap_L0, POSTINC1
0x0760	0xFFE6C1EA  	MOVFF       __Lib_Glcd__Glcd_Write_Char_AdvE_pChBitMap_L0+1, POSTINC1
0x0764	0xFFE6C1EB  	MOVFF       __Lib_Glcd__Glcd_Write_Char_AdvE_pChBitMap_L0+2, POSTINC1
0x0768	0xFFE6C1EC  	MOVFF       __Lib_Glcd__Glcd_Write_Char_AdvE_pChBitMap_L0+3, POSTINC1
0x076C	0xFFE6C1EF  	MOVFF       __Lib_Glcd__Glcd_Write_Char_AdvE_count_L0, POSTINC1
0x0770	0xFFE6C1F0  	MOVFF       __Lib_Glcd__Glcd_Write_Char_AdvE_count_L0+1, POSTINC1
0x0774	0x0EED      	MOVLW       __Lib_Glcd__Glcd_Write_Char_AdvE_readed_L0
0x0776	0x6EE6      	MOVWF       POSTINC1 
0x0778	0x0E01      	MOVLW       hi_addr(__Lib_Glcd__Glcd_Write_Char_AdvE_readed_L0)
0x077A	0x6EE6      	MOVWF       POSTINC1 
0x077C	0xF000C14C  	MOVFF       _Glcd_Get_Ext_Data_Ptr, R0
0x0780	0xF001C14D  	MOVFF       _Glcd_Get_Ext_Data_Ptr+1, R1
0x0784	0xDD0A      	RCALL       _____DoIFC
0x0786	0xF1F5C000  	MOVFF       R0, __Lib_Glcd__Glcd_Write_Char_AdvE_ptr_L0
0x078A	0xF1F6C001  	MOVFF       R1, __Lib_Glcd__Glcd_Write_Char_AdvE_ptr_L0+1
;__Lib_Glcd.c,985 :: 		
0x078E	0xF1F3C1EF  	MOVFF       __Lib_Glcd__Glcd_Write_Char_AdvE_count_L0, __Lib_Glcd__Glcd_Write_Char_AdvE_countSaved_L0
0x0792	0xF1F4C1F0  	MOVFF       __Lib_Glcd__Glcd_Write_Char_AdvE_count_L0+1, __Lib_Glcd__Glcd_Write_Char_AdvE_countSaved_L0+1
;__Lib_Glcd.c,986 :: 		
0x0796	0x0101      	MOVLB       1
0x0798	0x51ED      	MOVF        __Lib_Glcd__Glcd_Write_Char_AdvE_readed_L0, 0, 1
0x079A	0x27E9      	ADDWF       __Lib_Glcd__Glcd_Write_Char_AdvE_pChBitMap_L0, 1, 1
0x079C	0x51EE      	MOVF        __Lib_Glcd__Glcd_Write_Char_AdvE_readed_L0+1, 0, 1
0x079E	0x23EA      	ADDWFC      __Lib_Glcd__Glcd_Write_Char_AdvE_pChBitMap_L0+1, 1, 1
0x07A0	0x0E00      	MOVLW       0
0x07A2	0x23EB      	ADDWFC      __Lib_Glcd__Glcd_Write_Char_AdvE_pChBitMap_L0+2, 1, 1
0x07A4	0x23EC      	ADDWFC      __Lib_Glcd__Glcd_Write_Char_AdvE_pChBitMap_L0+3, 1, 1
;__Lib_Glcd.c,987 :: 		
0x07A6	0x51ED      	MOVF        __Lib_Glcd__Glcd_Write_Char_AdvE_readed_L0, 0, 1
0x07A8	0x5FEF      	SUBWF       __Lib_Glcd__Glcd_Write_Char_AdvE_count_L0, 1, 1
0x07AA	0x51EE      	MOVF        __Lib_Glcd__Glcd_Write_Char_AdvE_readed_L0+1, 0, 1
0x07AC	0x5BF0      	SUBWFB      __Lib_Glcd__Glcd_Write_Char_AdvE_count_L0+1, 1, 1
;__Lib_Glcd.c,988 :: 		
L___Lib_Glcd__Glcd_Write_Char_AdvE184:
;__Lib_Glcd.c,989 :: 		
L___Lib_Glcd__Glcd_Write_Char_AdvE183:
;__Lib_Glcd.c,990 :: 		
0x07AE	0xFFE9C1F5  	MOVFF       __Lib_Glcd__Glcd_Write_Char_AdvE_ptr_L0, FSR0L
0x07B2	0xFFEAC1F6  	MOVFF       __Lib_Glcd__Glcd_Write_Char_AdvE_ptr_L0+1, FSR0H
0x07B6	0xF1FACFEE  	MOVFF       POSTINC0, __Lib_Glcd__Glcd_Write_Char_AdvE_temp_L0
0x07BA	0x4BF5      	INFSNZ      __Lib_Glcd__Glcd_Write_Char_AdvE_ptr_L0, 1, 1
0x07BC	0x2BF6      	INCF        __Lib_Glcd__Glcd_Write_Char_AdvE_ptr_L0+1, 1, 1
;__Lib_Glcd.c,991 :: 		
0x07BE	0x0E01      	MOVLW       1
0x07C0	0x6FE8      	MOVWF       __Lib_Glcd__Glcd_Write_Char_AdvE_mask_L0, 1
;__Lib_Glcd.c,992 :: 		
L___Lib_Glcd__Glcd_Write_Char_AdvE182:
;__Lib_Glcd.c,994 :: 		
0x07C2	0x51E8      	MOVF        __Lib_Glcd__Glcd_Write_Char_AdvE_mask_L0, 0, 1
0x07C4	0x15FA      	ANDWF       __Lib_Glcd__Glcd_Write_Char_AdvE_temp_L0, 0, 1
0x07C6	0x6E00      	MOVWF       R0 
0x07C8	0xE007      	BZ          L___Lib_Glcd__Glcd_Write_Char_AdvE185
;__Lib_Glcd.c,995 :: 		
0x07CA	0xF20BC1F8  	MOVFF       __Lib_Glcd__Glcd_Write_Char_AdvE_x_L0, FARG_Glcd_Dot_x_pos
0x07CE	0xF20CC1E6  	MOVFF       __Lib_Glcd__Glcd_Write_Char_AdvE_y_L0, FARG_Glcd_Dot_y_pos
0x07D2	0xF20DC137  	MOVFF       __Lib_Glcd_FontColor, FARG_Glcd_Dot_color
0x07D6	0xDC87      	RCALL       _Glcd_Dot
;__Lib_Glcd.c,996 :: 		
L___Lib_Glcd__Glcd_Write_Char_AdvE185:
;__Lib_Glcd.c,998 :: 		
0x07D8	0x0101      	MOVLB       1
0x07DA	0x4BF8      	INFSNZ      __Lib_Glcd__Glcd_Write_Char_AdvE_x_L0, 1, 1
0x07DC	0x2BF9      	INCF        __Lib_Glcd__Glcd_Write_Char_AdvE_x_L0+1, 1, 1
;__Lib_Glcd.c,999 :: 		
0x07DE	0x37E8      	RLCF        __Lib_Glcd__Glcd_Write_Char_AdvE_mask_L0, 1, 1
0x07E0	0x91E8      	BCF         __Lib_Glcd__Glcd_Write_Char_AdvE_mask_L0, 0, 1
;__Lib_Glcd.c,978 :: 		
0x07E2	0x2BE4      	INCF        __Lib_Glcd__Glcd_Write_Char_AdvE_xCnt_L0, 1, 1
;__Lib_Glcd.c,1000 :: 		
0x07E4	0xD79F      	BRA         L___Lib_Glcd__Glcd_Write_Char_AdvE179
L___Lib_Glcd__Glcd_Write_Char_AdvE180:
;__Lib_Glcd.c,1001 :: 		
0x07E6	0x4BE6      	INFSNZ      __Lib_Glcd__Glcd_Write_Char_AdvE_y_L0, 1, 1
0x07E8	0x2BE7      	INCF        __Lib_Glcd__Glcd_Write_Char_AdvE_y_L0+1, 1, 1
;__Lib_Glcd.c,975 :: 		
0x07EA	0x2BE5      	INCF        __Lib_Glcd__Glcd_Write_Char_AdvE_yCnt_L0, 1, 1
;__Lib_Glcd.c,1002 :: 		
0x07EC	0xD78D      	BRA         L___Lib_Glcd__Glcd_Write_Char_AdvE176
L___Lib_Glcd__Glcd_Write_Char_AdvE177:
;__Lib_Glcd.c,1004 :: 		
0x07EE	0x0E01      	MOVLW       1
0x07F0	0x25F8      	ADDWF       __Lib_Glcd__Glcd_Write_Char_AdvE_x_L0, 0, 1
0x07F2	0x6F35      	MOVWF       __Lib_Glcd_x_cord, 1
0x07F4	0x0E00      	MOVLW       0
0x07F6	0x21F9      	ADDWFC      __Lib_Glcd__Glcd_Write_Char_AdvE_x_L0+1, 0, 1
0x07F8	0x6F36      	MOVWF       __Lib_Glcd_x_cord+1, 1
;__Lib_Glcd.c,1005 :: 		
0x07FA	0xD081      	BRA         L___Lib_Glcd__Glcd_Write_Char_AdvE186
L___Lib_Glcd__Glcd_Write_Char_AdvE175:
;__Lib_Glcd.c,1006 :: 		
0x07FC	0xF1E6C135  	MOVFF       __Lib_Glcd_x_cord, __Lib_Glcd__Glcd_Write_Char_AdvE_y_L0
0x0800	0xF1E7C136  	MOVFF       __Lib_Glcd_x_cord+1, __Lib_Glcd__Glcd_Write_Char_AdvE_y_L0+1
;__Lib_Glcd.c,1007 :: 		
0x0804	0x6BE5      	CLRF        __Lib_Glcd__Glcd_Write_Char_AdvE_yCnt_L0, 1
L___Lib_Glcd__Glcd_Write_Char_AdvE187:
0x0806	0x0E00      	MOVLW       0
0x0808	0x6E00      	MOVWF       R0 
0x080A	0x5124      	MOVF        __Lib_Glcd__fontHeight+1, 0, 1
0x080C	0x5C00      	SUBWF       R0, 0 
0x080E	0xE102      	BNZ         L___Lib_Glcd__Glcd_Write_Char_AdvE423
0x0810	0x5123      	MOVF        __Lib_Glcd__fontHeight, 0, 1
0x0812	0x5DE5      	SUBWF       __Lib_Glcd__Glcd_Write_Char_AdvE_yCnt_L0, 0, 1
L___Lib_Glcd__Glcd_Write_Char_AdvE423:
0x0814	0xB0D8      	BTFSC       STATUS, 0 
0x0816	0xD06D      	BRA         L___Lib_Glcd__Glcd_Write_Char_AdvE188
;__Lib_Glcd.c,1008 :: 		
0x0818	0xF1F8C11C  	MOVFF       __Lib_Glcd_y_cord, __Lib_Glcd__Glcd_Write_Char_AdvE_x_L0
0x081C	0xF1F9C11D  	MOVFF       __Lib_Glcd_y_cord+1, __Lib_Glcd__Glcd_Write_Char_AdvE_x_L0+1
;__Lib_Glcd.c,1009 :: 		
0x0820	0x6BE8      	CLRF        __Lib_Glcd__Glcd_Write_Char_AdvE_mask_L0, 1
;__Lib_Glcd.c,1010 :: 		
0x0822	0x6BE4      	CLRF        __Lib_Glcd__Glcd_Write_Char_AdvE_xCnt_L0, 1
L___Lib_Glcd__Glcd_Write_Char_AdvE190:
0x0824	0x51F7      	MOVF        __Lib_Glcd__Glcd_Write_Char_AdvE_chWidth_L0, 0, 1
0x0826	0x5DE4      	SUBWF       __Lib_Glcd__Glcd_Write_Char_AdvE_xCnt_L0, 0, 1
0x0828	0xE260      	BC          L___Lib_Glcd__Glcd_Write_Char_AdvE191
;__Lib_Glcd.c,1011 :: 		
0x082A	0x51E8      	MOVF        __Lib_Glcd__Glcd_Write_Char_AdvE_mask_L0, 0, 1
0x082C	0x0A00      	XORLW       0
0x082E	0xE149      	BNZ         L___Lib_Glcd__Glcd_Write_Char_AdvE193
;__Lib_Glcd.c,1012 :: 		
0x0830	0x4BF1      	INFSNZ      __Lib_Glcd__Glcd_Write_Char_AdvE_byteCount_L0, 1, 1
0x0832	0x2BF2      	INCF        __Lib_Glcd__Glcd_Write_Char_AdvE_byteCount_L0+1, 1, 1
;__Lib_Glcd.c,1013 :: 		
0x0834	0x51F4      	MOVF        __Lib_Glcd__Glcd_Write_Char_AdvE_countSaved_L0+1, 0, 1
0x0836	0x5DEE      	SUBWF       __Lib_Glcd__Glcd_Write_Char_AdvE_readed_L0+1, 0, 1
0x0838	0xE102      	BNZ         L___Lib_Glcd__Glcd_Write_Char_AdvE424
0x083A	0x51F3      	MOVF        __Lib_Glcd__Glcd_Write_Char_AdvE_countSaved_L0, 0, 1
0x083C	0x5DED      	SUBWF       __Lib_Glcd__Glcd_Write_Char_AdvE_readed_L0, 0, 1
L___Lib_Glcd__Glcd_Write_Char_AdvE424:
0x083E	0xE237      	BC          L___Lib_Glcd__Glcd_Write_Char_AdvE194
;__Lib_Glcd.c,1014 :: 		
0x0840	0x51F2      	MOVF        __Lib_Glcd__Glcd_Write_Char_AdvE_byteCount_L0+1, 0, 1
0x0842	0x5DEE      	SUBWF       __Lib_Glcd__Glcd_Write_Char_AdvE_readed_L0+1, 0, 1
0x0844	0xE102      	BNZ         L___Lib_Glcd__Glcd_Write_Char_AdvE425
0x0846	0x51F1      	MOVF        __Lib_Glcd__Glcd_Write_Char_AdvE_byteCount_L0, 0, 1
0x0848	0x5DED      	SUBWF       __Lib_Glcd__Glcd_Write_Char_AdvE_readed_L0, 0, 1
L___Lib_Glcd__Glcd_Write_Char_AdvE425:
0x084A	0xE231      	BC          L___Lib_Glcd__Glcd_Write_Char_AdvE195
;__Lib_Glcd.c,1015 :: 		
0x084C	0x0E01      	MOVLW       1
0x084E	0x6FF1      	MOVWF       __Lib_Glcd__Glcd_Write_Char_AdvE_byteCount_L0, 1
0x0850	0x0E00      	MOVLW       0
0x0852	0x6FF2      	MOVWF       __Lib_Glcd__Glcd_Write_Char_AdvE_byteCount_L0+1, 1
;__Lib_Glcd.c,1016 :: 		
0x0854	0xFFE1C14E  	MOVFF       _Glcd_Get_Ext_Data_Ptr+2, FSR1
0x0858	0xFFE2C14F  	MOVFF       _Glcd_Get_Ext_Data_Ptr+3, FSR1+1
0x085C	0xFFE6C1E9  	MOVFF       __Lib_Glcd__Glcd_Write_Char_AdvE_pChBitMap_L0, POSTINC1
0x0860	0xFFE6C1EA  	MOVFF       __Lib_Glcd__Glcd_Write_Char_AdvE_pChBitMap_L0+1, POSTINC1
0x0864	0xFFE6C1EB  	MOVFF       __Lib_Glcd__Glcd_Write_Char_AdvE_pChBitMap_L0+2, POSTINC1
0x0868	0xFFE6C1EC  	MOVFF       __Lib_Glcd__Glcd_Write_Char_AdvE_pChBitMap_L0+3, POSTINC1
0x086C	0xFFE6C1EF  	MOVFF       __Lib_Glcd__Glcd_Write_Char_AdvE_count_L0, POSTINC1
0x0870	0xFFE6C1F0  	MOVFF       __Lib_Glcd__Glcd_Write_Char_AdvE_count_L0+1, POSTINC1
0x0874	0x0EED      	MOVLW       __Lib_Glcd__Glcd_Write_Char_AdvE_readed_L0
0x0876	0x6EE6      	MOVWF       POSTINC1 
0x0878	0x0E01      	MOVLW       hi_addr(__Lib_Glcd__Glcd_Write_Char_AdvE_readed_L0)
0x087A	0x6EE6      	MOVWF       POSTINC1 
0x087C	0xF000C14C  	MOVFF       _Glcd_Get_Ext_Data_Ptr, R0
0x0880	0xF001C14D  	MOVFF       _Glcd_Get_Ext_Data_Ptr+1, R1
0x0884	0xDC8A      	RCALL       _____DoIFC
0x0886	0xF1F5C000  	MOVFF       R0, __Lib_Glcd__Glcd_Write_Char_AdvE_ptr_L0
0x088A	0xF1F6C001  	MOVFF       R1, __Lib_Glcd__Glcd_Write_Char_AdvE_ptr_L0+1
;__Lib_Glcd.c,1017 :: 		
0x088E	0xF1F3C1EF  	MOVFF       __Lib_Glcd__Glcd_Write_Char_AdvE_count_L0, __Lib_Glcd__Glcd_Write_Char_AdvE_countSaved_L0
0x0892	0xF1F4C1F0  	MOVFF       __Lib_Glcd__Glcd_Write_Char_AdvE_count_L0+1, __Lib_Glcd__Glcd_Write_Char_AdvE_countSaved_L0+1
;__Lib_Glcd.c,1018 :: 		
0x0896	0x0101      	MOVLB       1
0x0898	0x51ED      	MOVF        __Lib_Glcd__Glcd_Write_Char_AdvE_readed_L0, 0, 1
0x089A	0x27E9      	ADDWF       __Lib_Glcd__Glcd_Write_Char_AdvE_pChBitMap_L0, 1, 1
0x089C	0x51EE      	MOVF        __Lib_Glcd__Glcd_Write_Char_AdvE_readed_L0+1, 0, 1
0x089E	0x23EA      	ADDWFC      __Lib_Glcd__Glcd_Write_Char_AdvE_pChBitMap_L0+1, 1, 1
0x08A0	0x0E00      	MOVLW       0
0x08A2	0x23EB      	ADDWFC      __Lib_Glcd__Glcd_Write_Char_AdvE_pChBitMap_L0+2, 1, 1
0x08A4	0x23EC      	ADDWFC      __Lib_Glcd__Glcd_Write_Char_AdvE_pChBitMap_L0+3, 1, 1
;__Lib_Glcd.c,1019 :: 		
0x08A6	0x51ED      	MOVF        __Lib_Glcd__Glcd_Write_Char_AdvE_readed_L0, 0, 1
0x08A8	0x5FEF      	SUBWF       __Lib_Glcd__Glcd_Write_Char_AdvE_count_L0, 1, 1
0x08AA	0x51EE      	MOVF        __Lib_Glcd__Glcd_Write_Char_AdvE_readed_L0+1, 0, 1
0x08AC	0x5BF0      	SUBWFB      __Lib_Glcd__Glcd_Write_Char_AdvE_count_L0+1, 1, 1
;__Lib_Glcd.c,1020 :: 		
L___Lib_Glcd__Glcd_Write_Char_AdvE195:
;__Lib_Glcd.c,1021 :: 		
L___Lib_Glcd__Glcd_Write_Char_AdvE194:
;__Lib_Glcd.c,1022 :: 		
0x08AE	0xFFE9C1F5  	MOVFF       __Lib_Glcd__Glcd_Write_Char_AdvE_ptr_L0, FSR0L
0x08B2	0xFFEAC1F6  	MOVFF       __Lib_Glcd__Glcd_Write_Char_AdvE_ptr_L0+1, FSR0H
0x08B6	0xF1FACFEE  	MOVFF       POSTINC0, __Lib_Glcd__Glcd_Write_Char_AdvE_temp_L0
0x08BA	0x4BF5      	INFSNZ      __Lib_Glcd__Glcd_Write_Char_AdvE_ptr_L0, 1, 1
0x08BC	0x2BF6      	INCF        __Lib_Glcd__Glcd_Write_Char_AdvE_ptr_L0+1, 1, 1
;__Lib_Glcd.c,1023 :: 		
0x08BE	0x0E01      	MOVLW       1
0x08C0	0x6FE8      	MOVWF       __Lib_Glcd__Glcd_Write_Char_AdvE_mask_L0, 1
;__Lib_Glcd.c,1024 :: 		
L___Lib_Glcd__Glcd_Write_Char_AdvE193:
;__Lib_Glcd.c,1026 :: 		
0x08C2	0x51E8      	MOVF        __Lib_Glcd__Glcd_Write_Char_AdvE_mask_L0, 0, 1
0x08C4	0x15FA      	ANDWF       __Lib_Glcd__Glcd_Write_Char_AdvE_temp_L0, 0, 1
0x08C6	0x6E00      	MOVWF       R0 
0x08C8	0xE007      	BZ          L___Lib_Glcd__Glcd_Write_Char_AdvE196
;__Lib_Glcd.c,1027 :: 		
0x08CA	0xF20BC1E6  	MOVFF       __Lib_Glcd__Glcd_Write_Char_AdvE_y_L0, FARG_Glcd_Dot_x_pos
0x08CE	0xF20CC1F8  	MOVFF       __Lib_Glcd__Glcd_Write_Char_AdvE_x_L0, FARG_Glcd_Dot_y_pos
0x08D2	0xF20DC137  	MOVFF       __Lib_Glcd_FontColor, FARG_Glcd_Dot_color
0x08D6	0xDC07      	RCALL       _Glcd_Dot
;__Lib_Glcd.c,1028 :: 		
L___Lib_Glcd__Glcd_Write_Char_AdvE196:
;__Lib_Glcd.c,1030 :: 		
0x08D8	0x0E01      	MOVLW       1
0x08DA	0x0101      	MOVLB       1
0x08DC	0x5FF8      	SUBWF       __Lib_Glcd__Glcd_Write_Char_AdvE_x_L0, 1, 1
0x08DE	0x0E00      	MOVLW       0
0x08E0	0x5BF9      	SUBWFB      __Lib_Glcd__Glcd_Write_Char_AdvE_x_L0+1, 1, 1
;__Lib_Glcd.c,1031 :: 		
0x08E2	0x37E8      	RLCF        __Lib_Glcd__Glcd_Write_Char_AdvE_mask_L0, 1, 1
0x08E4	0x91E8      	BCF         __Lib_Glcd__Glcd_Write_Char_AdvE_mask_L0, 0, 1
;__Lib_Glcd.c,1010 :: 		
0x08E6	0x2BE4      	INCF        __Lib_Glcd__Glcd_Write_Char_AdvE_xCnt_L0, 1, 1
;__Lib_Glcd.c,1032 :: 		
0x08E8	0xD79D      	BRA         L___Lib_Glcd__Glcd_Write_Char_AdvE190
L___Lib_Glcd__Glcd_Write_Char_AdvE191:
;__Lib_Glcd.c,1034 :: 		
0x08EA	0x4BE6      	INFSNZ      __Lib_Glcd__Glcd_Write_Char_AdvE_y_L0, 1, 1
0x08EC	0x2BE7      	INCF        __Lib_Glcd__Glcd_Write_Char_AdvE_y_L0+1, 1, 1
;__Lib_Glcd.c,1007 :: 		
0x08EE	0x2BE5      	INCF        __Lib_Glcd__Glcd_Write_Char_AdvE_yCnt_L0, 1, 1
;__Lib_Glcd.c,1035 :: 		
0x08F0	0xD78A      	BRA         L___Lib_Glcd__Glcd_Write_Char_AdvE187
L___Lib_Glcd__Glcd_Write_Char_AdvE188:
;__Lib_Glcd.c,1038 :: 		
0x08F2	0x0E01      	MOVLW       1
0x08F4	0x5DF8      	SUBWF       __Lib_Glcd__Glcd_Write_Char_AdvE_x_L0, 0, 1
0x08F6	0x6F1C      	MOVWF       __Lib_Glcd_y_cord, 1
0x08F8	0x0E00      	MOVLW       0
0x08FA	0x59F9      	SUBWFB      __Lib_Glcd__Glcd_Write_Char_AdvE_x_L0+1, 0, 1
0x08FC	0x6F1D      	MOVWF       __Lib_Glcd_y_cord+1, 1
;__Lib_Glcd.c,1039 :: 		
L___Lib_Glcd__Glcd_Write_Char_AdvE186:
;__Lib_Glcd.c,1040 :: 		
L_end__Glcd_Write_Char_AdvE:
0x08FE	0x0012      	RETURN      0
; end of __Lib_Glcd__Glcd_Write_Char_AdvE
__Lib_Glcd__Glcd_Write_Char_Adv:
;__Lib_Glcd.c,1043 :: 		
;__Lib_Glcd.c,1045 :: 		
0x0900	0x0101      	MOVLB       1
0x0902	0x6BEA      	CLRF        __Lib_Glcd__Glcd_Write_Char_Adv_chWidth_L0, 1
0x0904	0x6BEB      	CLRF        __Lib_Glcd__Glcd_Write_Char_Adv_x_L0, 1
0x0906	0x6BEC      	CLRF        __Lib_Glcd__Glcd_Write_Char_Adv_temp_L0, 1
;__Lib_Glcd.c,1054 :: 		
0x0908	0x0100      	MOVLB       0
0x090A	0x51B9      	MOVF        __Lib_Glcd_FontInitialized_Adv, 0, 1
0x090C	0x0A00      	XORLW       0
0x090E	0xE10E      	BNZ         L___Lib_Glcd__Glcd_Write_Char_Adv197
;__Lib_Glcd.c,1055 :: 		
0x0910	0x0E9C      	MOVLW       _Glcd_defaultFont
0x0912	0x0102      	MOVLB       2
0x0914	0x6F01      	MOVWF       FARG_Glcd_Set_Font_Adv_activeFont, 1
0x0916	0x0E4F      	MOVLW       hi_addr(_Glcd_defaultFont)
0x0918	0x6F02      	MOVWF       FARG_Glcd_Set_Font_Adv_activeFont+1, 1
0x091A	0x0E00      	MOVLW       higher_addr(_Glcd_defaultFont)
0x091C	0x6F03      	MOVWF       FARG_Glcd_Set_Font_Adv_activeFont+2, 1
0x091E	0x0E01      	MOVLW       1
0x0920	0x6F04      	MOVWF       FARG_Glcd_Set_Font_Adv_font_color, 1
0x0922	0x6B05      	CLRF        FARG_Glcd_Set_Font_Adv_font_orientation, 1
0x0924	0xDC46      	RCALL       _Glcd_Set_Font_Adv
;__Lib_Glcd.c,1056 :: 		
0x0926	0x0E01      	MOVLW       1
0x0928	0x0100      	MOVLB       0
0x092A	0x6FB9      	MOVWF       __Lib_Glcd_FontInitialized_Adv, 1
;__Lib_Glcd.c,1057 :: 		
L___Lib_Glcd__Glcd_Write_Char_Adv197:
;__Lib_Glcd.c,1059 :: 		
0x092C	0x0E00      	MOVLW       0
0x092E	0x6E00      	MOVWF       R0 
0x0930	0x0101      	MOVLB       1
0x0932	0x5122      	MOVF        __Lib_Glcd__fontFirstChar+1, 0, 1
0x0934	0x5C00      	SUBWF       R0, 0 
0x0936	0xE102      	BNZ         L___Lib_Glcd__Glcd_Write_Char_Adv427
0x0938	0x5121      	MOVF        __Lib_Glcd__fontFirstChar, 0, 1
0x093A	0x5DE2      	SUBWF       FARG___Lib_Glcd__Glcd_Write_Char_Adv_ch, 0, 1
L___Lib_Glcd__Glcd_Write_Char_Adv427:
0x093C	0xE201      	BC          L___Lib_Glcd__Glcd_Write_Char_Adv198
;__Lib_Glcd.c,1060 :: 		
0x093E	0xD0EA      	BRA         L_end__Glcd_Write_Char_Adv
L___Lib_Glcd__Glcd_Write_Char_Adv198:
;__Lib_Glcd.c,1061 :: 		
0x0940	0x0E00      	MOVLW       0
0x0942	0x5D1F      	SUBWF       __Lib_Glcd__fontLastChar+1, 0, 1
0x0944	0xE102      	BNZ         L___Lib_Glcd__Glcd_Write_Char_Adv428
0x0946	0x51E2      	MOVF        FARG___Lib_Glcd__Glcd_Write_Char_Adv_ch, 0, 1
0x0948	0x5D1E      	SUBWF       __Lib_Glcd__fontLastChar, 0, 1
L___Lib_Glcd__Glcd_Write_Char_Adv428:
0x094A	0xE201      	BC          L___Lib_Glcd__Glcd_Write_Char_Adv199
;__Lib_Glcd.c,1062 :: 		
0x094C	0xD0E3      	BRA         L_end__Glcd_Write_Char_Adv
L___Lib_Glcd__Glcd_Write_Char_Adv199:
;__Lib_Glcd.c,1065 :: 		
0x094E	0x5121      	MOVF        __Lib_Glcd__fontFirstChar, 0, 1
0x0950	0x5DE2      	SUBWF       FARG___Lib_Glcd__Glcd_Write_Char_Adv_ch, 0, 1
0x0952	0x6E01      	MOVWF       R1 
0x0954	0xF002C122  	MOVFF       __Lib_Glcd__fontFirstChar+1, R2
0x0958	0x0E00      	MOVLW       0
0x095A	0x5602      	SUBFWB      R2, 1 
0x095C	0xF003C001  	MOVFF       R1, R3
0x0960	0xF004C002  	MOVFF       R2, R4
0x0964	0x3603      	RLCF        R3, 1 
0x0966	0x9003      	BCF         R3, 0 
0x0968	0x3604      	RLCF        R4, 1 
0x096A	0x3603      	RLCF        R3, 1 
0x096C	0x9003      	BCF         R3, 0 
0x096E	0x3604      	RLCF        R4, 1 
;__Lib_Glcd.c,1066 :: 		
0x0970	0x0E08      	MOVLW       8
0x0972	0x2518      	ADDWF       __Lib_Glcd__font, 0, 1
0x0974	0x6E00      	MOVWF       R0 
0x0976	0x0E00      	MOVLW       0
0x0978	0x2119      	ADDWFC      __Lib_Glcd__font+1, 0, 1
0x097A	0x6E01      	MOVWF       R1 
0x097C	0x0E00      	MOVLW       0
0x097E	0x211A      	ADDWFC      __Lib_Glcd__font+2, 0, 1
0x0980	0x6E02      	MOVWF       R2 
0x0982	0x0E00      	MOVLW       0
0x0984	0x6E05      	MOVWF       R5 
0x0986	0x5000      	MOVF        R0, 0 
0x0988	0x2603      	ADDWF       R3, 1 
0x098A	0x5001      	MOVF        R1, 0 
0x098C	0x2204      	ADDWFC      R4, 1 
0x098E	0x5002      	MOVF        R2, 0 
0x0990	0x2205      	ADDWFC      R5, 1 
;__Lib_Glcd.c,1067 :: 		
0x0992	0xFFF6C003  	MOVFF       R3, TBLPTRL
0x0996	0xFFF7C004  	MOVFF       R4, TBLPTRH
0x099A	0xFFF8C005  	MOVFF       R5, TBLPTRU
0x099E	0x0009      	TBLRD*+
0x09A0	0xF1EACFF5  	MOVFF       TABLAT, __Lib_Glcd__Glcd_Write_Char_Adv_chWidth_L0
;__Lib_Glcd.c,1069 :: 		
0x09A4	0x0E01      	MOVLW       1
0x09A6	0x2403      	ADDWF       R3, 0 
0x09A8	0x6EF6      	MOVWF       TBLPTR 
0x09AA	0x0E00      	MOVLW       0
0x09AC	0x2004      	ADDWFC      R4, 0 
0x09AE	0x6EF7      	MOVWF       TBLPTR+1 
0x09B0	0x0E00      	MOVLW       0
0x09B2	0x2005      	ADDWFC      R5, 0 
0x09B4	0x6EF8      	MOVWF       TBLPTR+2 
0x09B6	0x0009      	TBLRD*+
0x09B8	0xF000CFF5  	MOVFF       TABLAT, R0
0x09BC	0xF006C000  	MOVFF       R0, R6
0x09C0	0x0E00      	MOVLW       0
0x09C2	0x6E07      	MOVWF       R7 
0x09C4	0x6E08      	MOVWF       R8 
0x09C6	0x6E09      	MOVWF       R9 
0x09C8	0x0E02      	MOVLW       2
0x09CA	0x2403      	ADDWF       R3, 0 
0x09CC	0x6EF6      	MOVWF       TBLPTR 
0x09CE	0x0E00      	MOVLW       0
0x09D0	0x2004      	ADDWFC      R4, 0 
0x09D2	0x6EF7      	MOVWF       TBLPTR+1 
0x09D4	0x0E00      	MOVLW       0
0x09D6	0x2005      	ADDWFC      R5, 0 
0x09D8	0x6EF8      	MOVWF       TBLPTR+2 
0x09DA	0x0009      	TBLRD*+
0x09DC	0xF003CFF5  	MOVFF       TABLAT, R3
0x09E0	0xF001C003  	MOVFF       R3, R1
0x09E4	0x6A00      	CLRF        R0 
0x09E6	0x0E00      	MOVLW       0
0x09E8	0x6E02      	MOVWF       R2 
0x09EA	0x6E03      	MOVWF       R3 
0x09EC	0x5006      	MOVF        R6, 0 
0x09EE	0x2600      	ADDWF       R0, 1 
0x09F0	0x5007      	MOVF        R7, 0 
0x09F2	0x2201      	ADDWFC      R1, 1 
0x09F4	0x5008      	MOVF        R8, 0 
0x09F6	0x2202      	ADDWFC      R2, 1 
0x09F8	0x5009      	MOVF        R9, 0 
0x09FA	0x2203      	ADDWFC      R3, 1 
;__Lib_Glcd.c,1071 :: 		
0x09FC	0x5118      	MOVF        __Lib_Glcd__font, 0, 1
0x09FE	0x2400      	ADDWF       R0, 0 
0x0A00	0x6FE7      	MOVWF       __Lib_Glcd__Glcd_Write_Char_Adv_pChBitMap_L0, 1
0x0A02	0x5119      	MOVF        __Lib_Glcd__font+1, 0, 1
0x0A04	0x2001      	ADDWFC      R1, 0 
0x0A06	0x6FE8      	MOVWF       __Lib_Glcd__Glcd_Write_Char_Adv_pChBitMap_L0+1, 1
0x0A08	0x511A      	MOVF        __Lib_Glcd__font+2, 0, 1
0x0A0A	0x2002      	ADDWFC      R2, 0 
0x0A0C	0x6FE9      	MOVWF       __Lib_Glcd__Glcd_Write_Char_Adv_pChBitMap_L0+2, 1
;__Lib_Glcd.c,1073 :: 		
0x0A0E	0x511B      	MOVF        __Lib_Glcd_FontOrientation, 0, 1
0x0A10	0x0A00      	XORLW       0
0x0A12	0xE141      	BNZ         L___Lib_Glcd__Glcd_Write_Char_Adv200
;__Lib_Glcd.c,1074 :: 		
0x0A14	0xF1E5C11C  	MOVFF       __Lib_Glcd_y_cord, __Lib_Glcd__Glcd_Write_Char_Adv_y_L0
;__Lib_Glcd.c,1075 :: 		
0x0A18	0x6BE4      	CLRF        __Lib_Glcd__Glcd_Write_Char_Adv_yCnt_L0, 1
L___Lib_Glcd__Glcd_Write_Char_Adv201:
0x0A1A	0x0E00      	MOVLW       0
0x0A1C	0x6E00      	MOVWF       R0 
0x0A1E	0x5124      	MOVF        __Lib_Glcd__fontHeight+1, 0, 1
0x0A20	0x5C00      	SUBWF       R0, 0 
0x0A22	0xE102      	BNZ         L___Lib_Glcd__Glcd_Write_Char_Adv429
0x0A24	0x5123      	MOVF        __Lib_Glcd__fontHeight, 0, 1
0x0A26	0x5DE4      	SUBWF       __Lib_Glcd__Glcd_Write_Char_Adv_yCnt_L0, 0, 1
L___Lib_Glcd__Glcd_Write_Char_Adv429:
0x0A28	0xE22F      	BC          L___Lib_Glcd__Glcd_Write_Char_Adv202
;__Lib_Glcd.c,1076 :: 		
0x0A2A	0xF1EBC135  	MOVFF       __Lib_Glcd_x_cord, __Lib_Glcd__Glcd_Write_Char_Adv_x_L0
;__Lib_Glcd.c,1077 :: 		
0x0A2E	0x6BE6      	CLRF        __Lib_Glcd__Glcd_Write_Char_Adv_mask_L0, 1
;__Lib_Glcd.c,1078 :: 		
0x0A30	0x6BE3      	CLRF        __Lib_Glcd__Glcd_Write_Char_Adv_xCnt_L0, 1
L___Lib_Glcd__Glcd_Write_Char_Adv204:
0x0A32	0x51EA      	MOVF        __Lib_Glcd__Glcd_Write_Char_Adv_chWidth_L0, 0, 1
0x0A34	0x5DE3      	SUBWF       __Lib_Glcd__Glcd_Write_Char_Adv_xCnt_L0, 0, 1
0x0A36	0xE225      	BC          L___Lib_Glcd__Glcd_Write_Char_Adv205
;__Lib_Glcd.c,1079 :: 		
0x0A38	0x51E6      	MOVF        __Lib_Glcd__Glcd_Write_Char_Adv_mask_L0, 0, 1
0x0A3A	0x0A00      	XORLW       0
0x0A3C	0xE110      	BNZ         L___Lib_Glcd__Glcd_Write_Char_Adv207
;__Lib_Glcd.c,1080 :: 		
0x0A3E	0xFFF6C1E7  	MOVFF       __Lib_Glcd__Glcd_Write_Char_Adv_pChBitMap_L0, TBLPTRL
0x0A42	0xFFF7C1E8  	MOVFF       __Lib_Glcd__Glcd_Write_Char_Adv_pChBitMap_L0+1, TBLPTRH
0x0A46	0xFFF8C1E9  	MOVFF       __Lib_Glcd__Glcd_Write_Char_Adv_pChBitMap_L0+2, TBLPTRU
0x0A4A	0x0009      	TBLRD*+
0x0A4C	0xF1ECCFF5  	MOVFF       TABLAT, __Lib_Glcd__Glcd_Write_Char_Adv_temp_L0
0x0A50	0x0E01      	MOVLW       1
0x0A52	0x27E7      	ADDWF       __Lib_Glcd__Glcd_Write_Char_Adv_pChBitMap_L0, 1, 1
0x0A54	0x0E00      	MOVLW       0
0x0A56	0x23E8      	ADDWFC      __Lib_Glcd__Glcd_Write_Char_Adv_pChBitMap_L0+1, 1, 1
0x0A58	0x23E9      	ADDWFC      __Lib_Glcd__Glcd_Write_Char_Adv_pChBitMap_L0+2, 1, 1
;__Lib_Glcd.c,1081 :: 		
0x0A5A	0x0E01      	MOVLW       1
0x0A5C	0x6FE6      	MOVWF       __Lib_Glcd__Glcd_Write_Char_Adv_mask_L0, 1
;__Lib_Glcd.c,1082 :: 		
L___Lib_Glcd__Glcd_Write_Char_Adv207:
;__Lib_Glcd.c,1084 :: 		
0x0A5E	0x51E6      	MOVF        __Lib_Glcd__Glcd_Write_Char_Adv_mask_L0, 0, 1
0x0A60	0x15EC      	ANDWF       __Lib_Glcd__Glcd_Write_Char_Adv_temp_L0, 0, 1
0x0A62	0x6E00      	MOVWF       R0 
0x0A64	0xE008      	BZ          L___Lib_Glcd__Glcd_Write_Char_Adv208
;__Lib_Glcd.c,1085 :: 		
0x0A66	0xF20BC1EB  	MOVFF       __Lib_Glcd__Glcd_Write_Char_Adv_x_L0, FARG_Glcd_Dot_x_pos
0x0A6A	0xF20CC1E5  	MOVFF       __Lib_Glcd__Glcd_Write_Char_Adv_y_L0, FARG_Glcd_Dot_y_pos
0x0A6E	0xF20DC137  	MOVFF       __Lib_Glcd_FontColor, FARG_Glcd_Dot_color
0x0A72	0xF000EC73  	CALL        _Glcd_Dot, 0
;__Lib_Glcd.c,1086 :: 		
L___Lib_Glcd__Glcd_Write_Char_Adv208:
;__Lib_Glcd.c,1088 :: 		
0x0A76	0x0101      	MOVLB       1
0x0A78	0x2BEB      	INCF        __Lib_Glcd__Glcd_Write_Char_Adv_x_L0, 1, 1
;__Lib_Glcd.c,1089 :: 		
0x0A7A	0x37E6      	RLCF        __Lib_Glcd__Glcd_Write_Char_Adv_mask_L0, 1, 1
0x0A7C	0x91E6      	BCF         __Lib_Glcd__Glcd_Write_Char_Adv_mask_L0, 0, 1
;__Lib_Glcd.c,1078 :: 		
0x0A7E	0x2BE3      	INCF        __Lib_Glcd__Glcd_Write_Char_Adv_xCnt_L0, 1, 1
;__Lib_Glcd.c,1090 :: 		
0x0A80	0xD7D8      	BRA         L___Lib_Glcd__Glcd_Write_Char_Adv204
L___Lib_Glcd__Glcd_Write_Char_Adv205:
;__Lib_Glcd.c,1091 :: 		
0x0A82	0x2BE5      	INCF        __Lib_Glcd__Glcd_Write_Char_Adv_y_L0, 1, 1
;__Lib_Glcd.c,1075 :: 		
0x0A84	0x2BE4      	INCF        __Lib_Glcd__Glcd_Write_Char_Adv_yCnt_L0, 1, 1
;__Lib_Glcd.c,1092 :: 		
0x0A86	0xD7C9      	BRA         L___Lib_Glcd__Glcd_Write_Char_Adv201
L___Lib_Glcd__Glcd_Write_Char_Adv202:
;__Lib_Glcd.c,1094 :: 		
0x0A88	0x51EB      	MOVF        __Lib_Glcd__Glcd_Write_Char_Adv_x_L0, 0, 1
0x0A8A	0x0F01      	ADDLW       1
0x0A8C	0x6F35      	MOVWF       __Lib_Glcd_x_cord, 1
0x0A8E	0x6B36      	CLRF        __Lib_Glcd_x_cord+1, 1
0x0A90	0x0E00      	MOVLW       0
0x0A92	0x2336      	ADDWFC      __Lib_Glcd_x_cord+1, 1, 1
;__Lib_Glcd.c,1095 :: 		
0x0A94	0xD03F      	BRA         L___Lib_Glcd__Glcd_Write_Char_Adv209
L___Lib_Glcd__Glcd_Write_Char_Adv200:
;__Lib_Glcd.c,1096 :: 		
0x0A96	0xF1E5C135  	MOVFF       __Lib_Glcd_x_cord, __Lib_Glcd__Glcd_Write_Char_Adv_y_L0
;__Lib_Glcd.c,1097 :: 		
0x0A9A	0x6BE4      	CLRF        __Lib_Glcd__Glcd_Write_Char_Adv_yCnt_L0, 1
L___Lib_Glcd__Glcd_Write_Char_Adv210:
0x0A9C	0x0E00      	MOVLW       0
0x0A9E	0x6E00      	MOVWF       R0 
0x0AA0	0x5124      	MOVF        __Lib_Glcd__fontHeight+1, 0, 1
0x0AA2	0x5C00      	SUBWF       R0, 0 
0x0AA4	0xE102      	BNZ         L___Lib_Glcd__Glcd_Write_Char_Adv430
0x0AA6	0x5123      	MOVF        __Lib_Glcd__fontHeight, 0, 1
0x0AA8	0x5DE4      	SUBWF       __Lib_Glcd__Glcd_Write_Char_Adv_yCnt_L0, 0, 1
L___Lib_Glcd__Glcd_Write_Char_Adv430:
0x0AAA	0xE22F      	BC          L___Lib_Glcd__Glcd_Write_Char_Adv211
;__Lib_Glcd.c,1098 :: 		
0x0AAC	0xF1EBC11C  	MOVFF       __Lib_Glcd_y_cord, __Lib_Glcd__Glcd_Write_Char_Adv_x_L0
;__Lib_Glcd.c,1099 :: 		
0x0AB0	0x6BE6      	CLRF        __Lib_Glcd__Glcd_Write_Char_Adv_mask_L0, 1
;__Lib_Glcd.c,1100 :: 		
0x0AB2	0x6BE3      	CLRF        __Lib_Glcd__Glcd_Write_Char_Adv_xCnt_L0, 1
L___Lib_Glcd__Glcd_Write_Char_Adv213:
0x0AB4	0x51EA      	MOVF        __Lib_Glcd__Glcd_Write_Char_Adv_chWidth_L0, 0, 1
0x0AB6	0x5DE3      	SUBWF       __Lib_Glcd__Glcd_Write_Char_Adv_xCnt_L0, 0, 1
0x0AB8	0xE225      	BC          L___Lib_Glcd__Glcd_Write_Char_Adv214
;__Lib_Glcd.c,1101 :: 		
0x0ABA	0x51E6      	MOVF        __Lib_Glcd__Glcd_Write_Char_Adv_mask_L0, 0, 1
0x0ABC	0x0A00      	XORLW       0
0x0ABE	0xE110      	BNZ         L___Lib_Glcd__Glcd_Write_Char_Adv216
;__Lib_Glcd.c,1102 :: 		
0x0AC0	0xFFF6C1E7  	MOVFF       __Lib_Glcd__Glcd_Write_Char_Adv_pChBitMap_L0, TBLPTRL
0x0AC4	0xFFF7C1E8  	MOVFF       __Lib_Glcd__Glcd_Write_Char_Adv_pChBitMap_L0+1, TBLPTRH
0x0AC8	0xFFF8C1E9  	MOVFF       __Lib_Glcd__Glcd_Write_Char_Adv_pChBitMap_L0+2, TBLPTRU
0x0ACC	0x0009      	TBLRD*+
0x0ACE	0xF1ECCFF5  	MOVFF       TABLAT, __Lib_Glcd__Glcd_Write_Char_Adv_temp_L0
0x0AD2	0x0E01      	MOVLW       1
0x0AD4	0x27E7      	ADDWF       __Lib_Glcd__Glcd_Write_Char_Adv_pChBitMap_L0, 1, 1
0x0AD6	0x0E00      	MOVLW       0
0x0AD8	0x23E8      	ADDWFC      __Lib_Glcd__Glcd_Write_Char_Adv_pChBitMap_L0+1, 1, 1
0x0ADA	0x23E9      	ADDWFC      __Lib_Glcd__Glcd_Write_Char_Adv_pChBitMap_L0+2, 1, 1
;__Lib_Glcd.c,1103 :: 		
0x0ADC	0x0E01      	MOVLW       1
0x0ADE	0x6FE6      	MOVWF       __Lib_Glcd__Glcd_Write_Char_Adv_mask_L0, 1
;__Lib_Glcd.c,1104 :: 		
L___Lib_Glcd__Glcd_Write_Char_Adv216:
;__Lib_Glcd.c,1106 :: 		
0x0AE0	0x51E6      	MOVF        __Lib_Glcd__Glcd_Write_Char_Adv_mask_L0, 0, 1
0x0AE2	0x15EC      	ANDWF       __Lib_Glcd__Glcd_Write_Char_Adv_temp_L0, 0, 1
0x0AE4	0x6E00      	MOVWF       R0 
0x0AE6	0xE008      	BZ          L___Lib_Glcd__Glcd_Write_Char_Adv217
;__Lib_Glcd.c,1107 :: 		
0x0AE8	0xF20BC1E5  	MOVFF       __Lib_Glcd__Glcd_Write_Char_Adv_y_L0, FARG_Glcd_Dot_x_pos
0x0AEC	0xF20CC1EB  	MOVFF       __Lib_Glcd__Glcd_Write_Char_Adv_x_L0, FARG_Glcd_Dot_y_pos
0x0AF0	0xF20DC137  	MOVFF       __Lib_Glcd_FontColor, FARG_Glcd_Dot_color
0x0AF4	0xF000EC73  	CALL        _Glcd_Dot, 0
;__Lib_Glcd.c,1108 :: 		
L___Lib_Glcd__Glcd_Write_Char_Adv217:
;__Lib_Glcd.c,1110 :: 		
0x0AF8	0x0101      	MOVLB       1
0x0AFA	0x07EB      	DECF        __Lib_Glcd__Glcd_Write_Char_Adv_x_L0, 1, 1
;__Lib_Glcd.c,1111 :: 		
0x0AFC	0x37E6      	RLCF        __Lib_Glcd__Glcd_Write_Char_Adv_mask_L0, 1, 1
0x0AFE	0x91E6      	BCF         __Lib_Glcd__Glcd_Write_Char_Adv_mask_L0, 0, 1
;__Lib_Glcd.c,1100 :: 		
0x0B00	0x2BE3      	INCF        __Lib_Glcd__Glcd_Write_Char_Adv_xCnt_L0, 1, 1
;__Lib_Glcd.c,1112 :: 		
0x0B02	0xD7D8      	BRA         L___Lib_Glcd__Glcd_Write_Char_Adv213
L___Lib_Glcd__Glcd_Write_Char_Adv214:
;__Lib_Glcd.c,1114 :: 		
0x0B04	0x2BE5      	INCF        __Lib_Glcd__Glcd_Write_Char_Adv_y_L0, 1, 1
;__Lib_Glcd.c,1097 :: 		
0x0B06	0x2BE4      	INCF        __Lib_Glcd__Glcd_Write_Char_Adv_yCnt_L0, 1, 1
;__Lib_Glcd.c,1115 :: 		
0x0B08	0xD7C9      	BRA         L___Lib_Glcd__Glcd_Write_Char_Adv210
L___Lib_Glcd__Glcd_Write_Char_Adv211:
;__Lib_Glcd.c,1118 :: 		
0x0B0A	0x05EB      	DECF        __Lib_Glcd__Glcd_Write_Char_Adv_x_L0, 0, 1
0x0B0C	0x6F1C      	MOVWF       __Lib_Glcd_y_cord, 1
0x0B0E	0x6B1D      	CLRF        __Lib_Glcd_y_cord+1, 1
0x0B10	0x0E00      	MOVLW       0
0x0B12	0x5B1D      	SUBWFB      __Lib_Glcd_y_cord+1, 1, 1
;__Lib_Glcd.c,1119 :: 		
L___Lib_Glcd__Glcd_Write_Char_Adv209:
;__Lib_Glcd.c,1120 :: 		
L_end__Glcd_Write_Char_Adv:
0x0B14	0x0012      	RETURN      0
; end of __Lib_Glcd__Glcd_Write_Char_Adv
_Glcd_Write_Char:
;__Lib_Glcd.c,217 :: 		
;__Lib_Glcd.c,221 :: 		
0x0B16	0x0101      	MOVLB       1
0x0B18	0x51E4      	MOVF        FARG_Glcd_Write_Char_page_num, 0, 1
0x0B1A	0x0807      	SUBLW       7
0x0B1C	0xE201      	BC          L_Glcd_Write_Char14
;__Lib_Glcd.c,222 :: 		
0x0B1E	0xD096      	BRA         L_end_Glcd_Write_Char
L_Glcd_Write_Char14:
;__Lib_Glcd.c,224 :: 		
0x0B20	0x5154      	MOVF        __Lib_Glcd_fontOffset, 0, 1
0x0B22	0x5DE2      	SUBWF       FARG_Glcd_Write_Char_chr, 0, 1
0x0B24	0x6E00      	MOVWF       R0 
0x0B26	0xF001C155  	MOVFF       __Lib_Glcd_fontOffset+1, R1
0x0B2A	0x0E00      	MOVLW       0
0x0B2C	0x5601      	SUBFWB      R1, 1 
0x0B2E	0xF004C150  	MOVFF       __Lib_Glcd_fontW, R4
0x0B32	0x0E00      	MOVLW       0
0x0B34	0x6E05      	MOVWF       R5 
0x0B36	0xF001EC42  	CALL        _Mul_16X16_U, 0
0x0B3A	0xF1EAC000  	MOVFF       R0, Glcd_Write_Char_pointer_L0
0x0B3E	0xF1EBC001  	MOVFF       R1, Glcd_Write_Char_pointer_L0+1
;__Lib_Glcd.c,226 :: 		
0x0B42	0xF210C1E3  	MOVFF       FARG_Glcd_Write_Char_x_pos, FARG_Glcd_Set_X_x_pos
0x0B46	0xF000EC60  	CALL        _Glcd_Set_X, 0
;__Lib_Glcd.c,227 :: 		
0x0B4A	0xF210C1E4  	MOVFF       FARG_Glcd_Write_Char_page_num, FARG_Glcd_Set_Page_page
0x0B4E	0xF000EC58  	CALL        _Glcd_Set_Page, 0
;__Lib_Glcd.c,229 :: 		
0x0B52	0x0101      	MOVLB       1
0x0B54	0x6BE6      	CLRF        Glcd_Write_Char_ii_L0, 1
L_Glcd_Write_Char15:
0x0B56	0x5150      	MOVF        __Lib_Glcd_fontW, 0, 1
0x0B58	0x5DE6      	SUBWF       Glcd_Write_Char_ii_L0, 0, 1
0x0B5A	0xE253      	BC          L_Glcd_Write_Char16
;__Lib_Glcd.c,230 :: 		
0x0B5C	0x51E3      	MOVF        FARG_Glcd_Write_Char_x_pos, 0, 1
0x0B5E	0x087F      	SUBLW       127
0x0B60	0xE201      	BC          L_Glcd_Write_Char18
;__Lib_Glcd.c,231 :: 		
0x0B62	0xD074      	BRA         L_end_Glcd_Write_Char
L_Glcd_Write_Char18:
;__Lib_Glcd.c,232 :: 		
0x0B64	0xF210C1E3  	MOVFF       FARG_Glcd_Write_Char_x_pos, FARG_Glcd_Set_Side_x_pos
0x0B68	0xF000EC4A  	CALL        _Glcd_Set_Side, 0
;__Lib_Glcd.c,233 :: 		
0x0B6C	0xF210C1E4  	MOVFF       FARG_Glcd_Write_Char_page_num, FARG_Glcd_Set_Page_page
0x0B70	0xF000EC58  	CALL        _Glcd_Set_Page, 0
;__Lib_Glcd.c,234 :: 		
0x0B74	0xF210C1E3  	MOVFF       FARG_Glcd_Write_Char_x_pos, FARG_Glcd_Set_X_x_pos
0x0B78	0xF000EC60  	CALL        _Glcd_Set_X, 0
;__Lib_Glcd.c,236 :: 		
0x0B7C	0xF000EC1C  	CALL        _Glcd_Read_Data, 0
0x0B80	0xF1E7C000  	MOVFF       R0, Glcd_Write_Char_data_read_L0
;__Lib_Glcd.c,237 :: 		
0x0B84	0xF000EC1C  	CALL        _Glcd_Read_Data, 0
0x0B88	0xF1E7C000  	MOVFF       R0, Glcd_Write_Char_data_read_L0
;__Lib_Glcd.c,239 :: 		
0x0B8C	0xF210C1E3  	MOVFF       FARG_Glcd_Write_Char_x_pos, FARG_Glcd_Set_Side_x_pos
0x0B90	0xF000EC4A  	CALL        _Glcd_Set_Side, 0
;__Lib_Glcd.c,240 :: 		
0x0B94	0xF210C1E4  	MOVFF       FARG_Glcd_Write_Char_page_num, FARG_Glcd_Set_Page_page
0x0B98	0xF000EC58  	CALL        _Glcd_Set_Page, 0
;__Lib_Glcd.c,241 :: 		
0x0B9C	0xF210C1E3  	MOVFF       FARG_Glcd_Write_Char_x_pos, FARG_Glcd_Set_X_x_pos
0x0BA0	0xF000EC60  	CALL        _Glcd_Set_X, 0
;__Lib_Glcd.c,244 :: 		
0x0BA4	0x0101      	MOVLB       1
0x0BA6	0x51EA      	MOVF        Glcd_Write_Char_pointer_L0, 0, 1
0x0BA8	0x2541      	ADDWF       __Lib_Glcd_fontDef, 0, 1
0x0BAA	0x6EF6      	MOVWF       TBLPTR 
0x0BAC	0x51EB      	MOVF        Glcd_Write_Char_pointer_L0+1, 0, 1
0x0BAE	0x2142      	ADDWFC      __Lib_Glcd_fontDef+1, 0, 1
0x0BB0	0x6EF7      	MOVWF       TBLPTR+1 
0x0BB2	0x0E00      	MOVLW       0
0x0BB4	0xBFEB      	BTFSC       Glcd_Write_Char_pointer_L0+1, 7, 1
0x0BB6	0x0EFF      	MOVLW       255
0x0BB8	0x2143      	ADDWFC      __Lib_Glcd_fontDef+2, 0, 1
0x0BBA	0x6EF8      	MOVWF       TBLPTR+2 
0x0BBC	0x0009      	TBLRD*+
0x0BBE	0xF000CFF5  	MOVFF       TABLAT, R0
0x0BC2	0xF1E8C000  	MOVFF       R0, Glcd_Write_Char_font_ch_L0
0x0BC6	0x4BEA      	INFSNZ      Glcd_Write_Char_pointer_L0, 1, 1
0x0BC8	0x2BEB      	INCF        Glcd_Write_Char_pointer_L0+1, 1, 1
;__Lib_Glcd.c,245 :: 		
0x0BCA	0x1C00      	COMF        R0, 0 
0x0BCC	0x6FE9      	MOVWF       Glcd_Write_Char_font_ch_inv_L0, 1
;__Lib_Glcd.c,248 :: 		
0x0BCE	0xD009      	BRA         L_Glcd_Write_Char19
;__Lib_Glcd.c,249 :: 		
L_Glcd_Write_Char21:
0x0BD0	0xF1E7C1E9  	MOVFF       Glcd_Write_Char_font_ch_inv_L0, Glcd_Write_Char_data_read_L0
0x0BD4	0xD00F      	BRA         L_Glcd_Write_Char20
;__Lib_Glcd.c,250 :: 		
L_Glcd_Write_Char22:
0x0BD6	0xF1E7C1E8  	MOVFF       Glcd_Write_Char_font_ch_L0, Glcd_Write_Char_data_read_L0
0x0BDA	0xD00C      	BRA         L_Glcd_Write_Char20
;__Lib_Glcd.c,251 :: 		
L_Glcd_Write_Char23:
0x0BDC	0x51E8      	MOVF        Glcd_Write_Char_font_ch_L0, 0, 1
0x0BDE	0x1BE7      	XORWF       Glcd_Write_Char_data_read_L0, 1, 1
;__Lib_Glcd.c,252 :: 		
0x0BE0	0xD009      	BRA         L_Glcd_Write_Char20
L_Glcd_Write_Char19:
0x0BE2	0x51E5      	MOVF        FARG_Glcd_Write_Char_color, 0, 1
0x0BE4	0x0A00      	XORLW       0
0x0BE6	0xE0F4      	BZ          L_Glcd_Write_Char21
0x0BE8	0x51E5      	MOVF        FARG_Glcd_Write_Char_color, 0, 1
0x0BEA	0x0A01      	XORLW       1
0x0BEC	0xE0F4      	BZ          L_Glcd_Write_Char22
0x0BEE	0x51E5      	MOVF        FARG_Glcd_Write_Char_color, 0, 1
0x0BF0	0x0A02      	XORLW       2
0x0BF2	0xE0F4      	BZ          L_Glcd_Write_Char23
L_Glcd_Write_Char20:
;__Lib_Glcd.c,254 :: 		
0x0BF4	0xF210C1E7  	MOVFF       Glcd_Write_Char_data_read_L0, FARG_Glcd_Write_Data_ddata
0x0BF8	0xF000EC43  	CALL        _Glcd_Write_Data, 0
;__Lib_Glcd.c,255 :: 		
0x0BFC	0x2BE3      	INCF        FARG_Glcd_Write_Char_x_pos, 1, 1
;__Lib_Glcd.c,229 :: 		
0x0BFE	0x2BE6      	INCF        Glcd_Write_Char_ii_L0, 1, 1
;__Lib_Glcd.c,256 :: 		
0x0C00	0xD7AA      	BRA         L_Glcd_Write_Char15
L_Glcd_Write_Char16:
;__Lib_Glcd.c,259 :: 		
0x0C02	0xF210C1E3  	MOVFF       FARG_Glcd_Write_Char_x_pos, FARG_Glcd_Set_Side_x_pos
0x0C06	0xF000EC4A  	CALL        _Glcd_Set_Side, 0
;__Lib_Glcd.c,260 :: 		
0x0C0A	0xF210C1E4  	MOVFF       FARG_Glcd_Write_Char_page_num, FARG_Glcd_Set_Page_page
0x0C0E	0xF000EC58  	CALL        _Glcd_Set_Page, 0
;__Lib_Glcd.c,261 :: 		
0x0C12	0xF210C1E3  	MOVFF       FARG_Glcd_Write_Char_x_pos, FARG_Glcd_Set_X_x_pos
0x0C16	0xF000EC60  	CALL        _Glcd_Set_X, 0
;__Lib_Glcd.c,263 :: 		
0x0C1A	0x0EFF      	MOVLW       255
0x0C1C	0x0101      	MOVLB       1
0x0C1E	0x6FE8      	MOVWF       Glcd_Write_Char_font_ch_L0, 1
;__Lib_Glcd.c,264 :: 		
0x0C20	0x6BE9      	CLRF        Glcd_Write_Char_font_ch_inv_L0, 1
;__Lib_Glcd.c,266 :: 		
0x0C22	0xD00E      	BRA         L_Glcd_Write_Char24
;__Lib_Glcd.c,267 :: 		
L_Glcd_Write_Char26:
;__Lib_Glcd.c,268 :: 		
0x0C24	0xF1E7C1E8  	MOVFF       Glcd_Write_Char_font_ch_L0, Glcd_Write_Char_data_read_L0
;__Lib_Glcd.c,269 :: 		
0x0C28	0xF210C1E8  	MOVFF       Glcd_Write_Char_font_ch_L0, FARG_Glcd_Write_Data_ddata
0x0C2C	0xF000EC43  	CALL        _Glcd_Write_Data, 0
;__Lib_Glcd.c,270 :: 		
0x0C30	0xD00D      	BRA         L_Glcd_Write_Char25
;__Lib_Glcd.c,271 :: 		
L_Glcd_Write_Char27:
;__Lib_Glcd.c,272 :: 		
0x0C32	0xF1E7C1E9  	MOVFF       Glcd_Write_Char_font_ch_inv_L0, Glcd_Write_Char_data_read_L0
;__Lib_Glcd.c,273 :: 		
0x0C36	0xF210C1E9  	MOVFF       Glcd_Write_Char_font_ch_inv_L0, FARG_Glcd_Write_Data_ddata
0x0C3A	0xF000EC43  	CALL        _Glcd_Write_Data, 0
;__Lib_Glcd.c,274 :: 		
0x0C3E	0xD006      	BRA         L_Glcd_Write_Char25
;__Lib_Glcd.c,275 :: 		
L_Glcd_Write_Char24:
0x0C40	0x51E5      	MOVF        FARG_Glcd_Write_Char_color, 0, 1
0x0C42	0x0A00      	XORLW       0
0x0C44	0xE0EF      	BZ          L_Glcd_Write_Char26
0x0C46	0x51E5      	MOVF        FARG_Glcd_Write_Char_color, 0, 1
0x0C48	0x0A01      	XORLW       1
0x0C4A	0xE0F3      	BZ          L_Glcd_Write_Char27
L_Glcd_Write_Char25:
;__Lib_Glcd.c,277 :: 		
L_end_Glcd_Write_Char:
0x0C4C	0x0012      	RETURN      0
; end of _Glcd_Write_Char
_UART1_Write:
;__Lib_UART_c67.c,58 :: 		
;__Lib_UART_c67.c,59 :: 		
L_UART1_Write3:
0x0C4E	0xB2AC      	BTFSC       TXSTA, 1 
0x0C50	0xD002      	BRA         L_UART1_Write4
;__Lib_UART_c67.c,60 :: 		
0x0C52	0x0000      	NOP
0x0C54	0xD7FC      	BRA         L_UART1_Write3
L_UART1_Write4:
;__Lib_UART_c67.c,61 :: 		
0x0C56	0xFFADC1E2  	MOVFF       FARG_UART1_Write_data_, TXREG
;__Lib_UART_c67.c,62 :: 		
L_end_UART1_Write:
0x0C5A	0x0012      	RETURN      0
; end of _UART1_Write
_SETIOV3224:
;__Lib_MathDouble.c,530 :: 		
;__Lib_MathDouble.c,537 :: 		
0x0C5C	0x800B      	BSF         R11, 0, 0
;__Lib_MathDouble.c,538 :: 		
0x0C5E	0xAE0B      	BTFSS       R11, 7, 0
;__Lib_MathDouble.c,539 :: 		
0x0C60	0xF006EF3A  	GOTO        SETIOV3224EEE
;__Lib_MathDouble.c,541 :: 		
0x0C64	0x6A02      	CLRF        R2, 0
;__Lib_MathDouble.c,542 :: 		
0x0C66	0xAE0A      	BTFSS       R10, 7, 0
;__Lib_MathDouble.c,543 :: 		
0x0C68	0x0EFF      	MOVLW       255
;__Lib_MathDouble.c,544 :: 		
0x0C6A	0x6E02      	MOVWF       R2, 0
;__Lib_MathDouble.c,545 :: 		
0x0C6C	0x6E01      	MOVWF       R1, 0
;__Lib_MathDouble.c,546 :: 		
0x0C6E	0x6E00      	MOVWF       R0, 0
;__Lib_MathDouble.c,547 :: 		
0x0C70	0x360A      	RLCF        R10, 1, 0
;__Lib_MathDouble.c,548 :: 		
0x0C72	0x3202      	RRCF        R2, 1, 0
;__Lib_MathDouble.c,549 :: 		
SETIOV3224EEE:
;__Lib_MathDouble.c,550 :: 		
0x0C74	0x0EFF      	MOVLW       255
;__Lib_MathDouble.c,552 :: 		
L_end_SETIOV3224:
0x0C76	0x0012      	RETURN      0
; end of _SETIOV3224
_init:
;glcd.c,80 :: 		void init(){
;glcd.c,83 :: 		jugador[0].x = 42;
0x0C78	0x0E2A      	MOVLW       42
0x0C7A	0x0101      	MOVLB       1
0x0C7C	0x6FA7      	MOVWF       _jugador, 1
;glcd.c,84 :: 		jugador[0].y = 59;
0x0C7E	0x0E3B      	MOVLW       59
0x0C80	0x6FA8      	MOVWF       _jugador+1, 1
;glcd.c,85 :: 		jugador[0].w = 3;
0x0C82	0x0E03      	MOVLW       3
0x0C84	0x6FA9      	MOVWF       _jugador+2, 1
;glcd.c,86 :: 		jugador[0].h = 4;
0x0C86	0x0E04      	MOVLW       4
0x0C88	0x6FAA      	MOVWF       _jugador+3, 1
;glcd.c,89 :: 		jugador[1].x =  82;
0x0C8A	0x0E52      	MOVLW       82
0x0C8C	0x6FAB      	MOVWF       _jugador+4, 1
;glcd.c,90 :: 		jugador[1].y = 59;
0x0C8E	0x0E3B      	MOVLW       59
0x0C90	0x6FAC      	MOVWF       _jugador+5, 1
;glcd.c,91 :: 		jugador[1].w = 3;
0x0C92	0x0E03      	MOVLW       3
0x0C94	0x6FAD      	MOVWF       _jugador+6, 1
;glcd.c,92 :: 		jugador[1].h = 4;
0x0C96	0x0E04      	MOVLW       4
0x0C98	0x6FAE      	MOVWF       _jugador+7, 1
;glcd.c,94 :: 		draw_player(jugador[0].x, jugador[0].y);
0x0C9A	0x0E2A      	MOVLW       42
0x0C9C	0x6FFC      	MOVWF       FARG_draw_player_x, 1
0x0C9E	0x0E3B      	MOVLW       59
0x0CA0	0x6FFD      	MOVWF       FARG_draw_player_y, 1
0x0CA2	0xF001ECC8  	CALL        _draw_player, 0
;glcd.c,95 :: 		draw_player(jugador[1].x, jugador[1].y);
0x0CA6	0xF1FCC1AB  	MOVFF       _jugador+4, FARG_draw_player_x
0x0CAA	0xF1FDC1AC  	MOVFF       _jugador+5, FARG_draw_player_y
0x0CAE	0xF001ECC8  	CALL        _draw_player, 0
;glcd.c,97 :: 		}
L_end_init:
0x0CB2	0x0012      	RETURN      0
; end of _init
_borrar_player:
;glcd.c,354 :: 		void borrar_player(unsigned short x, unsigned short y){
;glcd.c,355 :: 		Glcd_Dot(x+2, y, 0);
0x0CB4	0x0E02      	MOVLW       2
0x0CB6	0x0101      	MOVLB       1
0x0CB8	0x25E2      	ADDWF       FARG_borrar_player_x, 0, 1
0x0CBA	0x0102      	MOVLB       2
0x0CBC	0x6F0B      	MOVWF       FARG_Glcd_Dot_x_pos, 1
0x0CBE	0xF20CC1E3  	MOVFF       FARG_borrar_player_y, FARG_Glcd_Dot_y_pos
0x0CC2	0x6B0D      	CLRF        FARG_Glcd_Dot_color, 1
0x0CC4	0xF000EC73  	CALL        _Glcd_Dot, 0
;glcd.c,356 :: 		Glcd_Dot(x+2, y+2, 0);
0x0CC8	0x0E02      	MOVLW       2
0x0CCA	0x0101      	MOVLB       1
0x0CCC	0x25E2      	ADDWF       FARG_borrar_player_x, 0, 1
0x0CCE	0x0102      	MOVLB       2
0x0CD0	0x6F0B      	MOVWF       FARG_Glcd_Dot_x_pos, 1
0x0CD2	0x0E02      	MOVLW       2
0x0CD4	0x0101      	MOVLB       1
0x0CD6	0x25E3      	ADDWF       FARG_borrar_player_y, 0, 1
0x0CD8	0x0102      	MOVLB       2
0x0CDA	0x6F0C      	MOVWF       FARG_Glcd_Dot_y_pos, 1
0x0CDC	0x6B0D      	CLRF        FARG_Glcd_Dot_color, 1
0x0CDE	0xF000EC73  	CALL        _Glcd_Dot, 0
;glcd.c,357 :: 		Glcd_Dot(x+4, y+4, 0);
0x0CE2	0x0E04      	MOVLW       4
0x0CE4	0x0101      	MOVLB       1
0x0CE6	0x25E2      	ADDWF       FARG_borrar_player_x, 0, 1
0x0CE8	0x0102      	MOVLB       2
0x0CEA	0x6F0B      	MOVWF       FARG_Glcd_Dot_x_pos, 1
0x0CEC	0x0E04      	MOVLW       4
0x0CEE	0x0101      	MOVLB       1
0x0CF0	0x25E3      	ADDWF       FARG_borrar_player_y, 0, 1
0x0CF2	0x0102      	MOVLB       2
0x0CF4	0x6F0C      	MOVWF       FARG_Glcd_Dot_y_pos, 1
0x0CF6	0x6B0D      	CLRF        FARG_Glcd_Dot_color, 1
0x0CF8	0xF000EC73  	CALL        _Glcd_Dot, 0
;glcd.c,358 :: 		Glcd_Dot(x, y+4, 0);
0x0CFC	0xF20BC1E2  	MOVFF       FARG_borrar_player_x, FARG_Glcd_Dot_x_pos
0x0D00	0x0E04      	MOVLW       4
0x0D02	0x0101      	MOVLB       1
0x0D04	0x25E3      	ADDWF       FARG_borrar_player_y, 0, 1
0x0D06	0x0102      	MOVLB       2
0x0D08	0x6F0C      	MOVWF       FARG_Glcd_Dot_y_pos, 1
0x0D0A	0x6B0D      	CLRF        FARG_Glcd_Dot_color, 1
0x0D0C	0xF000EC73  	CALL        _Glcd_Dot, 0
;glcd.c,359 :: 		}
L_end_borrar_player:
0x0D10	0x0012      	RETURN      0
; end of _borrar_player
_UART1_Tx_Idle:
;__Lib_UART_c67.c,52 :: 		
;__Lib_UART_c67.c,53 :: 		
0x0D12	0x0E00      	MOVLW       0
0x0D14	0xB2AC      	BTFSC       TXSTA, 1 
0x0D16	0x0E01      	MOVLW       1
0x0D18	0x6E00      	MOVWF       R0 
;__Lib_UART_c67.c,54 :: 		
L_end_UART1_Tx_Idle:
0x0D1A	0x0012      	RETURN      0
; end of _UART1_Tx_Idle
_move_players:
;glcd.c,361 :: 		void move_players(unsigned short direc, unsigned short player){
;glcd.c,362 :: 		if(direc == 0){ // Direccion hacia abajo
0x0D1C	0x0101      	MOVLB       1
0x0D1E	0x51DA      	MOVF        FARG_move_players_direc, 0, 1
0x0D20	0x0A00      	XORLW       0
0x0D22	0xA4D8      	BTFSS       STATUS, 2 
0x0D24	0xD0A6      	BRA         L_move_players71
;glcd.c,363 :: 		if(jugador[player].y >= 63 - jugador[player].h){
0x0D26	0xF000C1DB  	MOVFF       FARG_move_players_player, R0
0x0D2A	0x0E00      	MOVLW       0
0x0D2C	0x6E01      	MOVWF       R1 
0x0D2E	0x3600      	RLCF        R0, 1 
0x0D30	0x9000      	BCF         R0, 0 
0x0D32	0x3601      	RLCF        R1, 1 
0x0D34	0x3600      	RLCF        R0, 1 
0x0D36	0x9000      	BCF         R0, 0 
0x0D38	0x3601      	RLCF        R1, 1 
0x0D3A	0x0EA7      	MOVLW       _jugador
0x0D3C	0x2600      	ADDWF       R0, 1 
0x0D3E	0x0E01      	MOVLW       hi_addr(_jugador)
0x0D40	0x2201      	ADDWFC      R1, 1 
0x0D42	0x0E01      	MOVLW       1
0x0D44	0x2400      	ADDWF       R0, 0 
0x0D46	0x6EE9      	MOVWF       FSR0L 
0x0D48	0x0E00      	MOVLW       0
0x0D4A	0x2001      	ADDWFC      R1, 0 
0x0D4C	0x6EEA      	MOVWF       FSR0L+1 
0x0D4E	0xF003CFEE  	MOVFF       POSTINC0, R3
0x0D52	0x0E03      	MOVLW       3
0x0D54	0x2400      	ADDWF       R0, 0 
0x0D56	0x6ED9      	MOVWF       FSR2L 
0x0D58	0x0E00      	MOVLW       0
0x0D5A	0x2001      	ADDWFC      R1, 0 
0x0D5C	0x6EDA      	MOVWF       FSR2L+1 
0x0D5E	0x50DE      	MOVF        POSTINC2, 0 
0x0D60	0x083F      	SUBLW       63
0x0D62	0x6E01      	MOVWF       R1 
0x0D64	0x6A02      	CLRF        R2 
0x0D66	0x0E00      	MOVLW       0
0x0D68	0x5A02      	SUBWFB      R2, 1 
0x0D6A	0x0E80      	MOVLW       128
0x0D6C	0x6E00      	MOVWF       R0 
0x0D6E	0x0E80      	MOVLW       128
0x0D70	0x1802      	XORWF       R2, 0 
0x0D72	0x5C00      	SUBWF       R0, 0 
0x0D74	0xE102      	BNZ         L__move_players521
0x0D76	0x5001      	MOVF        R1, 0 
0x0D78	0x5C03      	SUBWF       R3, 0 
L__move_players521:
0x0D7A	0xE33D      	BNC         L_move_players72
;glcd.c,364 :: 		borrar_player(jugador[player].x, jugador[player].y);
0x0D7C	0xF000C1DB  	MOVFF       FARG_move_players_player, R0
0x0D80	0x0E00      	MOVLW       0
0x0D82	0x6E01      	MOVWF       R1 
0x0D84	0x3600      	RLCF        R0, 1 
0x0D86	0x9000      	BCF         R0, 0 
0x0D88	0x3601      	RLCF        R1, 1 
0x0D8A	0x3600      	RLCF        R0, 1 
0x0D8C	0x9000      	BCF         R0, 0 
0x0D8E	0x3601      	RLCF        R1, 1 
0x0D90	0x0EA7      	MOVLW       _jugador
0x0D92	0x2600      	ADDWF       R0, 1 
0x0D94	0x0E01      	MOVLW       hi_addr(_jugador)
0x0D96	0x2201      	ADDWFC      R1, 1 
0x0D98	0xFFE9C000  	MOVFF       R0, FSR0L
0x0D9C	0xFFEAC001  	MOVFF       R1, FSR0H
0x0DA0	0xF1E2CFEE  	MOVFF       POSTINC0, FARG_borrar_player_x
0x0DA4	0x0E01      	MOVLW       1
0x0DA6	0x2400      	ADDWF       R0, 0 
0x0DA8	0x6EE9      	MOVWF       FSR0L 
0x0DAA	0x0E00      	MOVLW       0
0x0DAC	0x2001      	ADDWFC      R1, 0 
0x0DAE	0x6EEA      	MOVWF       FSR0L+1 
0x0DB0	0xF1E3CFEE  	MOVFF       POSTINC0, FARG_borrar_player_y
0x0DB4	0xDF7F      	RCALL       _borrar_player
;glcd.c,365 :: 		jugador[player].y = 63 - jugador[player].h;
0x0DB6	0xF000C1DB  	MOVFF       FARG_move_players_player, R0
0x0DBA	0x0E00      	MOVLW       0
0x0DBC	0x6E01      	MOVWF       R1 
0x0DBE	0x3600      	RLCF        R0, 1 
0x0DC0	0x9000      	BCF         R0, 0 
0x0DC2	0x3601      	RLCF        R1, 1 
0x0DC4	0x3600      	RLCF        R0, 1 
0x0DC6	0x9000      	BCF         R0, 0 
0x0DC8	0x3601      	RLCF        R1, 1 
0x0DCA	0x0EA7      	MOVLW       _jugador
0x0DCC	0x2600      	ADDWF       R0, 1 
0x0DCE	0x0E01      	MOVLW       hi_addr(_jugador)
0x0DD0	0x2201      	ADDWFC      R1, 1 
0x0DD2	0x0E01      	MOVLW       1
0x0DD4	0x2400      	ADDWF       R0, 0 
0x0DD6	0x6EE1      	MOVWF       FSR1L 
0x0DD8	0x0E00      	MOVLW       0
0x0DDA	0x2001      	ADDWFC      R1, 0 
0x0DDC	0x6EE2      	MOVWF       FSR1L+1 
0x0DDE	0x0E03      	MOVLW       3
0x0DE0	0x2400      	ADDWF       R0, 0 
0x0DE2	0x6ED9      	MOVWF       FSR2L 
0x0DE4	0x0E00      	MOVLW       0
0x0DE6	0x2001      	ADDWFC      R1, 0 
0x0DE8	0x6EDA      	MOVWF       FSR2L+1 
0x0DEA	0x50DE      	MOVF        POSTINC2, 0 
0x0DEC	0x083F      	SUBLW       63
0x0DEE	0x6E00      	MOVWF       R0 
0x0DF0	0xFFE6C000  	MOVFF       R0, POSTINC1
;glcd.c,366 :: 		}
0x0DF4	0xD03E      	BRA         L_move_players73
L_move_players72:
;glcd.c,368 :: 		borrar_player(jugador[player].x, jugador[player].y);
0x0DF6	0xF000C1DB  	MOVFF       FARG_move_players_player, R0
0x0DFA	0x0E00      	MOVLW       0
0x0DFC	0x6E01      	MOVWF       R1 
0x0DFE	0x3600      	RLCF        R0, 1 
0x0E00	0x9000      	BCF         R0, 0 
0x0E02	0x3601      	RLCF        R1, 1 
0x0E04	0x3600      	RLCF        R0, 1 
0x0E06	0x9000      	BCF         R0, 0 
0x0E08	0x3601      	RLCF        R1, 1 
0x0E0A	0x0EA7      	MOVLW       _jugador
0x0E0C	0x2600      	ADDWF       R0, 1 
0x0E0E	0x0E01      	MOVLW       hi_addr(_jugador)
0x0E10	0x2201      	ADDWFC      R1, 1 
0x0E12	0xFFE9C000  	MOVFF       R0, FSR0L
0x0E16	0xFFEAC001  	MOVFF       R1, FSR0H
0x0E1A	0xF1E2CFEE  	MOVFF       POSTINC0, FARG_borrar_player_x
0x0E1E	0x0E01      	MOVLW       1
0x0E20	0x2400      	ADDWF       R0, 0 
0x0E22	0x6EE9      	MOVWF       FSR0L 
0x0E24	0x0E00      	MOVLW       0
0x0E26	0x2001      	ADDWFC      R1, 0 
0x0E28	0x6EEA      	MOVWF       FSR0L+1 
0x0E2A	0xF1E3CFEE  	MOVFF       POSTINC0, FARG_borrar_player_y
0x0E2E	0xDF42      	RCALL       _borrar_player
;glcd.c,369 :: 		jugador[player].y += 2;
0x0E30	0xF000C1DB  	MOVFF       FARG_move_players_player, R0
0x0E34	0x0E00      	MOVLW       0
0x0E36	0x6E01      	MOVWF       R1 
0x0E38	0x3600      	RLCF        R0, 1 
0x0E3A	0x9000      	BCF         R0, 0 
0x0E3C	0x3601      	RLCF        R1, 1 
0x0E3E	0x3600      	RLCF        R0, 1 
0x0E40	0x9000      	BCF         R0, 0 
0x0E42	0x3601      	RLCF        R1, 1 
0x0E44	0x0EA7      	MOVLW       _jugador
0x0E46	0x2600      	ADDWF       R0, 1 
0x0E48	0x0E01      	MOVLW       hi_addr(_jugador)
0x0E4A	0x2201      	ADDWFC      R1, 1 
0x0E4C	0x0E01      	MOVLW       1
0x0E4E	0x2400      	ADDWF       R0, 0 
0x0E50	0x6E02      	MOVWF       R2 
0x0E52	0x0E00      	MOVLW       0
0x0E54	0x2001      	ADDWFC      R1, 0 
0x0E56	0x6E03      	MOVWF       R3 
0x0E58	0xFFE9C002  	MOVFF       R2, FSR0L
0x0E5C	0xFFEAC003  	MOVFF       R3, FSR0H
0x0E60	0x0E02      	MOVLW       2
0x0E62	0x24EE      	ADDWF       POSTINC0, 0 
0x0E64	0x6E00      	MOVWF       R0 
0x0E66	0xFFE1C002  	MOVFF       R2, FSR1L
0x0E6A	0xFFE2C003  	MOVFF       R3, FSR1H
0x0E6E	0xFFE6C000  	MOVFF       R0, POSTINC1
;glcd.c,370 :: 		}
L_move_players73:
;glcd.c,371 :: 		}
L_move_players71:
;glcd.c,372 :: 		if(direc == 1){  // Direccion hacia arriba
0x0E72	0x0101      	MOVLB       1
0x0E74	0x51DA      	MOVF        FARG_move_players_direc, 0, 1
0x0E76	0x0A01      	XORLW       1
0x0E78	0xA4D8      	BTFSS       STATUS, 2 
0x0E7A	0xD0A1      	BRA         L_move_players74
;glcd.c,373 :: 		if(jugador[player].y <= 1){
0x0E7C	0xF000C1DB  	MOVFF       FARG_move_players_player, R0
0x0E80	0x0E00      	MOVLW       0
0x0E82	0x6E01      	MOVWF       R1 
0x0E84	0x3600      	RLCF        R0, 1 
0x0E86	0x9000      	BCF         R0, 0 
0x0E88	0x3601      	RLCF        R1, 1 
0x0E8A	0x3600      	RLCF        R0, 1 
0x0E8C	0x9000      	BCF         R0, 0 
0x0E8E	0x3601      	RLCF        R1, 1 
0x0E90	0x0EA7      	MOVLW       _jugador
0x0E92	0x2600      	ADDWF       R0, 1 
0x0E94	0x0E01      	MOVLW       hi_addr(_jugador)
0x0E96	0x2201      	ADDWFC      R1, 1 
0x0E98	0x0E01      	MOVLW       1
0x0E9A	0x2400      	ADDWF       R0, 0 
0x0E9C	0x6EE9      	MOVWF       FSR0L 
0x0E9E	0x0E00      	MOVLW       0
0x0EA0	0x2001      	ADDWFC      R1, 0 
0x0EA2	0x6EEA      	MOVWF       FSR0L+1 
0x0EA4	0x50EE      	MOVF        POSTINC0, 0 
0x0EA6	0x0801      	SUBLW       1
0x0EA8	0xE34C      	BNC         L_move_players75
;glcd.c,374 :: 		borrar_player(jugador[player].x, jugador[player].y);
0x0EAA	0xF000C1DB  	MOVFF       FARG_move_players_player, R0
0x0EAE	0x0E00      	MOVLW       0
0x0EB0	0x6E01      	MOVWF       R1 
0x0EB2	0x3600      	RLCF        R0, 1 
0x0EB4	0x9000      	BCF         R0, 0 
0x0EB6	0x3601      	RLCF        R1, 1 
0x0EB8	0x3600      	RLCF        R0, 1 
0x0EBA	0x9000      	BCF         R0, 0 
0x0EBC	0x3601      	RLCF        R1, 1 
0x0EBE	0x0EA7      	MOVLW       _jugador
0x0EC0	0x2600      	ADDWF       R0, 1 
0x0EC2	0x0E01      	MOVLW       hi_addr(_jugador)
0x0EC4	0x2201      	ADDWFC      R1, 1 
0x0EC6	0xFFE9C000  	MOVFF       R0, FSR0L
0x0ECA	0xFFEAC001  	MOVFF       R1, FSR0H
0x0ECE	0xF1E2CFEE  	MOVFF       POSTINC0, FARG_borrar_player_x
0x0ED2	0x0E01      	MOVLW       1
0x0ED4	0x2400      	ADDWF       R0, 0 
0x0ED6	0x6EE9      	MOVWF       FSR0L 
0x0ED8	0x0E00      	MOVLW       0
0x0EDA	0x2001      	ADDWFC      R1, 0 
0x0EDC	0x6EEA      	MOVWF       FSR0L+1 
0x0EDE	0xF1E3CFEE  	MOVFF       POSTINC0, FARG_borrar_player_y
0x0EE2	0xDEE8      	RCALL       _borrar_player
;glcd.c,375 :: 		jugador[player].y = 59;
0x0EE4	0xF000C1DB  	MOVFF       FARG_move_players_player, R0
0x0EE8	0x0E00      	MOVLW       0
0x0EEA	0x6E01      	MOVWF       R1 
0x0EEC	0x3600      	RLCF        R0, 1 
0x0EEE	0x9000      	BCF         R0, 0 
0x0EF0	0x3601      	RLCF        R1, 1 
0x0EF2	0x3600      	RLCF        R0, 1 
0x0EF4	0x9000      	BCF         R0, 0 
0x0EF6	0x3601      	RLCF        R1, 1 
0x0EF8	0x0EA7      	MOVLW       _jugador
0x0EFA	0x2600      	ADDWF       R0, 1 
0x0EFC	0x0E01      	MOVLW       hi_addr(_jugador)
0x0EFE	0x2201      	ADDWFC      R1, 1 
0x0F00	0x0E01      	MOVLW       1
0x0F02	0x2400      	ADDWF       R0, 0 
0x0F04	0x6EE1      	MOVWF       FSR1L 
0x0F06	0x0E00      	MOVLW       0
0x0F08	0x2001      	ADDWFC      R1, 0 
0x0F0A	0x6EE2      	MOVWF       FSR1L+1 
0x0F0C	0x0E3B      	MOVLW       59
0x0F0E	0x6EE6      	MOVWF       POSTINC1 
;glcd.c,376 :: 		score[player] += 1;
0x0F10	0x0EF5      	MOVLW       _score
0x0F12	0x6E01      	MOVWF       R1 
0x0F14	0x0E00      	MOVLW       hi_addr(_score)
0x0F16	0x6E02      	MOVWF       R2 
0x0F18	0x0101      	MOVLB       1
0x0F1A	0x51DB      	MOVF        FARG_move_players_player, 0, 1
0x0F1C	0x2601      	ADDWF       R1, 1 
0x0F1E	0xB0D8      	BTFSC       STATUS, 0 
0x0F20	0x2A02      	INCF        R2, 1 
0x0F22	0xFFE9C001  	MOVFF       R1, FSR0L
0x0F26	0xFFEAC002  	MOVFF       R2, FSR0H
0x0F2A	0x50EE      	MOVF        POSTINC0, 0 
0x0F2C	0x0F01      	ADDLW       1
0x0F2E	0x6E00      	MOVWF       R0 
0x0F30	0xFFE1C001  	MOVFF       R1, FSR1L
0x0F34	0xFFE2C002  	MOVFF       R2, FSR1H
0x0F38	0xFFE6C000  	MOVFF       R0, POSTINC1
;glcd.c,377 :: 		turno_player = 0;
0x0F3C	0x0100      	MOVLB       0
0x0F3E	0x6BF4      	CLRF        _turno_player, 1
;glcd.c,378 :: 		}
0x0F40	0xD03E      	BRA         L_move_players76
L_move_players75:
;glcd.c,380 :: 		borrar_player(jugador[player].x, jugador[player].y);
0x0F42	0xF000C1DB  	MOVFF       FARG_move_players_player, R0
0x0F46	0x0E00      	MOVLW       0
0x0F48	0x6E01      	MOVWF       R1 
0x0F4A	0x3600      	RLCF        R0, 1 
0x0F4C	0x9000      	BCF         R0, 0 
0x0F4E	0x3601      	RLCF        R1, 1 
0x0F50	0x3600      	RLCF        R0, 1 
0x0F52	0x9000      	BCF         R0, 0 
0x0F54	0x3601      	RLCF        R1, 1 
0x0F56	0x0EA7      	MOVLW       _jugador
0x0F58	0x2600      	ADDWF       R0, 1 
0x0F5A	0x0E01      	MOVLW       hi_addr(_jugador)
0x0F5C	0x2201      	ADDWFC      R1, 1 
0x0F5E	0xFFE9C000  	MOVFF       R0, FSR0L
0x0F62	0xFFEAC001  	MOVFF       R1, FSR0H
0x0F66	0xF1E2CFEE  	MOVFF       POSTINC0, FARG_borrar_player_x
0x0F6A	0x0E01      	MOVLW       1
0x0F6C	0x2400      	ADDWF       R0, 0 
0x0F6E	0x6EE9      	MOVWF       FSR0L 
0x0F70	0x0E00      	MOVLW       0
0x0F72	0x2001      	ADDWFC      R1, 0 
0x0F74	0x6EEA      	MOVWF       FSR0L+1 
0x0F76	0xF1E3CFEE  	MOVFF       POSTINC0, FARG_borrar_player_y
0x0F7A	0xDE9C      	RCALL       _borrar_player
;glcd.c,381 :: 		jugador[player].y -= 2;
0x0F7C	0xF000C1DB  	MOVFF       FARG_move_players_player, R0
0x0F80	0x0E00      	MOVLW       0
0x0F82	0x6E01      	MOVWF       R1 
0x0F84	0x3600      	RLCF        R0, 1 
0x0F86	0x9000      	BCF         R0, 0 
0x0F88	0x3601      	RLCF        R1, 1 
0x0F8A	0x3600      	RLCF        R0, 1 
0x0F8C	0x9000      	BCF         R0, 0 
0x0F8E	0x3601      	RLCF        R1, 1 
0x0F90	0x0EA7      	MOVLW       _jugador
0x0F92	0x2600      	ADDWF       R0, 1 
0x0F94	0x0E01      	MOVLW       hi_addr(_jugador)
0x0F96	0x2201      	ADDWFC      R1, 1 
0x0F98	0x0E01      	MOVLW       1
0x0F9A	0x2400      	ADDWF       R0, 0 
0x0F9C	0x6E02      	MOVWF       R2 
0x0F9E	0x0E00      	MOVLW       0
0x0FA0	0x2001      	ADDWFC      R1, 0 
0x0FA2	0x6E03      	MOVWF       R3 
0x0FA4	0xFFE9C002  	MOVFF       R2, FSR0L
0x0FA8	0xFFEAC003  	MOVFF       R3, FSR0H
0x0FAC	0x0E02      	MOVLW       2
0x0FAE	0x5CEE      	SUBWF       POSTINC0, 0 
0x0FB0	0x6E00      	MOVWF       R0 
0x0FB2	0xFFE1C002  	MOVFF       R2, FSR1L
0x0FB6	0xFFE2C003  	MOVFF       R3, FSR1H
0x0FBA	0xFFE6C000  	MOVFF       R0, POSTINC1
;glcd.c,382 :: 		}
L_move_players76:
;glcd.c,383 :: 		}
L_move_players74:
;glcd.c,384 :: 		}
L_end_move_players:
0x0FBE	0x0012      	RETURN      0
; end of _move_players
_fabs:
;__Lib_CMath.c,19 :: 		
;__Lib_CMath.c,20 :: 		
0x0FC0	0x6A04      	CLRF        R4 
0x0FC2	0x6A05      	CLRF        R5 
0x0FC4	0x6A06      	CLRF        R6 
0x0FC6	0x6A07      	CLRF        R7 
0x0FC8	0xF000C1DA  	MOVFF       FARG_fabs_d, R0
0x0FCC	0xF001C1DB  	MOVFF       FARG_fabs_d+1, R1
0x0FD0	0xF002C1DC  	MOVFF       FARG_fabs_d+2, R2
0x0FD4	0xF003C1DD  	MOVFF       FARG_fabs_d+3, R3
0x0FD8	0xF002EC4D  	CALL        _Compare_Double, 0
0x0FDC	0x0E01      	MOVLW       1
0x0FDE	0xB0D8      	BTFSC       STATUS, 0 
0x0FE0	0x0E00      	MOVLW       0
0x0FE2	0x6E00      	MOVWF       R0 
0x0FE4	0x5200      	MOVF        R0, 1 
0x0FE6	0xE00E      	BZ          L_fabs0
;__Lib_CMath.c,21 :: 		
0x0FE8	0x0E00      	MOVLW       0
0x0FEA	0x0101      	MOVLB       1
0x0FEC	0x19DA      	XORWF       FARG_fabs_d, 0, 1
0x0FEE	0x6E00      	MOVWF       R0 
0x0FF0	0x0E00      	MOVLW       0
0x0FF2	0x19DB      	XORWF       FARG_fabs_d+1, 0, 1
0x0FF4	0x6E01      	MOVWF       R1 
0x0FF6	0x0E80      	MOVLW       128
0x0FF8	0x19DC      	XORWF       FARG_fabs_d+2, 0, 1
0x0FFA	0x6E02      	MOVWF       R2 
0x0FFC	0x0E00      	MOVLW       0
0x0FFE	0x19DD      	XORWF       FARG_fabs_d+3, 0, 1
0x1000	0x6E03      	MOVWF       R3 
0x1002	0xD008      	BRA         L_end_fabs
L_fabs0:
;__Lib_CMath.c,22 :: 		
0x1004	0xF000C1DA  	MOVFF       FARG_fabs_d, R0
0x1008	0xF001C1DB  	MOVFF       FARG_fabs_d+1, R1
0x100C	0xF002C1DC  	MOVFF       FARG_fabs_d+2, R2
0x1010	0xF003C1DD  	MOVFF       FARG_fabs_d+3, R3
;__Lib_CMath.c,23 :: 		
L_end_fabs:
0x1014	0x0012      	RETURN      0
; end of _fabs
_check_coll:
;glcd.c,571 :: 		void check_coll(naves nave, balas aste, unsigned short num){
;glcd.c,572 :: 		if(num == 1){
0x1016	0x0101      	MOVLB       1
0x1018	0x51E1      	MOVF        FARG_check_coll_num, 0, 1
0x101A	0x0A01      	XORLW       1
0x101C	0xE123      	BNZ         L_check_coll251
;glcd.c,573 :: 		if((aste.x >= nave.x) && (aste.x < nave.x + 4)) {
0x101E	0x0E80      	MOVLW       128
0x1020	0xBFDE      	BTFSC       FARG_check_coll_aste, 7, 1
0x1022	0x0E7F      	MOVLW       127
0x1024	0x6E00      	MOVWF       R0 
0x1026	0x0E80      	MOVLW       128
0x1028	0x5C00      	SUBWF       R0, 0 
0x102A	0xE102      	BNZ         L__check_coll565
0x102C	0x51DA      	MOVF        FARG_check_coll_nave, 0, 1
0x102E	0x5DDE      	SUBWF       FARG_check_coll_aste, 0, 1
L__check_coll565:
0x1030	0xE319      	BNC         L_check_coll254
0x1032	0x0E04      	MOVLW       4
0x1034	0x25DA      	ADDWF       FARG_check_coll_nave, 0, 1
0x1036	0x6E01      	MOVWF       R1 
0x1038	0x6A02      	CLRF        R2 
0x103A	0x0E00      	MOVLW       0
0x103C	0x2202      	ADDWFC      R2, 1 
0x103E	0x0E80      	MOVLW       128
0x1040	0xBFDE      	BTFSC       FARG_check_coll_aste, 7, 1
0x1042	0x0E7F      	MOVLW       127
0x1044	0x6E00      	MOVWF       R0 
0x1046	0x0E80      	MOVLW       128
0x1048	0x1802      	XORWF       R2, 0 
0x104A	0x5C00      	SUBWF       R0, 0 
0x104C	0xE102      	BNZ         L__check_coll566
0x104E	0x5001      	MOVF        R1, 0 
0x1050	0x5DDE      	SUBWF       FARG_check_coll_aste, 0, 1
L__check_coll566:
0x1052	0xE208      	BC          L_check_coll254
L__check_coll484:
;glcd.c,574 :: 		borrar_player(nave.x, nave.y);
0x1054	0xF1E2C1DA  	MOVFF       FARG_check_coll_nave, FARG_borrar_player_x
0x1058	0xF1E3C1DB  	MOVFF       FARG_check_coll_nave+1, FARG_borrar_player_y
0x105C	0xDE2B      	RCALL       _borrar_player
;glcd.c,575 :: 		init();
0x105E	0xDE0C      	RCALL       _init
;glcd.c,576 :: 		turno_player = 0;
0x1060	0x0100      	MOVLB       0
0x1062	0x6BF4      	CLRF        _turno_player, 1
;glcd.c,577 :: 		}
L_check_coll254:
;glcd.c,578 :: 		}
L_check_coll251:
;glcd.c,579 :: 		}
L_end_check_coll:
0x1064	0x0012      	RETURN      0
; end of _check_coll
_Glcd_Write_Text_Adv:
;__Lib_Glcd.c,1261 :: 		
;__Lib_Glcd.c,1264 :: 		
0x1066	0x0E00      	MOVLW       0
0x1068	0x0101      	MOVLB       1
0x106A	0x5DDD      	SUBWF       FARG_Glcd_Write_Text_Adv_x+1, 0, 1
0x106C	0xE102      	BNZ         L__Glcd_Write_Text_Adv448
0x106E	0x0E80      	MOVLW       128
0x1070	0x5DDC      	SUBWF       FARG_Glcd_Write_Text_Adv_x, 0, 1
L__Glcd_Write_Text_Adv448:
0x1072	0xE301      	BNC         L_Glcd_Write_Text_Adv239
;__Lib_Glcd.c,1265 :: 		
0x1074	0xD03B      	BRA         L_end_Glcd_Write_Text_Adv
L_Glcd_Write_Text_Adv239:
;__Lib_Glcd.c,1266 :: 		
0x1076	0x0E00      	MOVLW       0
0x1078	0x5DDF      	SUBWF       FARG_Glcd_Write_Text_Adv_y+1, 0, 1
0x107A	0xE102      	BNZ         L__Glcd_Write_Text_Adv449
0x107C	0x0E40      	MOVLW       64
0x107E	0x5DDE      	SUBWF       FARG_Glcd_Write_Text_Adv_y, 0, 1
L__Glcd_Write_Text_Adv449:
0x1080	0xE301      	BNC         L_Glcd_Write_Text_Adv240
;__Lib_Glcd.c,1267 :: 		
0x1082	0xD034      	BRA         L_end_Glcd_Write_Text_Adv
L_Glcd_Write_Text_Adv240:
;__Lib_Glcd.c,1269 :: 		
0x1084	0x6BE0      	CLRF        Glcd_Write_Text_Adv_i_L0, 1
0x1086	0x6BE1      	CLRF        Glcd_Write_Text_Adv_i_L0+1, 1
;__Lib_Glcd.c,1270 :: 		
0x1088	0xF1E2C1DC  	MOVFF       FARG_Glcd_Write_Text_Adv_x, FARG___Lib_Glcd_Glcd_Move_Cursor__x
0x108C	0xF1E3C1DD  	MOVFF       FARG_Glcd_Write_Text_Adv_x+1, FARG___Lib_Glcd_Glcd_Move_Cursor__x+1
0x1090	0xF1E4C1DE  	MOVFF       FARG_Glcd_Write_Text_Adv_y, FARG___Lib_Glcd_Glcd_Move_Cursor__y
0x1094	0xF1E5C1DF  	MOVFF       FARG_Glcd_Write_Text_Adv_y+1, FARG___Lib_Glcd_Glcd_Move_Cursor__y+1
0x1098	0xF002EC0B  	CALL        __Lib_Glcd_Glcd_Move_Cursor, 0
;__Lib_Glcd.c,1271 :: 		
L_Glcd_Write_Text_Adv241:
0x109C	0x51E0      	MOVF        Glcd_Write_Text_Adv_i_L0, 0, 1
0x109E	0x25DA      	ADDWF       FARG_Glcd_Write_Text_Adv_text, 0, 1
0x10A0	0x6EE9      	MOVWF       FSR0L 
0x10A2	0x51E1      	MOVF        Glcd_Write_Text_Adv_i_L0+1, 0, 1
0x10A4	0x21DB      	ADDWFC      FARG_Glcd_Write_Text_Adv_text+1, 0, 1
0x10A6	0x6EEA      	MOVWF       FSR0L+1 
0x10A8	0x52EE      	MOVF        POSTINC0, 1 
0x10AA	0xE020      	BZ          L_Glcd_Write_Text_Adv242
;__Lib_Glcd.c,1272 :: 		
0x10AC	0x5152      	MOVF        __Lib_Glcd_ExternalFontSet, 0, 1
0x10AE	0x1153      	IORWF       __Lib_Glcd_ExternalFontSet+1, 0, 1
0x10B0	0xE011      	BZ          L_Glcd_Write_Text_Adv243
;__Lib_Glcd.c,1273 :: 		
0x10B2	0x51E0      	MOVF        Glcd_Write_Text_Adv_i_L0, 0, 1
0x10B4	0x25DA      	ADDWF       FARG_Glcd_Write_Text_Adv_text, 0, 1
0x10B6	0x6EE9      	MOVWF       FSR0L 
0x10B8	0x51E1      	MOVF        Glcd_Write_Text_Adv_i_L0+1, 0, 1
0x10BA	0x21DB      	ADDWFC      FARG_Glcd_Write_Text_Adv_text+1, 0, 1
0x10BC	0x6EEA      	MOVWF       FSR0L+1 
0x10BE	0xF1E2CFEE  	MOVFF       POSTINC0, FARG___Lib_Glcd__Glcd_Write_Char_AdvE_ch
0x10C2	0x0E00      	MOVLW       0
0x10C4	0x6FE3      	MOVWF       FARG___Lib_Glcd__Glcd_Write_Char_AdvE_ch+1, 1
0x10C6	0x0E00      	MOVLW       0
0x10C8	0x6FE3      	MOVWF       FARG___Lib_Glcd__Glcd_Write_Char_AdvE_ch+1, 1
0x10CA	0xF002ECB4  	CALL        __Lib_Glcd__Glcd_Write_Char_AdvE, 0
0x10CE	0x4BE0      	INFSNZ      Glcd_Write_Text_Adv_i_L0, 1, 1
0x10D0	0x2BE1      	INCF        Glcd_Write_Text_Adv_i_L0+1, 1, 1
0x10D2	0xD00B      	BRA         L_Glcd_Write_Text_Adv244
L_Glcd_Write_Text_Adv243:
;__Lib_Glcd.c,1275 :: 		
0x10D4	0x51E0      	MOVF        Glcd_Write_Text_Adv_i_L0, 0, 1
0x10D6	0x25DA      	ADDWF       FARG_Glcd_Write_Text_Adv_text, 0, 1
0x10D8	0x6EE9      	MOVWF       FSR0L 
0x10DA	0x51E1      	MOVF        Glcd_Write_Text_Adv_i_L0+1, 0, 1
0x10DC	0x21DB      	ADDWFC      FARG_Glcd_Write_Text_Adv_text+1, 0, 1
0x10DE	0x6EEA      	MOVWF       FSR0L+1 
0x10E0	0xF1E2CFEE  	MOVFF       POSTINC0, FARG___Lib_Glcd__Glcd_Write_Char_Adv_ch
0x10E4	0xDC0D      	RCALL       __Lib_Glcd__Glcd_Write_Char_Adv
0x10E6	0x4BE0      	INFSNZ      Glcd_Write_Text_Adv_i_L0, 1, 1
0x10E8	0x2BE1      	INCF        Glcd_Write_Text_Adv_i_L0+1, 1, 1
L_Glcd_Write_Text_Adv244:
0x10EA	0xD7D8      	BRA         L_Glcd_Write_Text_Adv241
L_Glcd_Write_Text_Adv242:
;__Lib_Glcd.c,1276 :: 		
L_end_Glcd_Write_Text_Adv:
0x10EC	0x0012      	RETURN      0
; end of _Glcd_Write_Text_Adv
_UART1_Write_Text:
;__Lib_UART_c67.c,66 :: 		
;__Lib_UART_c67.c,67 :: 		
0x10EE	0x0101      	MOVLB       1
0x10F0	0x6BDD      	CLRF        UART1_Write_Text_counter_L0, 1
;__Lib_UART_c67.c,69 :: 		
0x10F2	0xFFE9C1DA  	MOVFF       FARG_UART1_Write_Text_uart_text, FSR0L
0x10F6	0xFFEAC1DB  	MOVFF       FARG_UART1_Write_Text_uart_text+1, FSR0H
0x10FA	0xF1DCCFEE  	MOVFF       POSTINC0, UART1_Write_Text_data__L0
;__Lib_UART_c67.c,70 :: 		
L_UART1_Write_Text5:
0x10FE	0x51DC      	MOVF        UART1_Write_Text_data__L0, 0, 1
0x1100	0x0A00      	XORLW       0
0x1102	0xE00E      	BZ          L_UART1_Write_Text6
;__Lib_UART_c67.c,71 :: 		
0x1104	0xF1E2C1DC  	MOVFF       UART1_Write_Text_data__L0, FARG_UART1_Write_data_
0x1108	0xDDA2      	RCALL       _UART1_Write
;__Lib_UART_c67.c,72 :: 		
0x110A	0x0101      	MOVLB       1
0x110C	0x2BDD      	INCF        UART1_Write_Text_counter_L0, 1, 1
;__Lib_UART_c67.c,73 :: 		
0x110E	0x51DD      	MOVF        UART1_Write_Text_counter_L0, 0, 1
0x1110	0x25DA      	ADDWF       FARG_UART1_Write_Text_uart_text, 0, 1
0x1112	0x6EE9      	MOVWF       FSR0L 
0x1114	0x0E00      	MOVLW       0
0x1116	0x21DB      	ADDWFC      FARG_UART1_Write_Text_uart_text+1, 0, 1
0x1118	0x6EEA      	MOVWF       FSR0L+1 
0x111A	0xF1DCCFEE  	MOVFF       POSTINC0, UART1_Write_Text_data__L0
;__Lib_UART_c67.c,74 :: 		
0x111E	0xD7EF      	BRA         L_UART1_Write_Text5
L_UART1_Write_Text6:
;__Lib_UART_c67.c,75 :: 		
L_end_UART1_Write_Text:
0x1120	0x0012      	RETURN      0
; end of _UART1_Write_Text
_Delay_22us:
;__Lib_Delays.c,15 :: 		void Delay_22us() {
;__Lib_Delays.c,16 :: 		Delay_us(22);
0x1122	0x0E0E      	MOVLW       14
0x1124	0x6E0D      	MOVWF       R13, 0
L_Delay_22us1:
0x1126	0x2E0D      	DECFSZ      R13, 1, 0
0x1128	0xD7FE      	BRA         L_Delay_22us1
0x112A	0x0000      	NOP
;__Lib_Delays.c,17 :: 		}
L_end_Delay_22us:
0x112C	0x0012      	RETURN      0
; end of _Delay_22us
_Glcd_Image:
;__Lib_Glcd.c,596 :: 		
;__Lib_Glcd.c,600 :: 		
0x112E	0x0101      	MOVLB       1
0x1130	0x6BDE      	CLRF        Glcd_Image_pg_L0, 1
0x1132	0x6BDF      	CLRF        Glcd_Image_clan_niza_L0, 1
0x1134	0x6BE0      	CLRF        Glcd_Image_clan_niza_L0+1, 1
;__Lib_Glcd.c,602 :: 		
L_Glcd_Image100:
0x1136	0x51DE      	MOVF        Glcd_Image_pg_L0, 0, 1
0x1138	0x0807      	SUBLW       7
0x113A	0xE349      	BNC         L_Glcd_Image101
;__Lib_Glcd.c,603 :: 		
0x113C	0x0102      	MOVLB       2
0x113E	0x6B10      	CLRF        FARG_Glcd_Set_Side_x_pos, 1
0x1140	0xF000EC4A  	CALL        _Glcd_Set_Side, 0
;__Lib_Glcd.c,604 :: 		
0x1144	0xF210C1DE  	MOVFF       Glcd_Image_pg_L0, FARG_Glcd_Set_Page_page
0x1148	0xF000EC58  	CALL        _Glcd_Set_Page, 0
;__Lib_Glcd.c,605 :: 		
0x114C	0x6B10      	CLRF        FARG_Glcd_Set_X_x_pos, 1
0x114E	0xF000EC60  	CALL        _Glcd_Set_X, 0
;__Lib_Glcd.c,606 :: 		
0x1152	0x0101      	MOVLB       1
0x1154	0x6BDD      	CLRF        Glcd_Image_col_L0, 1
L_Glcd_Image102:
0x1156	0x51DD      	MOVF        Glcd_Image_col_L0, 0, 1
0x1158	0x083F      	SUBLW       63
0x115A	0xE312      	BNC         L_Glcd_Image103
;__Lib_Glcd.c,607 :: 		
0x115C	0x51DF      	MOVF        Glcd_Image_clan_niza_L0, 0, 1
0x115E	0x25DA      	ADDWF       FARG_Glcd_Image_image, 0, 1
0x1160	0x6EF6      	MOVWF       TBLPTR 
0x1162	0x51E0      	MOVF        Glcd_Image_clan_niza_L0+1, 0, 1
0x1164	0x21DB      	ADDWFC      FARG_Glcd_Image_image+1, 0, 1
0x1166	0x6EF7      	MOVWF       TBLPTR+1 
0x1168	0x0E00      	MOVLW       0
0x116A	0x21DC      	ADDWFC      FARG_Glcd_Image_image+2, 0, 1
0x116C	0x6EF8      	MOVWF       TBLPTR+2 
0x116E	0x0009      	TBLRD*+
0x1170	0xF210CFF5  	MOVFF       TABLAT, FARG_Glcd_Write_Data_ddata
0x1174	0xF000EC43  	CALL        _Glcd_Write_Data, 0
0x1178	0x4BDF      	INFSNZ      Glcd_Image_clan_niza_L0, 1, 1
0x117A	0x2BE0      	INCF        Glcd_Image_clan_niza_L0+1, 1, 1
;__Lib_Glcd.c,606 :: 		
0x117C	0x2BDD      	INCF        Glcd_Image_col_L0, 1, 1
;__Lib_Glcd.c,608 :: 		
0x117E	0xD7EB      	BRA         L_Glcd_Image102
L_Glcd_Image103:
;__Lib_Glcd.c,610 :: 		
0x1180	0x0E40      	MOVLW       64
0x1182	0x0102      	MOVLB       2
0x1184	0x6F10      	MOVWF       FARG_Glcd_Set_Side_x_pos, 1
0x1186	0xF000EC4A  	CALL        _Glcd_Set_Side, 0
;__Lib_Glcd.c,611 :: 		
0x118A	0xF210C1DE  	MOVFF       Glcd_Image_pg_L0, FARG_Glcd_Set_Page_page
0x118E	0xF000EC58  	CALL        _Glcd_Set_Page, 0
;__Lib_Glcd.c,612 :: 		
0x1192	0x0E40      	MOVLW       64
0x1194	0x6F10      	MOVWF       FARG_Glcd_Set_X_x_pos, 1
0x1196	0xF000EC60  	CALL        _Glcd_Set_X, 0
;__Lib_Glcd.c,613 :: 		
0x119A	0x0E40      	MOVLW       64
0x119C	0x0101      	MOVLB       1
0x119E	0x6FDD      	MOVWF       Glcd_Image_col_L0, 1
L_Glcd_Image105:
0x11A0	0x51DD      	MOVF        Glcd_Image_col_L0, 0, 1
0x11A2	0x087F      	SUBLW       127
0x11A4	0xE312      	BNC         L_Glcd_Image106
;__Lib_Glcd.c,614 :: 		
0x11A6	0x51DF      	MOVF        Glcd_Image_clan_niza_L0, 0, 1
0x11A8	0x25DA      	ADDWF       FARG_Glcd_Image_image, 0, 1
0x11AA	0x6EF6      	MOVWF       TBLPTR 
0x11AC	0x51E0      	MOVF        Glcd_Image_clan_niza_L0+1, 0, 1
0x11AE	0x21DB      	ADDWFC      FARG_Glcd_Image_image+1, 0, 1
0x11B0	0x6EF7      	MOVWF       TBLPTR+1 
0x11B2	0x0E00      	MOVLW       0
0x11B4	0x21DC      	ADDWFC      FARG_Glcd_Image_image+2, 0, 1
0x11B6	0x6EF8      	MOVWF       TBLPTR+2 
0x11B8	0x0009      	TBLRD*+
0x11BA	0xF210CFF5  	MOVFF       TABLAT, FARG_Glcd_Write_Data_ddata
0x11BE	0xF000EC43  	CALL        _Glcd_Write_Data, 0
0x11C2	0x4BDF      	INFSNZ      Glcd_Image_clan_niza_L0, 1, 1
0x11C4	0x2BE0      	INCF        Glcd_Image_clan_niza_L0+1, 1, 1
;__Lib_Glcd.c,613 :: 		
0x11C6	0x2BDD      	INCF        Glcd_Image_col_L0, 1, 1
;__Lib_Glcd.c,615 :: 		
0x11C8	0xD7EB      	BRA         L_Glcd_Image105
L_Glcd_Image106:
;__Lib_Glcd.c,617 :: 		
0x11CA	0x2BDE      	INCF        Glcd_Image_pg_L0, 1, 1
;__Lib_Glcd.c,618 :: 		
0x11CC	0xD7B4      	BRA         L_Glcd_Image100
L_Glcd_Image101:
;__Lib_Glcd.c,619 :: 		
L_end_Glcd_Image:
0x11CE	0x0012      	RETURN      0
; end of _Glcd_Image
_Glcd_Write_Text:
;__Lib_Glcd.c,281 :: 		
;__Lib_Glcd.c,282 :: 		
0x11D0	0x0101      	MOVLB       1
0x11D2	0x6BDF      	CLRF        Glcd_Write_Text_i_L0, 1
;__Lib_Glcd.c,284 :: 		
0x11D4	0x5151      	MOVF        __Lib_Glcd_FontInitialized, 0, 1
0x11D6	0x0A00      	XORLW       0
0x11D8	0xE10E      	BNZ         L_Glcd_Write_Text28
;__Lib_Glcd.c,286 :: 		
0x11DA	0x0E05      	MOVLW       5
0x11DC	0x6F50      	MOVWF       __Lib_Glcd_fontW, 1
;__Lib_Glcd.c,287 :: 		
0x11DE	0x0E07      	MOVLW       7
0x11E0	0x6F20      	MOVWF       __Lib_Glcd_fontH, 1
;__Lib_Glcd.c,288 :: 		
0x11E2	0x0E4F      	MOVLW       _font5x7
0x11E4	0x6F41      	MOVWF       __Lib_Glcd_fontDef, 1
0x11E6	0x0E61      	MOVLW       hi_addr(_font5x7)
0x11E8	0x6F42      	MOVWF       __Lib_Glcd_fontDef+1, 1
0x11EA	0x0E00      	MOVLW       higher_addr(_font5x7)
0x11EC	0x6F43      	MOVWF       __Lib_Glcd_fontDef+2, 1
;__Lib_Glcd.c,289 :: 		
0x11EE	0x0E20      	MOVLW       32
0x11F0	0x6F54      	MOVWF       __Lib_Glcd_fontOffset, 1
0x11F2	0x0E00      	MOVLW       0
0x11F4	0x6F55      	MOVWF       __Lib_Glcd_fontOffset+1, 1
;__Lib_Glcd.c,290 :: 		
L_Glcd_Write_Text28:
;__Lib_Glcd.c,293 :: 		
L_Glcd_Write_Text29:
0x11F6	0x51DF      	MOVF        Glcd_Write_Text_i_L0, 0, 1
0x11F8	0x25DA      	ADDWF       FARG_Glcd_Write_Text_text, 0, 1
0x11FA	0x6EE9      	MOVWF       FSR0L 
0x11FC	0x0E00      	MOVLW       0
0x11FE	0x21DB      	ADDWFC      FARG_Glcd_Write_Text_text+1, 0, 1
0x1200	0x6EEA      	MOVWF       FSR0L+1 
0x1202	0x52EE      	MOVF        POSTINC0, 1 
0x1204	0xE016      	BZ          L_Glcd_Write_Text30
;__Lib_Glcd.c,294 :: 		
0x1206	0x51DF      	MOVF        Glcd_Write_Text_i_L0, 0, 1
0x1208	0x25DA      	ADDWF       FARG_Glcd_Write_Text_text, 0, 1
0x120A	0x6EE9      	MOVWF       FSR0L 
0x120C	0x0E00      	MOVLW       0
0x120E	0x21DB      	ADDWFC      FARG_Glcd_Write_Text_text+1, 0, 1
0x1210	0x6EEA      	MOVWF       FSR0L+1 
0x1212	0xF1E2CFEE  	MOVFF       POSTINC0, FARG_Glcd_Write_Char_chr
0x1216	0xF1E3C1DC  	MOVFF       FARG_Glcd_Write_Text_x_pos, FARG_Glcd_Write_Char_x_pos
0x121A	0xF1E4C1DD  	MOVFF       FARG_Glcd_Write_Text_page_num, FARG_Glcd_Write_Char_page_num
0x121E	0xF1E5C1DE  	MOVFF       FARG_Glcd_Write_Text_color, FARG_Glcd_Write_Char_color
0x1222	0xDC79      	RCALL       _Glcd_Write_Char
;__Lib_Glcd.c,295 :: 		
0x1224	0x5150      	MOVF        __Lib_Glcd_fontW, 0, 1
0x1226	0x0F01      	ADDLW       1
0x1228	0x6E00      	MOVWF       R0 
0x122A	0x5000      	MOVF        R0, 0 
0x122C	0x27DC      	ADDWF       FARG_Glcd_Write_Text_x_pos, 1, 1
;__Lib_Glcd.c,296 :: 		
0x122E	0x2BDF      	INCF        Glcd_Write_Text_i_L0, 1, 1
;__Lib_Glcd.c,297 :: 		
0x1230	0xD7E2      	BRA         L_Glcd_Write_Text29
L_Glcd_Write_Text30:
;__Lib_Glcd.c,298 :: 		
L_end_Glcd_Write_Text:
0x1232	0x0012      	RETURN      0
; end of _Glcd_Write_Text
_double2int:
;__Lib_MathDouble.c,1897 :: 		
;__Lib_MathDouble.c,1906 :: 		
0x1234	0x6A0B      	CLRF        R11, 0
;__Lib_MathDouble.c,1907 :: 		
0x1236	0x5003      	MOVF        R3, 0, 0
;__Lib_MathDouble.c,1908 :: 		
0x1238	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_MathDouble.c,1909 :: 		
0x123A	0xF009EF60  	GOTO        IRES016
;__Lib_MathDouble.c,1910 :: 		
0x123E	0x5002      	MOVF        R2, 0, 0
;__Lib_MathDouble.c,1911 :: 		
0x1240	0x6E0A      	MOVWF       R10, 0
;__Lib_MathDouble.c,1912 :: 		
0x1242	0x8E02      	BSF         R2, 7, 0
;__Lib_MathDouble.c,1914 :: 		
0x1244	0x0E8E      	MOVLW       142
;__Lib_MathDouble.c,1915 :: 		
0x1246	0x5E03      	SUBWF       R3, 1, 0
;__Lib_MathDouble.c,1916 :: 		
0x1248	0xAE03      	BTFSS       R3, 7, 0
;__Lib_MathDouble.c,1917 :: 		
0x124A	0xF009EF64  	GOTO        SETIOV16
;__Lib_MathDouble.c,1918 :: 		
0x124E	0x6C03      	NEGF        R3, 0
;__Lib_MathDouble.c,1920 :: 		
0x1250	0x0E08      	MOVLW       8
;__Lib_MathDouble.c,1921 :: 		
0x1252	0x5C03      	SUBWF       R3, 0, 0
;__Lib_MathDouble.c,1922 :: 		
0x1254	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_MathDouble.c,1923 :: 		
0x1256	0xF009EF3F  	GOTO        TSHIFT3216
;__Lib_MathDouble.c,1924 :: 		
0x125A	0x6E03      	MOVWF       R3, 0
;__Lib_MathDouble.c,1925 :: 		
0x125C	0x3601      	RLCF        R1, 1, 0
;__Lib_MathDouble.c,1926 :: 		
0x125E	0xF001C002  	MOVFF       R2, R1
;__Lib_MathDouble.c,1927 :: 		
0x1262	0x6A02      	CLRF        R2, 0
;__Lib_MathDouble.c,1929 :: 		
0x1264	0x0E08      	MOVLW       8
;__Lib_MathDouble.c,1930 :: 		
0x1266	0x5C03      	SUBWF       R3, 0, 0
;__Lib_MathDouble.c,1931 :: 		
0x1268	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_MathDouble.c,1932 :: 		
0x126A	0xF009EF3F  	GOTO        TSHIFT3216
;__Lib_MathDouble.c,1933 :: 		
0x126E	0x6E03      	MOVWF       R3, 0
;__Lib_MathDouble.c,1934 :: 		
0x1270	0x3601      	RLCF        R1, 1, 0
;__Lib_MathDouble.c,1935 :: 		
0x1272	0x6A01      	CLRF        R1, 0
;__Lib_MathDouble.c,1937 :: 		
0x1274	0x5003      	MOVF        R3, 0, 0
;__Lib_MathDouble.c,1938 :: 		
0x1276	0xA4D8      	BTFSS       STATUS, 2, 0
;__Lib_MathDouble.c,1939 :: 		
0x1278	0x90D8      	BCF         STATUS, 0, 0
;__Lib_MathDouble.c,1940 :: 		
0x127A	0xF009EF49  	GOTO        SHIFT3216OK
;__Lib_MathDouble.c,1941 :: 		
TSHIFT3216:
;__Lib_MathDouble.c,1942 :: 		
0x127E	0x5003      	MOVF        R3, 0, 0
;__Lib_MathDouble.c,1943 :: 		
0x1280	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_MathDouble.c,1944 :: 		
0x1282	0xF009EF49  	GOTO        SHIFT3216OK
;__Lib_MathDouble.c,1945 :: 		
SHIFT3216:
;__Lib_MathDouble.c,1946 :: 		
0x1286	0x90D8      	BCF         STATUS, 0, 0
;__Lib_MathDouble.c,1947 :: 		
0x1288	0x3202      	RRCF        R2, 1, 0
;__Lib_MathDouble.c,1948 :: 		
0x128A	0x3201      	RRCF        R1, 1, 0
;__Lib_MathDouble.c,1949 :: 		
0x128C	0x2E03      	DECFSZ      R3, 1, 0
;__Lib_MathDouble.c,1950 :: 		
0x128E	0xF009EF43  	GOTO        SHIFT3216
;__Lib_MathDouble.c,1951 :: 		
SHIFT3216OK:
;__Lib_MathDouble.c,1952 :: 		
0x1292	0xBC0B      	BTFSC       R11, 6, 0
;__Lib_MathDouble.c,1953 :: 		
0x1294	0xA001      	BTFSS       R1, 0, 0
;__Lib_MathDouble.c,1954 :: 		
0x1296	0xF009EF56  	GOTO        INT3216OK
;__Lib_MathDouble.c,1955 :: 		
0x129A	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_MathDouble.c,1956 :: 		
0x129C	0xF009EF56  	GOTO        INT3216OK
;__Lib_MathDouble.c,1957 :: 		
0x12A0	0x2A01      	INCF        R1, 1, 0
;__Lib_MathDouble.c,1958 :: 		
0x12A2	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_MathDouble.c,1959 :: 		
0x12A4	0x2A02      	INCF        R2, 1, 0
;__Lib_MathDouble.c,1960 :: 		
0x12A6	0xBE02      	BTFSC       R2, 7, 0
;__Lib_MathDouble.c,1961 :: 		
0x12A8	0xF009EF73  	GOTO        JPJSETIOV3224
;__Lib_MathDouble.c,1962 :: 		
INT3216OK:
;__Lib_MathDouble.c,1963 :: 		
0x12AC	0xAE0A      	BTFSS       R10, 7, 0
;__Lib_MathDouble.c,1964 :: 		
0x12AE	0xF009EF78  	GOTO        INT3216EOK
;__Lib_MathDouble.c,1966 :: 		
0x12B2	0x1E02      	COMF        R2, 1, 0
;__Lib_MathDouble.c,1967 :: 		
0x12B4	0x1E01      	COMF        R1, 1, 0
;__Lib_MathDouble.c,1968 :: 		
0x12B6	0x2A01      	INCF        R1, 1, 0
;__Lib_MathDouble.c,1969 :: 		
0x12B8	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_MathDouble.c,1970 :: 		
0x12BA	0x2A02      	INCF        R2, 1, 0
;__Lib_MathDouble.c,1971 :: 		
0x12BC	0xF009EF78  	GOTO        INT3216EOK
;__Lib_MathDouble.c,1973 :: 		
IRES016:
;__Lib_MathDouble.c,1974 :: 		
0x12C0	0x6A02      	CLRF        R2, 0
;__Lib_MathDouble.c,1975 :: 		
0x12C2	0x6A01      	CLRF        R1, 0
;__Lib_MathDouble.c,1976 :: 		
0x12C4	0xF009EF78  	GOTO        INT3216EOK
;__Lib_MathDouble.c,1977 :: 		
SETIOV16:
;__Lib_MathDouble.c,1978 :: 		
0x12C8	0x800B      	BSF         R11, 0, 0
;__Lib_MathDouble.c,1979 :: 		
0x12CA	0xAE0B      	BTFSS       R11, 7, 0
;__Lib_MathDouble.c,1980 :: 		
0x12CC	0xF009EF7C  	GOTO        INT3216EER
;__Lib_MathDouble.c,1982 :: 		
0x12D0	0x6A02      	CLRF        R2, 0
;__Lib_MathDouble.c,1983 :: 		
0x12D2	0xAE0A      	BTFSS       R10, 7, 0
;__Lib_MathDouble.c,1984 :: 		
0x12D4	0xF009EF7C  	GOTO        INT3216EER
;__Lib_MathDouble.c,1985 :: 		
0x12D8	0x0EFF      	MOVLW       255
;__Lib_MathDouble.c,1986 :: 		
0x12DA	0x6E02      	MOVWF       R2, 0
;__Lib_MathDouble.c,1987 :: 		
0x12DC	0x6E01      	MOVWF       R1, 0
;__Lib_MathDouble.c,1988 :: 		
0x12DE	0x360A      	RLCF        R10, 1, 0
;__Lib_MathDouble.c,1989 :: 		
0x12E0	0x3202      	RRCF        R2, 1, 0
;__Lib_MathDouble.c,1990 :: 		
0x12E2	0xF009EF7C  	GOTO        INT3216EER
;__Lib_MathDouble.c,1992 :: 		
JPJSETIOV3224:
;__Lib_MathDouble.c,1993 :: 		
0x12E6	0x0E01      	MOVLW       1
;__Lib_MathDouble.c,1994 :: 		
0x12E8	0x6E0C      	MOVWF       R12, 0
;__Lib_MathDouble.c,1996 :: 		
0x12EA	0xDCB8      	RCALL       _SETIOV3224
;__Lib_MathDouble.c,1998 :: 		
0x12EC	0xF009EF7E  	GOTO        INT3216EEE
;__Lib_MathDouble.c,1999 :: 		
INT3216EOK:
;__Lib_MathDouble.c,2000 :: 		
0x12F0	0x0E00      	MOVLW       0
;__Lib_MathDouble.c,2001 :: 		
0x12F2	0x6E0C      	MOVWF       R12, 0
;__Lib_MathDouble.c,2002 :: 		
0x12F4	0xF009EF7E  	GOTO        INT3216EEE
;__Lib_MathDouble.c,2003 :: 		
INT3216EER:
;__Lib_MathDouble.c,2004 :: 		
0x12F8	0x0EFF      	MOVLW       255
;__Lib_MathDouble.c,2005 :: 		
0x12FA	0x6E0C      	MOVWF       R12, 0
;__Lib_MathDouble.c,2006 :: 		
INT3216EEE:
;__Lib_MathDouble.c,2007 :: 		
0x12FC	0x5001      	MOVF        R1, 0, 0
;__Lib_MathDouble.c,2008 :: 		
0x12FE	0x6E00      	MOVWF       R0, 0
;__Lib_MathDouble.c,2009 :: 		
0x1300	0x5002      	MOVF        R2, 0, 0
;__Lib_MathDouble.c,2010 :: 		
0x1302	0x6E01      	MOVWF       R1, 0
;__Lib_MathDouble.c,2015 :: 		
L_end_double2int:
0x1304	0x0012      	RETURN      0
; end of _double2int
_draw_aste:
;glcd.c,197 :: 		void draw_aste(){
;glcd.c,199 :: 		for(i = 0; i<4; i++){
0x1306	0x0101      	MOVLB       1
0x1308	0x6BDA      	CLRF        draw_aste_i_L0, 1
L_draw_aste1:
0x130A	0x0E04      	MOVLW       4
0x130C	0x5DDA      	SUBWF       draw_aste_i_L0, 0, 1
0x130E	0xE272      	BC          L_draw_aste2
;glcd.c,200 :: 		if(aste1[i].x != 64){
0x1310	0x0E03      	MOVLW       3
0x1312	0x6E00      	MOVWF       R0 
0x1314	0x0E00      	MOVLW       0
0x1316	0x6E01      	MOVWF       R1 
0x1318	0xF004C1DA  	MOVFF       draw_aste_i_L0, R4
0x131C	0x0E00      	MOVLW       0
0x131E	0x6E05      	MOVWF       R5 
0x1320	0xF001EC42  	CALL        _Mul_16X16_U, 0
0x1324	0x0E77      	MOVLW       _aste1
0x1326	0x2400      	ADDWF       R0, 0 
0x1328	0x6EE9      	MOVWF       FSR0L 
0x132A	0x0E01      	MOVLW       hi_addr(_aste1)
0x132C	0x2001      	ADDWFC      R1, 0 
0x132E	0x6EEA      	MOVWF       FSR0L+1 
0x1330	0xF001CFEE  	MOVFF       POSTINC0, R1
0x1334	0x5001      	MOVF        R1, 0 
0x1336	0x0A40      	XORLW       64
0x1338	0xE021      	BZ          L_draw_aste4
;glcd.c,201 :: 		Glcd_Dot(aste1[i].x, aste1[i].y, 1);
0x133A	0x0E03      	MOVLW       3
0x133C	0x6E00      	MOVWF       R0 
0x133E	0x0E00      	MOVLW       0
0x1340	0x6E01      	MOVWF       R1 
0x1342	0xF004C1DA  	MOVFF       draw_aste_i_L0, R4
0x1346	0x0E00      	MOVLW       0
0x1348	0x6E05      	MOVWF       R5 
0x134A	0xF001EC42  	CALL        _Mul_16X16_U, 0
0x134E	0x0E77      	MOVLW       _aste1
0x1350	0x2600      	ADDWF       R0, 1 
0x1352	0x0E01      	MOVLW       hi_addr(_aste1)
0x1354	0x2201      	ADDWFC      R1, 1 
0x1356	0xFFE9C000  	MOVFF       R0, FSR0L
0x135A	0xFFEAC001  	MOVFF       R1, FSR0H
0x135E	0xF20BCFEE  	MOVFF       POSTINC0, FARG_Glcd_Dot_x_pos
0x1362	0x0E01      	MOVLW       1
0x1364	0x2400      	ADDWF       R0, 0 
0x1366	0x6EE9      	MOVWF       FSR0L 
0x1368	0x0E00      	MOVLW       0
0x136A	0x2001      	ADDWFC      R1, 0 
0x136C	0x6EEA      	MOVWF       FSR0L+1 
0x136E	0xF20CCFEE  	MOVFF       POSTINC0, FARG_Glcd_Dot_y_pos
0x1372	0x0E01      	MOVLW       1
0x1374	0x0102      	MOVLB       2
0x1376	0x6F0D      	MOVWF       FARG_Glcd_Dot_color, 1
0x1378	0xF000EC73  	CALL        _Glcd_Dot, 0
;glcd.c,202 :: 		}
L_draw_aste4:
;glcd.c,203 :: 		if(aste1[i].old_x != 64){
0x137C	0x0E03      	MOVLW       3
0x137E	0x6E00      	MOVWF       R0 
0x1380	0x0E00      	MOVLW       0
0x1382	0x6E01      	MOVWF       R1 
0x1384	0xF004C1DA  	MOVFF       draw_aste_i_L0, R4
0x1388	0x0E00      	MOVLW       0
0x138A	0x6E05      	MOVWF       R5 
0x138C	0xF001EC42  	CALL        _Mul_16X16_U, 0
0x1390	0x0E77      	MOVLW       _aste1
0x1392	0x2600      	ADDWF       R0, 1 
0x1394	0x0E01      	MOVLW       hi_addr(_aste1)
0x1396	0x2201      	ADDWFC      R1, 1 
0x1398	0x0E02      	MOVLW       2
0x139A	0x2400      	ADDWF       R0, 0 
0x139C	0x6EE9      	MOVWF       FSR0L 
0x139E	0x0E00      	MOVLW       0
0x13A0	0x2001      	ADDWFC      R1, 0 
0x13A2	0x6EEA      	MOVWF       FSR0L+1 
0x13A4	0x50EE      	MOVF        POSTINC0, 0 
0x13A6	0x0A40      	XORLW       64
0x13A8	0xE022      	BZ          L_draw_aste5
;glcd.c,204 :: 		Glcd_Dot(aste1[i].old_x, aste1[i].y, 0);
0x13AA	0x0102      	MOVLB       2
0x13AC	0x0E03      	MOVLW       3
0x13AE	0x6E00      	MOVWF       R0 
0x13B0	0x0E00      	MOVLW       0
0x13B2	0x6E01      	MOVWF       R1 
0x13B4	0xF004C1DA  	MOVFF       draw_aste_i_L0, R4
0x13B8	0x0E00      	MOVLW       0
0x13BA	0x6E05      	MOVWF       R5 
0x13BC	0xF001EC42  	CALL        _Mul_16X16_U, 0
0x13C0	0x0E77      	MOVLW       _aste1
0x13C2	0x2600      	ADDWF       R0, 1 
0x13C4	0x0E01      	MOVLW       hi_addr(_aste1)
0x13C6	0x2201      	ADDWFC      R1, 1 
0x13C8	0x0E02      	MOVLW       2
0x13CA	0x2400      	ADDWF       R0, 0 
0x13CC	0x6EE9      	MOVWF       FSR0L 
0x13CE	0x0E00      	MOVLW       0
0x13D0	0x2001      	ADDWFC      R1, 0 
0x13D2	0x6EEA      	MOVWF       FSR0L+1 
0x13D4	0xF20BCFEE  	MOVFF       POSTINC0, FARG_Glcd_Dot_x_pos
0x13D8	0x0E01      	MOVLW       1
0x13DA	0x2400      	ADDWF       R0, 0 
0x13DC	0x6EE9      	MOVWF       FSR0L 
0x13DE	0x0E00      	MOVLW       0
0x13E0	0x2001      	ADDWFC      R1, 0 
0x13E2	0x6EEA      	MOVWF       FSR0L+1 
0x13E4	0xF20CCFEE  	MOVFF       POSTINC0, FARG_Glcd_Dot_y_pos
0x13E8	0x6B0D      	CLRF        FARG_Glcd_Dot_color, 1
0x13EA	0xF000EC73  	CALL        _Glcd_Dot, 0
;glcd.c,205 :: 		}
L_draw_aste5:
;glcd.c,199 :: 		for(i = 0; i<4; i++){
0x13EE	0x0101      	MOVLB       1
0x13F0	0x2BDA      	INCF        draw_aste_i_L0, 1, 1
;glcd.c,206 :: 		}
0x13F2	0xD78B      	BRA         L_draw_aste1
L_draw_aste2:
;glcd.c,207 :: 		for(i = 0; i<4; i++){
0x13F4	0x6BDA      	CLRF        draw_aste_i_L0, 1
L_draw_aste6:
0x13F6	0x0E04      	MOVLW       4
0x13F8	0x5DDA      	SUBWF       draw_aste_i_L0, 0, 1
0x13FA	0xE272      	BC          L_draw_aste7
;glcd.c,208 :: 		if(aste2[i].x != 64){
0x13FC	0x0E03      	MOVLW       3
0x13FE	0x6E00      	MOVWF       R0 
0x1400	0x0E00      	MOVLW       0
0x1402	0x6E01      	MOVWF       R1 
0x1404	0xF004C1DA  	MOVFF       draw_aste_i_L0, R4
0x1408	0x0E00      	MOVLW       0
0x140A	0x6E05      	MOVWF       R5 
0x140C	0xF001EC42  	CALL        _Mul_16X16_U, 0
0x1410	0x0E8F      	MOVLW       _aste2
0x1412	0x2400      	ADDWF       R0, 0 
0x1414	0x6EE9      	MOVWF       FSR0L 
0x1416	0x0E01      	MOVLW       hi_addr(_aste2)
0x1418	0x2001      	ADDWFC      R1, 0 
0x141A	0x6EEA      	MOVWF       FSR0L+1 
0x141C	0xF001CFEE  	MOVFF       POSTINC0, R1
0x1420	0x5001      	MOVF        R1, 0 
0x1422	0x0A40      	XORLW       64
0x1424	0xE021      	BZ          L_draw_aste9
;glcd.c,209 :: 		Glcd_Dot(aste2[i].x, aste2[i].y, 1);
0x1426	0x0E03      	MOVLW       3
0x1428	0x6E00      	MOVWF       R0 
0x142A	0x0E00      	MOVLW       0
0x142C	0x6E01      	MOVWF       R1 
0x142E	0xF004C1DA  	MOVFF       draw_aste_i_L0, R4
0x1432	0x0E00      	MOVLW       0
0x1434	0x6E05      	MOVWF       R5 
0x1436	0xF001EC42  	CALL        _Mul_16X16_U, 0
0x143A	0x0E8F      	MOVLW       _aste2
0x143C	0x2600      	ADDWF       R0, 1 
0x143E	0x0E01      	MOVLW       hi_addr(_aste2)
0x1440	0x2201      	ADDWFC      R1, 1 
0x1442	0xFFE9C000  	MOVFF       R0, FSR0L
0x1446	0xFFEAC001  	MOVFF       R1, FSR0H
0x144A	0xF20BCFEE  	MOVFF       POSTINC0, FARG_Glcd_Dot_x_pos
0x144E	0x0E01      	MOVLW       1
0x1450	0x2400      	ADDWF       R0, 0 
0x1452	0x6EE9      	MOVWF       FSR0L 
0x1454	0x0E00      	MOVLW       0
0x1456	0x2001      	ADDWFC      R1, 0 
0x1458	0x6EEA      	MOVWF       FSR0L+1 
0x145A	0xF20CCFEE  	MOVFF       POSTINC0, FARG_Glcd_Dot_y_pos
0x145E	0x0E01      	MOVLW       1
0x1460	0x0102      	MOVLB       2
0x1462	0x6F0D      	MOVWF       FARG_Glcd_Dot_color, 1
0x1464	0xF000EC73  	CALL        _Glcd_Dot, 0
;glcd.c,210 :: 		}
L_draw_aste9:
;glcd.c,211 :: 		if(aste2[i].old_x != 64){
0x1468	0x0E03      	MOVLW       3
0x146A	0x6E00      	MOVWF       R0 
0x146C	0x0E00      	MOVLW       0
0x146E	0x6E01      	MOVWF       R1 
0x1470	0xF004C1DA  	MOVFF       draw_aste_i_L0, R4
0x1474	0x0E00      	MOVLW       0
0x1476	0x6E05      	MOVWF       R5 
0x1478	0xF001EC42  	CALL        _Mul_16X16_U, 0
0x147C	0x0E8F      	MOVLW       _aste2
0x147E	0x2600      	ADDWF       R0, 1 
0x1480	0x0E01      	MOVLW       hi_addr(_aste2)
0x1482	0x2201      	ADDWFC      R1, 1 
0x1484	0x0E02      	MOVLW       2
0x1486	0x2400      	ADDWF       R0, 0 
0x1488	0x6EE9      	MOVWF       FSR0L 
0x148A	0x0E00      	MOVLW       0
0x148C	0x2001      	ADDWFC      R1, 0 
0x148E	0x6EEA      	MOVWF       FSR0L+1 
0x1490	0x50EE      	MOVF        POSTINC0, 0 
0x1492	0x0A40      	XORLW       64
0x1494	0xE022      	BZ          L_draw_aste10
;glcd.c,212 :: 		Glcd_Dot(aste2[i].old_x, aste2[i].y, 0);
0x1496	0x0102      	MOVLB       2
0x1498	0x0E03      	MOVLW       3
0x149A	0x6E00      	MOVWF       R0 
0x149C	0x0E00      	MOVLW       0
0x149E	0x6E01      	MOVWF       R1 
0x14A0	0xF004C1DA  	MOVFF       draw_aste_i_L0, R4
0x14A4	0x0E00      	MOVLW       0
0x14A6	0x6E05      	MOVWF       R5 
0x14A8	0xF001EC42  	CALL        _Mul_16X16_U, 0
0x14AC	0x0E8F      	MOVLW       _aste2
0x14AE	0x2600      	ADDWF       R0, 1 
0x14B0	0x0E01      	MOVLW       hi_addr(_aste2)
0x14B2	0x2201      	ADDWFC      R1, 1 
0x14B4	0x0E02      	MOVLW       2
0x14B6	0x2400      	ADDWF       R0, 0 
0x14B8	0x6EE9      	MOVWF       FSR0L 
0x14BA	0x0E00      	MOVLW       0
0x14BC	0x2001      	ADDWFC      R1, 0 
0x14BE	0x6EEA      	MOVWF       FSR0L+1 
0x14C0	0xF20BCFEE  	MOVFF       POSTINC0, FARG_Glcd_Dot_x_pos
0x14C4	0x0E01      	MOVLW       1
0x14C6	0x2400      	ADDWF       R0, 0 
0x14C8	0x6EE9      	MOVWF       FSR0L 
0x14CA	0x0E00      	MOVLW       0
0x14CC	0x2001      	ADDWFC      R1, 0 
0x14CE	0x6EEA      	MOVWF       FSR0L+1 
0x14D0	0xF20CCFEE  	MOVFF       POSTINC0, FARG_Glcd_Dot_y_pos
0x14D4	0x6B0D      	CLRF        FARG_Glcd_Dot_color, 1
0x14D6	0xF000EC73  	CALL        _Glcd_Dot, 0
;glcd.c,213 :: 		}
L_draw_aste10:
;glcd.c,207 :: 		for(i = 0; i<4; i++){
0x14DA	0x0101      	MOVLB       1
0x14DC	0x2BDA      	INCF        draw_aste_i_L0, 1, 1
;glcd.c,214 :: 		}
0x14DE	0xD78B      	BRA         L_draw_aste6
L_draw_aste7:
;glcd.c,215 :: 		for(i = 0; i<4; i++){
0x14E0	0x6BDA      	CLRF        draw_aste_i_L0, 1
L_draw_aste11:
0x14E2	0x0E04      	MOVLW       4
0x14E4	0x5DDA      	SUBWF       draw_aste_i_L0, 0, 1
0x14E6	0xE272      	BC          L_draw_aste12
;glcd.c,216 :: 		if(aste3[i].x != 64){
0x14E8	0x0E03      	MOVLW       3
0x14EA	0x6E00      	MOVWF       R0 
0x14EC	0x0E00      	MOVLW       0
0x14EE	0x6E01      	MOVWF       R1 
0x14F0	0xF004C1DA  	MOVFF       draw_aste_i_L0, R4
0x14F4	0x0E00      	MOVLW       0
0x14F6	0x6E05      	MOVWF       R5 
0x14F8	0xF001EC42  	CALL        _Mul_16X16_U, 0
0x14FC	0x0E5F      	MOVLW       _aste3
0x14FE	0x2400      	ADDWF       R0, 0 
0x1500	0x6EE9      	MOVWF       FSR0L 
0x1502	0x0E01      	MOVLW       hi_addr(_aste3)
0x1504	0x2001      	ADDWFC      R1, 0 
0x1506	0x6EEA      	MOVWF       FSR0L+1 
0x1508	0xF001CFEE  	MOVFF       POSTINC0, R1
0x150C	0x5001      	MOVF        R1, 0 
0x150E	0x0A40      	XORLW       64
0x1510	0xE021      	BZ          L_draw_aste14
;glcd.c,217 :: 		Glcd_Dot(aste3[i].x, aste3[i].y, 1);
0x1512	0x0E03      	MOVLW       3
0x1514	0x6E00      	MOVWF       R0 
0x1516	0x0E00      	MOVLW       0
0x1518	0x6E01      	MOVWF       R1 
0x151A	0xF004C1DA  	MOVFF       draw_aste_i_L0, R4
0x151E	0x0E00      	MOVLW       0
0x1520	0x6E05      	MOVWF       R5 
0x1522	0xF001EC42  	CALL        _Mul_16X16_U, 0
0x1526	0x0E5F      	MOVLW       _aste3
0x1528	0x2600      	ADDWF       R0, 1 
0x152A	0x0E01      	MOVLW       hi_addr(_aste3)
0x152C	0x2201      	ADDWFC      R1, 1 
0x152E	0xFFE9C000  	MOVFF       R0, FSR0L
0x1532	0xFFEAC001  	MOVFF       R1, FSR0H
0x1536	0xF20BCFEE  	MOVFF       POSTINC0, FARG_Glcd_Dot_x_pos
0x153A	0x0E01      	MOVLW       1
0x153C	0x2400      	ADDWF       R0, 0 
0x153E	0x6EE9      	MOVWF       FSR0L 
0x1540	0x0E00      	MOVLW       0
0x1542	0x2001      	ADDWFC      R1, 0 
0x1544	0x6EEA      	MOVWF       FSR0L+1 
0x1546	0xF20CCFEE  	MOVFF       POSTINC0, FARG_Glcd_Dot_y_pos
0x154A	0x0E01      	MOVLW       1
0x154C	0x0102      	MOVLB       2
0x154E	0x6F0D      	MOVWF       FARG_Glcd_Dot_color, 1
0x1550	0xF000EC73  	CALL        _Glcd_Dot, 0
;glcd.c,218 :: 		}
L_draw_aste14:
;glcd.c,219 :: 		if(aste3[i].old_x != 64){
0x1554	0x0E03      	MOVLW       3
0x1556	0x6E00      	MOVWF       R0 
0x1558	0x0E00      	MOVLW       0
0x155A	0x6E01      	MOVWF       R1 
0x155C	0xF004C1DA  	MOVFF       draw_aste_i_L0, R4
0x1560	0x0E00      	MOVLW       0
0x1562	0x6E05      	MOVWF       R5 
0x1564	0xF001EC42  	CALL        _Mul_16X16_U, 0
0x1568	0x0E5F      	MOVLW       _aste3
0x156A	0x2600      	ADDWF       R0, 1 
0x156C	0x0E01      	MOVLW       hi_addr(_aste3)
0x156E	0x2201      	ADDWFC      R1, 1 
0x1570	0x0E02      	MOVLW       2
0x1572	0x2400      	ADDWF       R0, 0 
0x1574	0x6EE9      	MOVWF       FSR0L 
0x1576	0x0E00      	MOVLW       0
0x1578	0x2001      	ADDWFC      R1, 0 
0x157A	0x6EEA      	MOVWF       FSR0L+1 
0x157C	0x50EE      	MOVF        POSTINC0, 0 
0x157E	0x0A40      	XORLW       64
0x1580	0xE022      	BZ          L_draw_aste15
;glcd.c,220 :: 		Glcd_Dot(aste3[i].old_x, aste3[i].y, 0);
0x1582	0x0102      	MOVLB       2
0x1584	0x0E03      	MOVLW       3
0x1586	0x6E00      	MOVWF       R0 
0x1588	0x0E00      	MOVLW       0
0x158A	0x6E01      	MOVWF       R1 
0x158C	0xF004C1DA  	MOVFF       draw_aste_i_L0, R4
0x1590	0x0E00      	MOVLW       0
0x1592	0x6E05      	MOVWF       R5 
0x1594	0xF001EC42  	CALL        _Mul_16X16_U, 0
0x1598	0x0E5F      	MOVLW       _aste3
0x159A	0x2600      	ADDWF       R0, 1 
0x159C	0x0E01      	MOVLW       hi_addr(_aste3)
0x159E	0x2201      	ADDWFC      R1, 1 
0x15A0	0x0E02      	MOVLW       2
0x15A2	0x2400      	ADDWF       R0, 0 
0x15A4	0x6EE9      	MOVWF       FSR0L 
0x15A6	0x0E00      	MOVLW       0
0x15A8	0x2001      	ADDWFC      R1, 0 
0x15AA	0x6EEA      	MOVWF       FSR0L+1 
0x15AC	0xF20BCFEE  	MOVFF       POSTINC0, FARG_Glcd_Dot_x_pos
0x15B0	0x0E01      	MOVLW       1
0x15B2	0x2400      	ADDWF       R0, 0 
0x15B4	0x6EE9      	MOVWF       FSR0L 
0x15B6	0x0E00      	MOVLW       0
0x15B8	0x2001      	ADDWFC      R1, 0 
0x15BA	0x6EEA      	MOVWF       FSR0L+1 
0x15BC	0xF20CCFEE  	MOVFF       POSTINC0, FARG_Glcd_Dot_y_pos
0x15C0	0x6B0D      	CLRF        FARG_Glcd_Dot_color, 1
0x15C2	0xF000EC73  	CALL        _Glcd_Dot, 0
;glcd.c,221 :: 		}
L_draw_aste15:
;glcd.c,215 :: 		for(i = 0; i<4; i++){
0x15C6	0x0101      	MOVLB       1
0x15C8	0x2BDA      	INCF        draw_aste_i_L0, 1, 1
;glcd.c,222 :: 		}
0x15CA	0xD78B      	BRA         L_draw_aste11
L_draw_aste12:
;glcd.c,223 :: 		for(i = 0; i<4; i++){
0x15CC	0x6BDA      	CLRF        draw_aste_i_L0, 1
L_draw_aste16:
0x15CE	0x0E04      	MOVLW       4
0x15D0	0x5DDA      	SUBWF       draw_aste_i_L0, 0, 1
0x15D2	0xE272      	BC          L_draw_aste17
;glcd.c,224 :: 		if(aste5[i].x != 64){
0x15D4	0x0E03      	MOVLW       3
0x15D6	0x6E00      	MOVWF       R0 
0x15D8	0x0E00      	MOVLW       0
0x15DA	0x6E01      	MOVWF       R1 
0x15DC	0xF004C1DA  	MOVFF       draw_aste_i_L0, R4
0x15E0	0x0E00      	MOVLW       0
0x15E2	0x6E05      	MOVWF       R5 
0x15E4	0xF001EC42  	CALL        _Mul_16X16_U, 0
0x15E8	0x0E9B      	MOVLW       _aste5
0x15EA	0x2400      	ADDWF       R0, 0 
0x15EC	0x6EE9      	MOVWF       FSR0L 
0x15EE	0x0E01      	MOVLW       hi_addr(_aste5)
0x15F0	0x2001      	ADDWFC      R1, 0 
0x15F2	0x6EEA      	MOVWF       FSR0L+1 
0x15F4	0xF001CFEE  	MOVFF       POSTINC0, R1
0x15F8	0x5001      	MOVF        R1, 0 
0x15FA	0x0A40      	XORLW       64
0x15FC	0xE021      	BZ          L_draw_aste19
;glcd.c,225 :: 		Glcd_Dot(aste5[i].x, aste5[i].y, 1);
0x15FE	0x0E03      	MOVLW       3
0x1600	0x6E00      	MOVWF       R0 
0x1602	0x0E00      	MOVLW       0
0x1604	0x6E01      	MOVWF       R1 
0x1606	0xF004C1DA  	MOVFF       draw_aste_i_L0, R4
0x160A	0x0E00      	MOVLW       0
0x160C	0x6E05      	MOVWF       R5 
0x160E	0xF001EC42  	CALL        _Mul_16X16_U, 0
0x1612	0x0E9B      	MOVLW       _aste5
0x1614	0x2600      	ADDWF       R0, 1 
0x1616	0x0E01      	MOVLW       hi_addr(_aste5)
0x1618	0x2201      	ADDWFC      R1, 1 
0x161A	0xFFE9C000  	MOVFF       R0, FSR0L
0x161E	0xFFEAC001  	MOVFF       R1, FSR0H
0x1622	0xF20BCFEE  	MOVFF       POSTINC0, FARG_Glcd_Dot_x_pos
0x1626	0x0E01      	MOVLW       1
0x1628	0x2400      	ADDWF       R0, 0 
0x162A	0x6EE9      	MOVWF       FSR0L 
0x162C	0x0E00      	MOVLW       0
0x162E	0x2001      	ADDWFC      R1, 0 
0x1630	0x6EEA      	MOVWF       FSR0L+1 
0x1632	0xF20CCFEE  	MOVFF       POSTINC0, FARG_Glcd_Dot_y_pos
0x1636	0x0E01      	MOVLW       1
0x1638	0x0102      	MOVLB       2
0x163A	0x6F0D      	MOVWF       FARG_Glcd_Dot_color, 1
0x163C	0xF000EC73  	CALL        _Glcd_Dot, 0
;glcd.c,226 :: 		}
L_draw_aste19:
;glcd.c,227 :: 		if(aste5[i].old_x != 64){
0x1640	0x0E03      	MOVLW       3
0x1642	0x6E00      	MOVWF       R0 
0x1644	0x0E00      	MOVLW       0
0x1646	0x6E01      	MOVWF       R1 
0x1648	0xF004C1DA  	MOVFF       draw_aste_i_L0, R4
0x164C	0x0E00      	MOVLW       0
0x164E	0x6E05      	MOVWF       R5 
0x1650	0xF001EC42  	CALL        _Mul_16X16_U, 0
0x1654	0x0E9B      	MOVLW       _aste5
0x1656	0x2600      	ADDWF       R0, 1 
0x1658	0x0E01      	MOVLW       hi_addr(_aste5)
0x165A	0x2201      	ADDWFC      R1, 1 
0x165C	0x0E02      	MOVLW       2
0x165E	0x2400      	ADDWF       R0, 0 
0x1660	0x6EE9      	MOVWF       FSR0L 
0x1662	0x0E00      	MOVLW       0
0x1664	0x2001      	ADDWFC      R1, 0 
0x1666	0x6EEA      	MOVWF       FSR0L+1 
0x1668	0x50EE      	MOVF        POSTINC0, 0 
0x166A	0x0A40      	XORLW       64
0x166C	0xE022      	BZ          L_draw_aste20
;glcd.c,228 :: 		Glcd_Dot(aste5[i].old_x, aste5[i].y, 0);
0x166E	0x0102      	MOVLB       2
0x1670	0x0E03      	MOVLW       3
0x1672	0x6E00      	MOVWF       R0 
0x1674	0x0E00      	MOVLW       0
0x1676	0x6E01      	MOVWF       R1 
0x1678	0xF004C1DA  	MOVFF       draw_aste_i_L0, R4
0x167C	0x0E00      	MOVLW       0
0x167E	0x6E05      	MOVWF       R5 
0x1680	0xF001EC42  	CALL        _Mul_16X16_U, 0
0x1684	0x0E9B      	MOVLW       _aste5
0x1686	0x2600      	ADDWF       R0, 1 
0x1688	0x0E01      	MOVLW       hi_addr(_aste5)
0x168A	0x2201      	ADDWFC      R1, 1 
0x168C	0x0E02      	MOVLW       2
0x168E	0x2400      	ADDWF       R0, 0 
0x1690	0x6EE9      	MOVWF       FSR0L 
0x1692	0x0E00      	MOVLW       0
0x1694	0x2001      	ADDWFC      R1, 0 
0x1696	0x6EEA      	MOVWF       FSR0L+1 
0x1698	0xF20BCFEE  	MOVFF       POSTINC0, FARG_Glcd_Dot_x_pos
0x169C	0x0E01      	MOVLW       1
0x169E	0x2400      	ADDWF       R0, 0 
0x16A0	0x6EE9      	MOVWF       FSR0L 
0x16A2	0x0E00      	MOVLW       0
0x16A4	0x2001      	ADDWFC      R1, 0 
0x16A6	0x6EEA      	MOVWF       FSR0L+1 
0x16A8	0xF20CCFEE  	MOVFF       POSTINC0, FARG_Glcd_Dot_y_pos
0x16AC	0x6B0D      	CLRF        FARG_Glcd_Dot_color, 1
0x16AE	0xF000EC73  	CALL        _Glcd_Dot, 0
;glcd.c,229 :: 		}
L_draw_aste20:
;glcd.c,223 :: 		for(i = 0; i<4; i++){
0x16B2	0x0101      	MOVLB       1
0x16B4	0x2BDA      	INCF        draw_aste_i_L0, 1, 1
;glcd.c,230 :: 		}
0x16B6	0xD78B      	BRA         L_draw_aste16
L_draw_aste17:
;glcd.c,231 :: 		for(i = 0; i<4; i++){
0x16B8	0x6BDA      	CLRF        draw_aste_i_L0, 1
L_draw_aste21:
0x16BA	0x0E04      	MOVLW       4
0x16BC	0x5DDA      	SUBWF       draw_aste_i_L0, 0, 1
0x16BE	0xE272      	BC          L_draw_aste22
;glcd.c,232 :: 		if(aste7[i].x != 64){
0x16C0	0x0E03      	MOVLW       3
0x16C2	0x6E00      	MOVWF       R0 
0x16C4	0x0E00      	MOVLW       0
0x16C6	0x6E01      	MOVWF       R1 
0x16C8	0xF004C1DA  	MOVFF       draw_aste_i_L0, R4
0x16CC	0x0E00      	MOVLW       0
0x16CE	0x6E05      	MOVWF       R5 
0x16D0	0xF001EC42  	CALL        _Mul_16X16_U, 0
0x16D4	0x0EC4      	MOVLW       _aste7
0x16D6	0x2400      	ADDWF       R0, 0 
0x16D8	0x6EE9      	MOVWF       FSR0L 
0x16DA	0x0E01      	MOVLW       hi_addr(_aste7)
0x16DC	0x2001      	ADDWFC      R1, 0 
0x16DE	0x6EEA      	MOVWF       FSR0L+1 
0x16E0	0xF001CFEE  	MOVFF       POSTINC0, R1
0x16E4	0x5001      	MOVF        R1, 0 
0x16E6	0x0A40      	XORLW       64
0x16E8	0xE021      	BZ          L_draw_aste24
;glcd.c,233 :: 		Glcd_Dot(aste7[i].x, aste7[i].y, 1);
0x16EA	0x0E03      	MOVLW       3
0x16EC	0x6E00      	MOVWF       R0 
0x16EE	0x0E00      	MOVLW       0
0x16F0	0x6E01      	MOVWF       R1 
0x16F2	0xF004C1DA  	MOVFF       draw_aste_i_L0, R4
0x16F6	0x0E00      	MOVLW       0
0x16F8	0x6E05      	MOVWF       R5 
0x16FA	0xF001EC42  	CALL        _Mul_16X16_U, 0
0x16FE	0x0EC4      	MOVLW       _aste7
0x1700	0x2600      	ADDWF       R0, 1 
0x1702	0x0E01      	MOVLW       hi_addr(_aste7)
0x1704	0x2201      	ADDWFC      R1, 1 
0x1706	0xFFE9C000  	MOVFF       R0, FSR0L
0x170A	0xFFEAC001  	MOVFF       R1, FSR0H
0x170E	0xF20BCFEE  	MOVFF       POSTINC0, FARG_Glcd_Dot_x_pos
0x1712	0x0E01      	MOVLW       1
0x1714	0x2400      	ADDWF       R0, 0 
0x1716	0x6EE9      	MOVWF       FSR0L 
0x1718	0x0E00      	MOVLW       0
0x171A	0x2001      	ADDWFC      R1, 0 
0x171C	0x6EEA      	MOVWF       FSR0L+1 
0x171E	0xF20CCFEE  	MOVFF       POSTINC0, FARG_Glcd_Dot_y_pos
0x1722	0x0E01      	MOVLW       1
0x1724	0x0102      	MOVLB       2
0x1726	0x6F0D      	MOVWF       FARG_Glcd_Dot_color, 1
0x1728	0xF000EC73  	CALL        _Glcd_Dot, 0
;glcd.c,234 :: 		}
L_draw_aste24:
;glcd.c,235 :: 		if(aste7[i].old_x != 64){
0x172C	0x0E03      	MOVLW       3
0x172E	0x6E00      	MOVWF       R0 
0x1730	0x0E00      	MOVLW       0
0x1732	0x6E01      	MOVWF       R1 
0x1734	0xF004C1DA  	MOVFF       draw_aste_i_L0, R4
0x1738	0x0E00      	MOVLW       0
0x173A	0x6E05      	MOVWF       R5 
0x173C	0xF001EC42  	CALL        _Mul_16X16_U, 0
0x1740	0x0EC4      	MOVLW       _aste7
0x1742	0x2600      	ADDWF       R0, 1 
0x1744	0x0E01      	MOVLW       hi_addr(_aste7)
0x1746	0x2201      	ADDWFC      R1, 1 
0x1748	0x0E02      	MOVLW       2
0x174A	0x2400      	ADDWF       R0, 0 
0x174C	0x6EE9      	MOVWF       FSR0L 
0x174E	0x0E00      	MOVLW       0
0x1750	0x2001      	ADDWFC      R1, 0 
0x1752	0x6EEA      	MOVWF       FSR0L+1 
0x1754	0x50EE      	MOVF        POSTINC0, 0 
0x1756	0x0A40      	XORLW       64
0x1758	0xE022      	BZ          L_draw_aste25
;glcd.c,236 :: 		Glcd_Dot(aste7[i].old_x, aste7[i].y, 0);
0x175A	0x0102      	MOVLB       2
0x175C	0x0E03      	MOVLW       3
0x175E	0x6E00      	MOVWF       R0 
0x1760	0x0E00      	MOVLW       0
0x1762	0x6E01      	MOVWF       R1 
0x1764	0xF004C1DA  	MOVFF       draw_aste_i_L0, R4
0x1768	0x0E00      	MOVLW       0
0x176A	0x6E05      	MOVWF       R5 
0x176C	0xF001EC42  	CALL        _Mul_16X16_U, 0
0x1770	0x0EC4      	MOVLW       _aste7
0x1772	0x2600      	ADDWF       R0, 1 
0x1774	0x0E01      	MOVLW       hi_addr(_aste7)
0x1776	0x2201      	ADDWFC      R1, 1 
0x1778	0x0E02      	MOVLW       2
0x177A	0x2400      	ADDWF       R0, 0 
0x177C	0x6EE9      	MOVWF       FSR0L 
0x177E	0x0E00      	MOVLW       0
0x1780	0x2001      	ADDWFC      R1, 0 
0x1782	0x6EEA      	MOVWF       FSR0L+1 
0x1784	0xF20BCFEE  	MOVFF       POSTINC0, FARG_Glcd_Dot_x_pos
0x1788	0x0E01      	MOVLW       1
0x178A	0x2400      	ADDWF       R0, 0 
0x178C	0x6EE9      	MOVWF       FSR0L 
0x178E	0x0E00      	MOVLW       0
0x1790	0x2001      	ADDWFC      R1, 0 
0x1792	0x6EEA      	MOVWF       FSR0L+1 
0x1794	0xF20CCFEE  	MOVFF       POSTINC0, FARG_Glcd_Dot_y_pos
0x1798	0x6B0D      	CLRF        FARG_Glcd_Dot_color, 1
0x179A	0xF000EC73  	CALL        _Glcd_Dot, 0
;glcd.c,237 :: 		}
L_draw_aste25:
;glcd.c,231 :: 		for(i = 0; i<4; i++){
0x179E	0x0101      	MOVLB       1
0x17A0	0x2BDA      	INCF        draw_aste_i_L0, 1, 1
;glcd.c,238 :: 		}
0x17A2	0xD78B      	BRA         L_draw_aste21
L_draw_aste22:
;glcd.c,241 :: 		for(i = 0; i<4; i++){
0x17A4	0x6BDA      	CLRF        draw_aste_i_L0, 1
L_draw_aste26:
0x17A6	0x0E04      	MOVLW       4
0x17A8	0x5DDA      	SUBWF       draw_aste_i_L0, 0, 1
0x17AA	0xE264      	BC          L_draw_aste27
;glcd.c,242 :: 		if(asteD1[i].x != 64){
0x17AC	0x0E03      	MOVLW       3
0x17AE	0x6E00      	MOVWF       R0 
0x17B0	0x0E00      	MOVLW       0
0x17B2	0x6E01      	MOVWF       R1 
0x17B4	0xF004C1DA  	MOVFF       draw_aste_i_L0, R4
0x17B8	0x0E00      	MOVLW       0
0x17BA	0x6E05      	MOVWF       R5 
0x17BC	0xF001EC42  	CALL        _Mul_16X16_U, 0
0x17C0	0x0E83      	MOVLW       _asteD1
0x17C2	0x2400      	ADDWF       R0, 0 
0x17C4	0x6EE9      	MOVWF       FSR0L 
0x17C6	0x0E01      	MOVLW       hi_addr(_asteD1)
0x17C8	0x2001      	ADDWFC      R1, 0 
0x17CA	0x6EEA      	MOVWF       FSR0L+1 
0x17CC	0xF001CFEE  	MOVFF       POSTINC0, R1
0x17D0	0x5001      	MOVF        R1, 0 
0x17D2	0x0A40      	XORLW       64
0x17D4	0xE019      	BZ          L_draw_aste29
;glcd.c,243 :: 		Glcd_Dot(asteD1[i].x, 6, 1);
0x17D6	0x0E03      	MOVLW       3
0x17D8	0x6E00      	MOVWF       R0 
0x17DA	0x0E00      	MOVLW       0
0x17DC	0x6E01      	MOVWF       R1 
0x17DE	0xF004C1DA  	MOVFF       draw_aste_i_L0, R4
0x17E2	0x0E00      	MOVLW       0
0x17E4	0x6E05      	MOVWF       R5 
0x17E6	0xF001EC42  	CALL        _Mul_16X16_U, 0
0x17EA	0x0E83      	MOVLW       _asteD1
0x17EC	0x2400      	ADDWF       R0, 0 
0x17EE	0x6EE9      	MOVWF       FSR0L 
0x17F0	0x0E01      	MOVLW       hi_addr(_asteD1)
0x17F2	0x2001      	ADDWFC      R1, 0 
0x17F4	0x6EEA      	MOVWF       FSR0L+1 
0x17F6	0xF20BCFEE  	MOVFF       POSTINC0, FARG_Glcd_Dot_x_pos
0x17FA	0x0E06      	MOVLW       6
0x17FC	0x0102      	MOVLB       2
0x17FE	0x6F0C      	MOVWF       FARG_Glcd_Dot_y_pos, 1
0x1800	0x0E01      	MOVLW       1
0x1802	0x6F0D      	MOVWF       FARG_Glcd_Dot_color, 1
0x1804	0xF000EC73  	CALL        _Glcd_Dot, 0
;glcd.c,244 :: 		}
L_draw_aste29:
;glcd.c,245 :: 		if(asteD1[i].old_x != 64){
0x1808	0x0E03      	MOVLW       3
0x180A	0x6E00      	MOVWF       R0 
0x180C	0x0E00      	MOVLW       0
0x180E	0x6E01      	MOVWF       R1 
0x1810	0xF004C1DA  	MOVFF       draw_aste_i_L0, R4
0x1814	0x0E00      	MOVLW       0
0x1816	0x6E05      	MOVWF       R5 
0x1818	0xF001EC42  	CALL        _Mul_16X16_U, 0
0x181C	0x0E83      	MOVLW       _asteD1
0x181E	0x2600      	ADDWF       R0, 1 
0x1820	0x0E01      	MOVLW       hi_addr(_asteD1)
0x1822	0x2201      	ADDWFC      R1, 1 
0x1824	0x0E02      	MOVLW       2
0x1826	0x2400      	ADDWF       R0, 0 
0x1828	0x6EE9      	MOVWF       FSR0L 
0x182A	0x0E00      	MOVLW       0
0x182C	0x2001      	ADDWFC      R1, 0 
0x182E	0x6EEA      	MOVWF       FSR0L+1 
0x1830	0x50EE      	MOVF        POSTINC0, 0 
0x1832	0x0A40      	XORLW       64
0x1834	0xE01C      	BZ          L_draw_aste30
;glcd.c,246 :: 		Glcd_Dot(asteD1[i].old_x, 6, 0);
0x1836	0x0102      	MOVLB       2
0x1838	0x0E03      	MOVLW       3
0x183A	0x6E00      	MOVWF       R0 
0x183C	0x0E00      	MOVLW       0
0x183E	0x6E01      	MOVWF       R1 
0x1840	0xF004C1DA  	MOVFF       draw_aste_i_L0, R4
0x1844	0x0E00      	MOVLW       0
0x1846	0x6E05      	MOVWF       R5 
0x1848	0xF001EC42  	CALL        _Mul_16X16_U, 0
0x184C	0x0E83      	MOVLW       _asteD1
0x184E	0x2600      	ADDWF       R0, 1 
0x1850	0x0E01      	MOVLW       hi_addr(_asteD1)
0x1852	0x2201      	ADDWFC      R1, 1 
0x1854	0x0E02      	MOVLW       2
0x1856	0x2400      	ADDWF       R0, 0 
0x1858	0x6EE9      	MOVWF       FSR0L 
0x185A	0x0E00      	MOVLW       0
0x185C	0x2001      	ADDWFC      R1, 0 
0x185E	0x6EEA      	MOVWF       FSR0L+1 
0x1860	0xF20BCFEE  	MOVFF       POSTINC0, FARG_Glcd_Dot_x_pos
0x1864	0x0E06      	MOVLW       6
0x1866	0x6F0C      	MOVWF       FARG_Glcd_Dot_y_pos, 1
0x1868	0x6B0D      	CLRF        FARG_Glcd_Dot_color, 1
0x186A	0xF000EC73  	CALL        _Glcd_Dot, 0
;glcd.c,247 :: 		}
L_draw_aste30:
;glcd.c,241 :: 		for(i = 0; i<4; i++){
0x186E	0x0101      	MOVLB       1
0x1870	0x2BDA      	INCF        draw_aste_i_L0, 1, 1
;glcd.c,248 :: 		}
0x1872	0xD799      	BRA         L_draw_aste26
L_draw_aste27:
;glcd.c,249 :: 		for(i = 0; i<3; i++){
0x1874	0x6BDA      	CLRF        draw_aste_i_L0, 1
L_draw_aste31:
0x1876	0x0E03      	MOVLW       3
0x1878	0x5DDA      	SUBWF       draw_aste_i_L0, 0, 1
0x187A	0xE264      	BC          L_draw_aste32
;glcd.c,250 :: 		if(asteD2[i].x != 64){
0x187C	0x0E03      	MOVLW       3
0x187E	0x6E00      	MOVWF       R0 
0x1880	0x0E00      	MOVLW       0
0x1882	0x6E01      	MOVWF       R1 
0x1884	0xF004C1DA  	MOVFF       draw_aste_i_L0, R4
0x1888	0x0E00      	MOVLW       0
0x188A	0x6E05      	MOVWF       R5 
0x188C	0xF001EC42  	CALL        _Mul_16X16_U, 0
0x1890	0x0E56      	MOVLW       _asteD2
0x1892	0x2400      	ADDWF       R0, 0 
0x1894	0x6EE9      	MOVWF       FSR0L 
0x1896	0x0E01      	MOVLW       hi_addr(_asteD2)
0x1898	0x2001      	ADDWFC      R1, 0 
0x189A	0x6EEA      	MOVWF       FSR0L+1 
0x189C	0xF001CFEE  	MOVFF       POSTINC0, R1
0x18A0	0x5001      	MOVF        R1, 0 
0x18A2	0x0A40      	XORLW       64
0x18A4	0xE019      	BZ          L_draw_aste34
;glcd.c,251 :: 		Glcd_Dot(asteD2[i].x, 16, 1);
0x18A6	0x0E03      	MOVLW       3
0x18A8	0x6E00      	MOVWF       R0 
0x18AA	0x0E00      	MOVLW       0
0x18AC	0x6E01      	MOVWF       R1 
0x18AE	0xF004C1DA  	MOVFF       draw_aste_i_L0, R4
0x18B2	0x0E00      	MOVLW       0
0x18B4	0x6E05      	MOVWF       R5 
0x18B6	0xF001EC42  	CALL        _Mul_16X16_U, 0
0x18BA	0x0E56      	MOVLW       _asteD2
0x18BC	0x2400      	ADDWF       R0, 0 
0x18BE	0x6EE9      	MOVWF       FSR0L 
0x18C0	0x0E01      	MOVLW       hi_addr(_asteD2)
0x18C2	0x2001      	ADDWFC      R1, 0 
0x18C4	0x6EEA      	MOVWF       FSR0L+1 
0x18C6	0xF20BCFEE  	MOVFF       POSTINC0, FARG_Glcd_Dot_x_pos
0x18CA	0x0E10      	MOVLW       16
0x18CC	0x0102      	MOVLB       2
0x18CE	0x6F0C      	MOVWF       FARG_Glcd_Dot_y_pos, 1
0x18D0	0x0E01      	MOVLW       1
0x18D2	0x6F0D      	MOVWF       FARG_Glcd_Dot_color, 1
0x18D4	0xF000EC73  	CALL        _Glcd_Dot, 0
;glcd.c,252 :: 		}
L_draw_aste34:
;glcd.c,253 :: 		if(asteD2[i].old_x != 64){
0x18D8	0x0E03      	MOVLW       3
0x18DA	0x6E00      	MOVWF       R0 
0x18DC	0x0E00      	MOVLW       0
0x18DE	0x6E01      	MOVWF       R1 
0x18E0	0xF004C1DA  	MOVFF       draw_aste_i_L0, R4
0x18E4	0x0E00      	MOVLW       0
0x18E6	0x6E05      	MOVWF       R5 
0x18E8	0xF001EC42  	CALL        _Mul_16X16_U, 0
0x18EC	0x0E56      	MOVLW       _asteD2
0x18EE	0x2600      	ADDWF       R0, 1 
0x18F0	0x0E01      	MOVLW       hi_addr(_asteD2)
0x18F2	0x2201      	ADDWFC      R1, 1 
0x18F4	0x0E02      	MOVLW       2
0x18F6	0x2400      	ADDWF       R0, 0 
0x18F8	0x6EE9      	MOVWF       FSR0L 
0x18FA	0x0E00      	MOVLW       0
0x18FC	0x2001      	ADDWFC      R1, 0 
0x18FE	0x6EEA      	MOVWF       FSR0L+1 
0x1900	0x50EE      	MOVF        POSTINC0, 0 
0x1902	0x0A40      	XORLW       64
0x1904	0xE01C      	BZ          L_draw_aste35
;glcd.c,254 :: 		Glcd_Dot(asteD2[i].old_x, 16, 0);
0x1906	0x0102      	MOVLB       2
0x1908	0x0E03      	MOVLW       3
0x190A	0x6E00      	MOVWF       R0 
0x190C	0x0E00      	MOVLW       0
0x190E	0x6E01      	MOVWF       R1 
0x1910	0xF004C1DA  	MOVFF       draw_aste_i_L0, R4
0x1914	0x0E00      	MOVLW       0
0x1916	0x6E05      	MOVWF       R5 
0x1918	0xF001EC42  	CALL        _Mul_16X16_U, 0
0x191C	0x0E56      	MOVLW       _asteD2
0x191E	0x2600      	ADDWF       R0, 1 
0x1920	0x0E01      	MOVLW       hi_addr(_asteD2)
0x1922	0x2201      	ADDWFC      R1, 1 
0x1924	0x0E02      	MOVLW       2
0x1926	0x2400      	ADDWF       R0, 0 
0x1928	0x6EE9      	MOVWF       FSR0L 
0x192A	0x0E00      	MOVLW       0
0x192C	0x2001      	ADDWFC      R1, 0 
0x192E	0x6EEA      	MOVWF       FSR0L+1 
0x1930	0xF20BCFEE  	MOVFF       POSTINC0, FARG_Glcd_Dot_x_pos
0x1934	0x0E10      	MOVLW       16
0x1936	0x6F0C      	MOVWF       FARG_Glcd_Dot_y_pos, 1
0x1938	0x6B0D      	CLRF        FARG_Glcd_Dot_color, 1
0x193A	0xF000EC73  	CALL        _Glcd_Dot, 0
;glcd.c,255 :: 		}
L_draw_aste35:
;glcd.c,249 :: 		for(i = 0; i<3; i++){
0x193E	0x0101      	MOVLB       1
0x1940	0x2BDA      	INCF        draw_aste_i_L0, 1, 1
;glcd.c,256 :: 		}
0x1942	0xD799      	BRA         L_draw_aste31
L_draw_aste32:
;glcd.c,258 :: 		for(i = 0; i<4; i++){
0x1944	0x6BDA      	CLRF        draw_aste_i_L0, 1
L_draw_aste36:
0x1946	0x0E04      	MOVLW       4
0x1948	0x5DDA      	SUBWF       draw_aste_i_L0, 0, 1
0x194A	0xE264      	BC          L_draw_aste37
;glcd.c,259 :: 		if(asteD4[i].x != 64){
0x194C	0x0E03      	MOVLW       3
0x194E	0x6E00      	MOVWF       R0 
0x1950	0x0E00      	MOVLW       0
0x1952	0x6E01      	MOVWF       R1 
0x1954	0xF004C1DA  	MOVFF       draw_aste_i_L0, R4
0x1958	0x0E00      	MOVLW       0
0x195A	0x6E05      	MOVWF       R5 
0x195C	0xF001EC42  	CALL        _Mul_16X16_U, 0
0x1960	0x0E6B      	MOVLW       _asteD4
0x1962	0x2400      	ADDWF       R0, 0 
0x1964	0x6EE9      	MOVWF       FSR0L 
0x1966	0x0E01      	MOVLW       hi_addr(_asteD4)
0x1968	0x2001      	ADDWFC      R1, 0 
0x196A	0x6EEA      	MOVWF       FSR0L+1 
0x196C	0xF001CFEE  	MOVFF       POSTINC0, R1
0x1970	0x5001      	MOVF        R1, 0 
0x1972	0x0A40      	XORLW       64
0x1974	0xE019      	BZ          L_draw_aste39
;glcd.c,260 :: 		Glcd_Dot(asteD4[i].x, 28, 1);
0x1976	0x0E03      	MOVLW       3
0x1978	0x6E00      	MOVWF       R0 
0x197A	0x0E00      	MOVLW       0
0x197C	0x6E01      	MOVWF       R1 
0x197E	0xF004C1DA  	MOVFF       draw_aste_i_L0, R4
0x1982	0x0E00      	MOVLW       0
0x1984	0x6E05      	MOVWF       R5 
0x1986	0xF001EC42  	CALL        _Mul_16X16_U, 0
0x198A	0x0E6B      	MOVLW       _asteD4
0x198C	0x2400      	ADDWF       R0, 0 
0x198E	0x6EE9      	MOVWF       FSR0L 
0x1990	0x0E01      	MOVLW       hi_addr(_asteD4)
0x1992	0x2001      	ADDWFC      R1, 0 
0x1994	0x6EEA      	MOVWF       FSR0L+1 
0x1996	0xF20BCFEE  	MOVFF       POSTINC0, FARG_Glcd_Dot_x_pos
0x199A	0x0E1C      	MOVLW       28
0x199C	0x0102      	MOVLB       2
0x199E	0x6F0C      	MOVWF       FARG_Glcd_Dot_y_pos, 1
0x19A0	0x0E01      	MOVLW       1
0x19A2	0x6F0D      	MOVWF       FARG_Glcd_Dot_color, 1
0x19A4	0xF000EC73  	CALL        _Glcd_Dot, 0
;glcd.c,261 :: 		}
L_draw_aste39:
;glcd.c,262 :: 		if(asteD4[i].old_x != 64){
0x19A8	0x0E03      	MOVLW       3
0x19AA	0x6E00      	MOVWF       R0 
0x19AC	0x0E00      	MOVLW       0
0x19AE	0x6E01      	MOVWF       R1 
0x19B0	0xF004C1DA  	MOVFF       draw_aste_i_L0, R4
0x19B4	0x0E00      	MOVLW       0
0x19B6	0x6E05      	MOVWF       R5 
0x19B8	0xF001EC42  	CALL        _Mul_16X16_U, 0
0x19BC	0x0E6B      	MOVLW       _asteD4
0x19BE	0x2600      	ADDWF       R0, 1 
0x19C0	0x0E01      	MOVLW       hi_addr(_asteD4)
0x19C2	0x2201      	ADDWFC      R1, 1 
0x19C4	0x0E02      	MOVLW       2
0x19C6	0x2400      	ADDWF       R0, 0 
0x19C8	0x6EE9      	MOVWF       FSR0L 
0x19CA	0x0E00      	MOVLW       0
0x19CC	0x2001      	ADDWFC      R1, 0 
0x19CE	0x6EEA      	MOVWF       FSR0L+1 
0x19D0	0x50EE      	MOVF        POSTINC0, 0 
0x19D2	0x0A40      	XORLW       64
0x19D4	0xE01C      	BZ          L_draw_aste40
;glcd.c,263 :: 		Glcd_Dot(asteD4[i].old_x, 28, 0);
0x19D6	0x0102      	MOVLB       2
0x19D8	0x0E03      	MOVLW       3
0x19DA	0x6E00      	MOVWF       R0 
0x19DC	0x0E00      	MOVLW       0
0x19DE	0x6E01      	MOVWF       R1 
0x19E0	0xF004C1DA  	MOVFF       draw_aste_i_L0, R4
0x19E4	0x0E00      	MOVLW       0
0x19E6	0x6E05      	MOVWF       R5 
0x19E8	0xF001EC42  	CALL        _Mul_16X16_U, 0
0x19EC	0x0E6B      	MOVLW       _asteD4
0x19EE	0x2600      	ADDWF       R0, 1 
0x19F0	0x0E01      	MOVLW       hi_addr(_asteD4)
0x19F2	0x2201      	ADDWFC      R1, 1 
0x19F4	0x0E02      	MOVLW       2
0x19F6	0x2400      	ADDWF       R0, 0 
0x19F8	0x6EE9      	MOVWF       FSR0L 
0x19FA	0x0E00      	MOVLW       0
0x19FC	0x2001      	ADDWFC      R1, 0 
0x19FE	0x6EEA      	MOVWF       FSR0L+1 
0x1A00	0xF20BCFEE  	MOVFF       POSTINC0, FARG_Glcd_Dot_x_pos
0x1A04	0x0E1C      	MOVLW       28
0x1A06	0x6F0C      	MOVWF       FARG_Glcd_Dot_y_pos, 1
0x1A08	0x6B0D      	CLRF        FARG_Glcd_Dot_color, 1
0x1A0A	0xF000EC73  	CALL        _Glcd_Dot, 0
;glcd.c,264 :: 		}
L_draw_aste40:
;glcd.c,258 :: 		for(i = 0; i<4; i++){
0x1A0E	0x0101      	MOVLB       1
0x1A10	0x2BDA      	INCF        draw_aste_i_L0, 1, 1
;glcd.c,265 :: 		}
0x1A12	0xD799      	BRA         L_draw_aste36
L_draw_aste37:
;glcd.c,266 :: 		for(i = 0; i<3; i++){
0x1A14	0x6BDA      	CLRF        draw_aste_i_L0, 1
L_draw_aste41:
0x1A16	0x0E03      	MOVLW       3
0x1A18	0x5DDA      	SUBWF       draw_aste_i_L0, 0, 1
0x1A1A	0xE264      	BC          L_draw_aste42
;glcd.c,267 :: 		if(asteD5[i].x != 64){
0x1A1C	0x0E03      	MOVLW       3
0x1A1E	0x6E00      	MOVWF       R0 
0x1A20	0x0E00      	MOVLW       0
0x1A22	0x6E01      	MOVWF       R1 
0x1A24	0xF004C1DA  	MOVFF       draw_aste_i_L0, R4
0x1A28	0x0E00      	MOVLW       0
0x1A2A	0x6E05      	MOVWF       R5 
0x1A2C	0xF001EC42  	CALL        _Mul_16X16_U, 0
0x1A30	0x0EAF      	MOVLW       _asteD5
0x1A32	0x2400      	ADDWF       R0, 0 
0x1A34	0x6EE9      	MOVWF       FSR0L 
0x1A36	0x0E01      	MOVLW       hi_addr(_asteD5)
0x1A38	0x2001      	ADDWFC      R1, 0 
0x1A3A	0x6EEA      	MOVWF       FSR0L+1 
0x1A3C	0xF001CFEE  	MOVFF       POSTINC0, R1
0x1A40	0x5001      	MOVF        R1, 0 
0x1A42	0x0A40      	XORLW       64
0x1A44	0xE019      	BZ          L_draw_aste44
;glcd.c,268 :: 		Glcd_Dot(asteD5[i].x, 40, 1);
0x1A46	0x0E03      	MOVLW       3
0x1A48	0x6E00      	MOVWF       R0 
0x1A4A	0x0E00      	MOVLW       0
0x1A4C	0x6E01      	MOVWF       R1 
0x1A4E	0xF004C1DA  	MOVFF       draw_aste_i_L0, R4
0x1A52	0x0E00      	MOVLW       0
0x1A54	0x6E05      	MOVWF       R5 
0x1A56	0xF001EC42  	CALL        _Mul_16X16_U, 0
0x1A5A	0x0EAF      	MOVLW       _asteD5
0x1A5C	0x2400      	ADDWF       R0, 0 
0x1A5E	0x6EE9      	MOVWF       FSR0L 
0x1A60	0x0E01      	MOVLW       hi_addr(_asteD5)
0x1A62	0x2001      	ADDWFC      R1, 0 
0x1A64	0x6EEA      	MOVWF       FSR0L+1 
0x1A66	0xF20BCFEE  	MOVFF       POSTINC0, FARG_Glcd_Dot_x_pos
0x1A6A	0x0E28      	MOVLW       40
0x1A6C	0x0102      	MOVLB       2
0x1A6E	0x6F0C      	MOVWF       FARG_Glcd_Dot_y_pos, 1
0x1A70	0x0E01      	MOVLW       1
0x1A72	0x6F0D      	MOVWF       FARG_Glcd_Dot_color, 1
0x1A74	0xF000EC73  	CALL        _Glcd_Dot, 0
;glcd.c,269 :: 		}
L_draw_aste44:
;glcd.c,270 :: 		if(asteD5[i].old_x != 64){
0x1A78	0x0E03      	MOVLW       3
0x1A7A	0x6E00      	MOVWF       R0 
0x1A7C	0x0E00      	MOVLW       0
0x1A7E	0x6E01      	MOVWF       R1 
0x1A80	0xF004C1DA  	MOVFF       draw_aste_i_L0, R4
0x1A84	0x0E00      	MOVLW       0
0x1A86	0x6E05      	MOVWF       R5 
0x1A88	0xF001EC42  	CALL        _Mul_16X16_U, 0
0x1A8C	0x0EAF      	MOVLW       _asteD5
0x1A8E	0x2600      	ADDWF       R0, 1 
0x1A90	0x0E01      	MOVLW       hi_addr(_asteD5)
0x1A92	0x2201      	ADDWFC      R1, 1 
0x1A94	0x0E02      	MOVLW       2
0x1A96	0x2400      	ADDWF       R0, 0 
0x1A98	0x6EE9      	MOVWF       FSR0L 
0x1A9A	0x0E00      	MOVLW       0
0x1A9C	0x2001      	ADDWFC      R1, 0 
0x1A9E	0x6EEA      	MOVWF       FSR0L+1 
0x1AA0	0x50EE      	MOVF        POSTINC0, 0 
0x1AA2	0x0A40      	XORLW       64
0x1AA4	0xE01C      	BZ          L_draw_aste45
;glcd.c,271 :: 		Glcd_Dot(asteD5[i].old_x, 40, 0);
0x1AA6	0x0102      	MOVLB       2
0x1AA8	0x0E03      	MOVLW       3
0x1AAA	0x6E00      	MOVWF       R0 
0x1AAC	0x0E00      	MOVLW       0
0x1AAE	0x6E01      	MOVWF       R1 
0x1AB0	0xF004C1DA  	MOVFF       draw_aste_i_L0, R4
0x1AB4	0x0E00      	MOVLW       0
0x1AB6	0x6E05      	MOVWF       R5 
0x1AB8	0xF001EC42  	CALL        _Mul_16X16_U, 0
0x1ABC	0x0EAF      	MOVLW       _asteD5
0x1ABE	0x2600      	ADDWF       R0, 1 
0x1AC0	0x0E01      	MOVLW       hi_addr(_asteD5)
0x1AC2	0x2201      	ADDWFC      R1, 1 
0x1AC4	0x0E02      	MOVLW       2
0x1AC6	0x2400      	ADDWF       R0, 0 
0x1AC8	0x6EE9      	MOVWF       FSR0L 
0x1ACA	0x0E00      	MOVLW       0
0x1ACC	0x2001      	ADDWFC      R1, 0 
0x1ACE	0x6EEA      	MOVWF       FSR0L+1 
0x1AD0	0xF20BCFEE  	MOVFF       POSTINC0, FARG_Glcd_Dot_x_pos
0x1AD4	0x0E28      	MOVLW       40
0x1AD6	0x6F0C      	MOVWF       FARG_Glcd_Dot_y_pos, 1
0x1AD8	0x6B0D      	CLRF        FARG_Glcd_Dot_color, 1
0x1ADA	0xF000EC73  	CALL        _Glcd_Dot, 0
;glcd.c,272 :: 		}
L_draw_aste45:
;glcd.c,266 :: 		for(i = 0; i<3; i++){
0x1ADE	0x0101      	MOVLB       1
0x1AE0	0x2BDA      	INCF        draw_aste_i_L0, 1, 1
;glcd.c,274 :: 		}
0x1AE2	0xD799      	BRA         L_draw_aste41
L_draw_aste42:
;glcd.c,275 :: 		for(i = 0; i<4; i++){
0x1AE4	0x6BDA      	CLRF        draw_aste_i_L0, 1
L_draw_aste46:
0x1AE6	0x0E04      	MOVLW       4
0x1AE8	0x5DDA      	SUBWF       draw_aste_i_L0, 0, 1
0x1AEA	0xE264      	BC          L_draw_aste47
;glcd.c,276 :: 		if(asteD6[i].x != 64){
0x1AEC	0x0E03      	MOVLW       3
0x1AEE	0x6E00      	MOVWF       R0 
0x1AF0	0x0E00      	MOVLW       0
0x1AF2	0x6E01      	MOVWF       R1 
0x1AF4	0xF004C1DA  	MOVFF       draw_aste_i_L0, R4
0x1AF8	0x0E00      	MOVLW       0
0x1AFA	0x6E05      	MOVWF       R5 
0x1AFC	0xF001EC42  	CALL        _Mul_16X16_U, 0
0x1B00	0x0EB8      	MOVLW       _asteD6
0x1B02	0x2400      	ADDWF       R0, 0 
0x1B04	0x6EE9      	MOVWF       FSR0L 
0x1B06	0x0E01      	MOVLW       hi_addr(_asteD6)
0x1B08	0x2001      	ADDWFC      R1, 0 
0x1B0A	0x6EEA      	MOVWF       FSR0L+1 
0x1B0C	0xF001CFEE  	MOVFF       POSTINC0, R1
0x1B10	0x5001      	MOVF        R1, 0 
0x1B12	0x0A40      	XORLW       64
0x1B14	0xE019      	BZ          L_draw_aste49
;glcd.c,277 :: 		Glcd_Dot(asteD6[i].x, 49, 1);
0x1B16	0x0E03      	MOVLW       3
0x1B18	0x6E00      	MOVWF       R0 
0x1B1A	0x0E00      	MOVLW       0
0x1B1C	0x6E01      	MOVWF       R1 
0x1B1E	0xF004C1DA  	MOVFF       draw_aste_i_L0, R4
0x1B22	0x0E00      	MOVLW       0
0x1B24	0x6E05      	MOVWF       R5 
0x1B26	0xF001EC42  	CALL        _Mul_16X16_U, 0
0x1B2A	0x0EB8      	MOVLW       _asteD6
0x1B2C	0x2400      	ADDWF       R0, 0 
0x1B2E	0x6EE9      	MOVWF       FSR0L 
0x1B30	0x0E01      	MOVLW       hi_addr(_asteD6)
0x1B32	0x2001      	ADDWFC      R1, 0 
0x1B34	0x6EEA      	MOVWF       FSR0L+1 
0x1B36	0xF20BCFEE  	MOVFF       POSTINC0, FARG_Glcd_Dot_x_pos
0x1B3A	0x0E31      	MOVLW       49
0x1B3C	0x0102      	MOVLB       2
0x1B3E	0x6F0C      	MOVWF       FARG_Glcd_Dot_y_pos, 1
0x1B40	0x0E01      	MOVLW       1
0x1B42	0x6F0D      	MOVWF       FARG_Glcd_Dot_color, 1
0x1B44	0xF000EC73  	CALL        _Glcd_Dot, 0
;glcd.c,278 :: 		}
L_draw_aste49:
;glcd.c,279 :: 		if(asteD6[i].old_x != 64){
0x1B48	0x0E03      	MOVLW       3
0x1B4A	0x6E00      	MOVWF       R0 
0x1B4C	0x0E00      	MOVLW       0
0x1B4E	0x6E01      	MOVWF       R1 
0x1B50	0xF004C1DA  	MOVFF       draw_aste_i_L0, R4
0x1B54	0x0E00      	MOVLW       0
0x1B56	0x6E05      	MOVWF       R5 
0x1B58	0xF001EC42  	CALL        _Mul_16X16_U, 0
0x1B5C	0x0EB8      	MOVLW       _asteD6
0x1B5E	0x2600      	ADDWF       R0, 1 
0x1B60	0x0E01      	MOVLW       hi_addr(_asteD6)
0x1B62	0x2201      	ADDWFC      R1, 1 
0x1B64	0x0E02      	MOVLW       2
0x1B66	0x2400      	ADDWF       R0, 0 
0x1B68	0x6EE9      	MOVWF       FSR0L 
0x1B6A	0x0E00      	MOVLW       0
0x1B6C	0x2001      	ADDWFC      R1, 0 
0x1B6E	0x6EEA      	MOVWF       FSR0L+1 
0x1B70	0x50EE      	MOVF        POSTINC0, 0 
0x1B72	0x0A40      	XORLW       64
0x1B74	0xE01C      	BZ          L_draw_aste50
;glcd.c,280 :: 		Glcd_Dot(asteD6[i].old_x, 49, 0);
0x1B76	0x0102      	MOVLB       2
0x1B78	0x0E03      	MOVLW       3
0x1B7A	0x6E00      	MOVWF       R0 
0x1B7C	0x0E00      	MOVLW       0
0x1B7E	0x6E01      	MOVWF       R1 
0x1B80	0xF004C1DA  	MOVFF       draw_aste_i_L0, R4
0x1B84	0x0E00      	MOVLW       0
0x1B86	0x6E05      	MOVWF       R5 
0x1B88	0xF001EC42  	CALL        _Mul_16X16_U, 0
0x1B8C	0x0EB8      	MOVLW       _asteD6
0x1B8E	0x2600      	ADDWF       R0, 1 
0x1B90	0x0E01      	MOVLW       hi_addr(_asteD6)
0x1B92	0x2201      	ADDWFC      R1, 1 
0x1B94	0x0E02      	MOVLW       2
0x1B96	0x2400      	ADDWF       R0, 0 
0x1B98	0x6EE9      	MOVWF       FSR0L 
0x1B9A	0x0E00      	MOVLW       0
0x1B9C	0x2001      	ADDWFC      R1, 0 
0x1B9E	0x6EEA      	MOVWF       FSR0L+1 
0x1BA0	0xF20BCFEE  	MOVFF       POSTINC0, FARG_Glcd_Dot_x_pos
0x1BA4	0x0E31      	MOVLW       49
0x1BA6	0x6F0C      	MOVWF       FARG_Glcd_Dot_y_pos, 1
0x1BA8	0x6B0D      	CLRF        FARG_Glcd_Dot_color, 1
0x1BAA	0xF000EC73  	CALL        _Glcd_Dot, 0
;glcd.c,281 :: 		}
L_draw_aste50:
;glcd.c,275 :: 		for(i = 0; i<4; i++){
0x1BAE	0x0101      	MOVLB       1
0x1BB0	0x2BDA      	INCF        draw_aste_i_L0, 1, 1
;glcd.c,283 :: 		}
0x1BB2	0xD799      	BRA         L_draw_aste46
L_draw_aste47:
;glcd.c,285 :: 		}
L_end_draw_aste:
0x1BB4	0x0012      	RETURN      0
; end of _draw_aste
_int2double:
;__Lib_MathDouble.c,2285 :: 		
;__Lib_MathDouble.c,2294 :: 		
0x1BB6	0xF008C000  	MOVFF       R0, R8
;__Lib_MathDouble.c,2295 :: 		
0x1BBA	0x5001      	MOVF        R1, 0, 0
;__Lib_MathDouble.c,2296 :: 		
0x1BBC	0x6E00      	MOVWF       R0, 0
;__Lib_MathDouble.c,2297 :: 		
0x1BBE	0x6A01      	CLRF        R1, 0
;__Lib_MathDouble.c,2298 :: 		
0x1BC0	0x6A02      	CLRF        R2, 0
;__Lib_MathDouble.c,2299 :: 		
0x1BC2	0x6A03      	CLRF        R3, 0
;__Lib_MathDouble.c,2302 :: 		
0x1BC4	0x6A0B      	CLRF        R11, 0
;__Lib_MathDouble.c,2303 :: 		
0x1BC6	0x6A0C      	CLRF        R12, 0
;__Lib_MathDouble.c,2304 :: 		
0x1BC8	0x6A01      	CLRF        R1, 0
;__Lib_MathDouble.c,2305 :: 		
0x1BCA	0x6A02      	CLRF        R2, 0
;__Lib_MathDouble.c,2306 :: 		
0x1BCC	0x6A03      	CLRF        R3, 0
;__Lib_MathDouble.c,2308 :: 		
0x1BCE	0x0E96      	MOVLW       150
;__Lib_MathDouble.c,2309 :: 		
0x1BD0	0x6E03      	MOVWF       R3, 0
;__Lib_MathDouble.c,2310 :: 		
0x1BD2	0x6A0A      	CLRF        R10, 0
;__Lib_MathDouble.c,2311 :: 		
0x1BD4	0xAE00      	BTFSS       R0, 7, 0
;__Lib_MathDouble.c,2312 :: 		
0x1BD6	0xF00DEFF3  	GOTO        FLO1632EEE
;__Lib_MathDouble.c,2314 :: 		
0x1BDA	0x1E08      	COMF        R8, 1, 0
;__Lib_MathDouble.c,2315 :: 		
0x1BDC	0x1E00      	COMF        R0, 1, 0
;__Lib_MathDouble.c,2317 :: 		
0x1BDE	0x2A08      	INCF        R8, 1, 0
;__Lib_MathDouble.c,2318 :: 		
0x1BE0	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_MathDouble.c,2319 :: 		
0x1BE2	0x2A00      	INCF        R0, 1, 0
;__Lib_MathDouble.c,2321 :: 		
0x1BE4	0x8E0A      	BSF         R10, 7, 0
;__Lib_MathDouble.c,2322 :: 		
FLO1632EEE:
;__Lib_MathDouble.c,2323 :: 		
0x1BE6	0xF001C000  	MOVFF       R0, R1
;__Lib_MathDouble.c,2324 :: 		
0x1BEA	0xF000C008  	MOVFF       R8, R0
;__Lib_MathDouble.c,2325 :: 		
0x1BEE	0x6A08      	CLRF        R8, 0
;__Lib_MathDouble.c,2326 :: 		
0x1BF0	0x6A02      	CLRF        R2, 0
;__Lib_MathDouble.c,2328 :: 		
0x1BF2	0xF002EC14  	CALL        _NRM3232, 0
;__Lib_MathDouble.c,2329 :: 		
L_end_int2double:
0x1BF6	0x0012      	RETURN      0
; end of _int2double
_Glcd_Init:
;__Lib_Glcd.c,147 :: 		
;__Lib_Glcd.c,148 :: 		
0x1BF8	0x0101      	MOVLB       1
0x1BFA	0x6B51      	CLRF        __Lib_Glcd_FontInitialized, 1
;__Lib_Glcd.c,149 :: 		
0x1BFC	0x6B52      	CLRF        __Lib_Glcd_ExternalFontSet, 1
0x1BFE	0x6B53      	CLRF        __Lib_Glcd_ExternalFontSet+1, 1
;__Lib_Glcd.c,151 :: 		
0x1C00	0x9A93      	BCF         GLCD_RST_Direction, BitPos(GLCD_RST_Direction+0) 
;__Lib_Glcd.c,152 :: 		
0x1C02	0x9893      	BCF         GLCD_EN_Direction, BitPos(GLCD_EN_Direction+0) 
;__Lib_Glcd.c,153 :: 		
0x1C04	0x9493      	BCF         GLCD_RS_Direction, BitPos(GLCD_RS_Direction+0) 
;__Lib_Glcd.c,154 :: 		
0x1C06	0x9693      	BCF         GLCD_RW_Direction, BitPos(GLCD_RW_Direction+0) 
;__Lib_Glcd.c,155 :: 		
0x1C08	0x9093      	BCF         GLCD_CS1_Direction, BitPos(GLCD_CS1_Direction+0) 
;__Lib_Glcd.c,156 :: 		
0x1C0A	0x9293      	BCF         GLCD_CS2_Direction, BitPos(GLCD_CS2_Direction+0) 
;__Lib_Glcd.c,158 :: 		
0x1C0C	0x9A8A      	BCF         GLCD_RST, BitPos(GLCD_RST+0) 
;__Lib_Glcd.c,163 :: 		
0x1C0E	0x0E12      	MOVLW       18
0x1C10	0x6E00      	MOVWF       R0 
0x1C12	0x0E00      	MOVLW       0
0x1C14	0x6E01      	MOVWF       R1 
0x1C16	0x0E83      	MOVLW       GLCD_DataPort
0x1C18	0x2400      	ADDWF       R0, 0 
0x1C1A	0x6EE1      	MOVWF       FSR1L 
0x1C1C	0x0E0F      	MOVLW       hi_addr(GLCD_DataPort)
0x1C1E	0x2001      	ADDWFC      R1, 0 
0x1C20	0x6EE2      	MOVWF       FSR1L+1 
0x1C22	0x6AE6      	CLRF        POSTINC1 
;__Lib_Glcd.c,173 :: 		
0x1C24	0x948A      	BCF         GLCD_RS, BitPos(GLCD_RS+0) 
;__Lib_Glcd.c,174 :: 		
0x1C26	0x968A      	BCF         GLCD_RW, BitPos(GLCD_RW+0) 
;__Lib_Glcd.c,176 :: 		
0x1C28	0x908A      	BCF         GLCD_CS1, BitPos(GLCD_CS1+0) 
;__Lib_Glcd.c,177 :: 		
0x1C2A	0x828A      	BSF         GLCD_CS2, BitPos(GLCD_CS2+0) 
;__Lib_Glcd.c,179 :: 		
0x1C2C	0x8A8A      	BSF         GLCD_RST, BitPos(GLCD_RST+0) 
;__Lib_Glcd.c,186 :: 		
0x1C2E	0x0E3F      	MOVLW       63
0x1C30	0x6E83      	MOVWF       GLCD_DataPort 
;__Lib_Glcd.c,187 :: 		
0x1C32	0xF000EC14  	CALL        __Lib_Glcd_Strobe, 0
;__Lib_Glcd.c,189 :: 		
0x1C36	0x0EC0      	MOVLW       192
0x1C38	0x6E83      	MOVWF       GLCD_DataPort 
;__Lib_Glcd.c,190 :: 		
0x1C3A	0xF000EC14  	CALL        __Lib_Glcd_Strobe, 0
;__Lib_Glcd.c,192 :: 		
0x1C3E	0x808A      	BSF         GLCD_CS1, BitPos(GLCD_CS1+0) 
;__Lib_Glcd.c,193 :: 		
0x1C40	0x928A      	BCF         GLCD_CS2, BitPos(GLCD_CS2+0) 
;__Lib_Glcd.c,195 :: 		
0x1C42	0x0E3F      	MOVLW       63
0x1C44	0x6E83      	MOVWF       GLCD_DataPort 
;__Lib_Glcd.c,196 :: 		
0x1C46	0xF000EC14  	CALL        __Lib_Glcd_Strobe, 0
;__Lib_Glcd.c,198 :: 		
0x1C4A	0x0EC0      	MOVLW       192
0x1C4C	0x6E83      	MOVWF       GLCD_DataPort 
;__Lib_Glcd.c,199 :: 		
0x1C4E	0xF000EC14  	CALL        __Lib_Glcd_Strobe, 0
;__Lib_Glcd.c,201 :: 		
L_end_Glcd_Init:
0x1C52	0x0012      	RETURN      0
; end of _Glcd_Init
___CC2DW:
;__Lib_System.c,21 :: 		
;__Lib_System.c,23 :: 		
_CC2DL_Loop1:
;__Lib_System.c,24 :: 		
0x1C54	0x0009      	TBLRD*+
;__Lib_System.c,25 :: 		
0x1C56	0xFFE6CFF5  	MOVFF       TABLAT, POSTINC1
;__Lib_System.c,26 :: 		
0x1C5A	0x0600      	DECF        R0, 1, 0
;__Lib_System.c,27 :: 		
0x1C5C	0xE1FB      	BNZ         _CC2DL_Loop1
;__Lib_System.c,28 :: 		
0x1C5E	0x0601      	DECF        R1, 1, 0
;__Lib_System.c,29 :: 		
0x1C60	0xE1F9      	BNZ         _CC2DL_Loop1
;__Lib_System.c,31 :: 		
L_end___CC2DW:
0x1C62	0x0012      	RETURN      0
; end of ___CC2DW
_ADC_Init:
;__Lib_ADC_A_D.c,13 :: 		
;__Lib_ADC_A_D.c,14 :: 		
0x1C64	0x0EFF      	MOVLW       _ADC_Get_Sample
0x1C66	0x0101      	MOVLB       1
0x1C68	0x6F3D      	MOVWF       _ADC_Get_Sample_Ptr, 1
0x1C6A	0x0EFF      	MOVLW       hi_addr(_ADC_Get_Sample)
0x1C6C	0x6F3E      	MOVWF       _ADC_Get_Sample_Ptr+1, 1
0x1C6E	0x0EFF      	MOVLW       FARG_ADC_Get_Sample_channel
0x1C70	0x6F3F      	MOVWF       _ADC_Get_Sample_Ptr+2, 1
0x1C72	0x0EFF      	MOVLW       hi_addr(FARG_ADC_Get_Sample_channel)
0x1C74	0x6F40      	MOVWF       _ADC_Get_Sample_Ptr+3, 1
;__Lib_ADC_A_D.c,16 :: 		
0x1C76	0x6AC2      	CLRF        ADCON0 
;__Lib_ADC_A_D.c,17 :: 		
0x1C78	0x0100      	MOVLB       0
0x1C7A	0x1DE6      	COMF        _vref_mask, 0, 1
0x1C7C	0x6E00      	MOVWF       R0 
0x1C7E	0x5000      	MOVF        R0, 0 
0x1C80	0x16C1      	ANDWF       ADCON1, 1 
;__Lib_ADC_A_D.c,18 :: 		
0x1C82	0x0E07      	MOVLW       7
0x1C84	0x12C0      	IORWF       ADCON2, 1 
;__Lib_ADC_A_D.c,19 :: 		
0x1C86	0x8EC0      	BSF         ADCON2, 7 
;__Lib_ADC_A_D.c,20 :: 		
0x1C88	0x80C2      	BSF         ADCON0, 0 
;__Lib_ADC_A_D.c,21 :: 		
L_end_ADC_Init:
0x1C8A	0x0012      	RETURN      0
; end of _ADC_Init
_UART1_Init:
;__Lib_UART_c67.c,15 :: 		
;__Lib_UART_c67.c,18 :: 		
0x1C8C	0x0E4E      	MOVLW       _UART1_Write
0x1C8E	0x0101      	MOVLB       1
0x1C90	0x6F31      	MOVWF       _UART_Wr_Ptr, 1
0x1C92	0x0E0C      	MOVLW       hi_addr(_UART1_Write)
0x1C94	0x6F32      	MOVWF       _UART_Wr_Ptr+1, 1
0x1C96	0x0EE2      	MOVLW       FARG_UART1_Write_data_
0x1C98	0x6F33      	MOVWF       _UART_Wr_Ptr+2, 1
0x1C9A	0x0E01      	MOVLW       hi_addr(FARG_UART1_Write_data_)
0x1C9C	0x6F34      	MOVWF       _UART_Wr_Ptr+3, 1
;__Lib_UART_c67.c,19 :: 		
0x1C9E	0x0EE2      	MOVLW       _UART1_Read
0x1CA0	0x6F25      	MOVWF       _UART_Rd_Ptr, 1
0x1CA2	0x0E1D      	MOVLW       hi_addr(_UART1_Read)
0x1CA4	0x6F26      	MOVWF       _UART_Rd_Ptr+1, 1
0x1CA6	0x0E00      	MOVLW       0
0x1CA8	0x6F27      	MOVWF       _UART_Rd_Ptr+2, 1
0x1CAA	0x0E00      	MOVLW       0
0x1CAC	0x6F28      	MOVWF       _UART_Rd_Ptr+3, 1
;__Lib_UART_c67.c,20 :: 		
0x1CAE	0x0EB4      	MOVLW       _UART1_Data_Ready
0x1CB0	0x6F29      	MOVWF       _UART_Rdy_Ptr, 1
0x1CB2	0x0E28      	MOVLW       hi_addr(_UART1_Data_Ready)
0x1CB4	0x6F2A      	MOVWF       _UART_Rdy_Ptr+1, 1
0x1CB6	0x0E00      	MOVLW       0
0x1CB8	0x6F2B      	MOVWF       _UART_Rdy_Ptr+2, 1
0x1CBA	0x0E00      	MOVLW       0
0x1CBC	0x6F2C      	MOVWF       _UART_Rdy_Ptr+3, 1
;__Lib_UART_c67.c,21 :: 		
0x1CBE	0x0E12      	MOVLW       _UART1_Tx_Idle
0x1CC0	0x6F2D      	MOVWF       _UART_Tx_Idle_Ptr, 1
0x1CC2	0x0E0D      	MOVLW       hi_addr(_UART1_Tx_Idle)
0x1CC4	0x6F2E      	MOVWF       _UART_Tx_Idle_Ptr+1, 1
0x1CC6	0x0E00      	MOVLW       0
0x1CC8	0x6F2F      	MOVWF       _UART_Tx_Idle_Ptr+2, 1
0x1CCA	0x0E00      	MOVLW       0
0x1CCC	0x6F30      	MOVWF       _UART_Tx_Idle_Ptr+3, 1
;__Lib_UART_c67.c,23 :: 		
0x1CCE	0x8AAC      	BSF         TXSTA, 5 
;__Lib_UART_c67.c,24 :: 		
0x1CD0	0x0E90      	MOVLW       144
0x1CD2	0x6EAB      	MOVWF       RCSTA 
;__Lib_UART_c67.c,25 :: 		
0x1CD4	0x8E94      	BSF         TRISC7_bit, BitPos(TRISC7_bit+0) 
;__Lib_UART_c67.c,26 :: 		
0x1CD6	0x9C94      	BCF         TRISC6_bit, BitPos(TRISC6_bit+0) 
;__Lib_UART_c67.c,28 :: 		
L_UART1_Init0:
0x1CD8	0xAA9E      	BTFSS       PIR1, 5 
0x1CDA	0xD003      	BRA         L_UART1_Init1
;__Lib_UART_c67.c,29 :: 		
0x1CDC	0xF000CFAE  	MOVFF       RCREG, R0
0x1CE0	0xD7FB      	BRA         L_UART1_Init0
L_UART1_Init1:
;__Lib_UART_c67.c,30 :: 		
L_end_UART1_Init:
0x1CE2	0x0012      	RETURN      0
; end of _UART1_Init
_Glcd_Fill:
;__Lib_Glcd.c,125 :: 		
;__Lib_Glcd.c,128 :: 		
0x1CE4	0x908A      	BCF         GLCD_CS1, BitPos(GLCD_CS1+0) 
0x1CE6	0x828A      	BSF         GLCD_CS2, BitPos(GLCD_CS2+0) 
;__Lib_Glcd.c,129 :: 		
0x1CE8	0x0101      	MOVLB       1
0x1CEA	0x6BD5      	CLRF        Glcd_Fill_page_L0, 1
L_Glcd_Fill2:
0x1CEC	0x51D5      	MOVF        Glcd_Fill_page_L0, 0, 1
0x1CEE	0x0807      	SUBLW       7
0x1CF0	0xE311      	BNC         L_Glcd_Fill3
;__Lib_Glcd.c,130 :: 		
0x1CF2	0xF210C1D5  	MOVFF       Glcd_Fill_page_L0, FARG_Glcd_Set_Page_page
0x1CF6	0xF000EC58  	CALL        _Glcd_Set_Page, 0
;__Lib_Glcd.c,132 :: 		
0x1CFA	0x0101      	MOVLB       1
0x1CFC	0x6BD4      	CLRF        Glcd_Fill_yy_L0, 1
L_Glcd_Fill5:
0x1CFE	0x51D4      	MOVF        Glcd_Fill_yy_L0, 0, 1
0x1D00	0x083F      	SUBLW       63
0x1D02	0xE306      	BNC         L_Glcd_Fill6
;__Lib_Glcd.c,133 :: 		
0x1D04	0xF210C1D3  	MOVFF       FARG_Glcd_Fill_pattern, FARG_Glcd_Write_Data_ddata
0x1D08	0xF000EC43  	CALL        _Glcd_Write_Data, 0
;__Lib_Glcd.c,132 :: 		
0x1D0C	0x2BD4      	INCF        Glcd_Fill_yy_L0, 1, 1
;__Lib_Glcd.c,135 :: 		
0x1D0E	0xD7F7      	BRA         L_Glcd_Fill5
L_Glcd_Fill6:
;__Lib_Glcd.c,129 :: 		
0x1D10	0x2BD5      	INCF        Glcd_Fill_page_L0, 1, 1
;__Lib_Glcd.c,136 :: 		
0x1D12	0xD7EC      	BRA         L_Glcd_Fill2
L_Glcd_Fill3:
;__Lib_Glcd.c,138 :: 		
0x1D14	0x928A      	BCF         GLCD_CS2, BitPos(GLCD_CS2+0) 
0x1D16	0x808A      	BSF         GLCD_CS1, BitPos(GLCD_CS1+0) 
;__Lib_Glcd.c,139 :: 		
0x1D18	0x6BD5      	CLRF        Glcd_Fill_page_L0, 1
L_Glcd_Fill8:
0x1D1A	0x51D5      	MOVF        Glcd_Fill_page_L0, 0, 1
0x1D1C	0x0807      	SUBLW       7
0x1D1E	0xE311      	BNC         L_Glcd_Fill9
;__Lib_Glcd.c,140 :: 		
0x1D20	0xF210C1D5  	MOVFF       Glcd_Fill_page_L0, FARG_Glcd_Set_Page_page
0x1D24	0xF000EC58  	CALL        _Glcd_Set_Page, 0
;__Lib_Glcd.c,141 :: 		
0x1D28	0x0101      	MOVLB       1
0x1D2A	0x6BD4      	CLRF        Glcd_Fill_yy_L0, 1
L_Glcd_Fill11:
0x1D2C	0x51D4      	MOVF        Glcd_Fill_yy_L0, 0, 1
0x1D2E	0x083F      	SUBLW       63
0x1D30	0xE306      	BNC         L_Glcd_Fill12
;__Lib_Glcd.c,142 :: 		
0x1D32	0xF210C1D3  	MOVFF       FARG_Glcd_Fill_pattern, FARG_Glcd_Write_Data_ddata
0x1D36	0xF000EC43  	CALL        _Glcd_Write_Data, 0
;__Lib_Glcd.c,141 :: 		
0x1D3A	0x2BD4      	INCF        Glcd_Fill_yy_L0, 1, 1
;__Lib_Glcd.c,142 :: 		
0x1D3C	0xD7F7      	BRA         L_Glcd_Fill11
L_Glcd_Fill12:
;__Lib_Glcd.c,139 :: 		
0x1D3E	0x2BD5      	INCF        Glcd_Fill_page_L0, 1, 1
;__Lib_Glcd.c,143 :: 		
0x1D40	0xD7EC      	BRA         L_Glcd_Fill8
L_Glcd_Fill9:
;__Lib_Glcd.c,144 :: 		
L_end_Glcd_Fill:
0x1D42	0x0012      	RETURN      0
; end of _Glcd_Fill
_first_CoverP:
;glcd.c,71 :: 		void first_CoverP(){
;glcd.c,72 :: 		Glcd_Image(TEC);
0x1D44	0x0E4F      	MOVLW       _TEC
0x1D46	0x0101      	MOVLB       1
0x1D48	0x6FDA      	MOVWF       FARG_Glcd_Image_image, 1
0x1D4A	0x0E55      	MOVLW       hi_addr(_TEC)
0x1D4C	0x6FDB      	MOVWF       FARG_Glcd_Image_image+1, 1
0x1D4E	0x0E00      	MOVLW       higher_addr(_TEC)
0x1D50	0x6FDC      	MOVWF       FARG_Glcd_Image_image+2, 1
0x1D52	0xF008EC97  	CALL        _Glcd_Image, 0
;glcd.c,73 :: 		Glcd_Write_Text_Adv("Andrey Sequeira", 4, 21);
0x1D56	0x0E59      	MOVLW       ?lstr3_glcd
0x1D58	0x6FDA      	MOVWF       FARG_Glcd_Write_Text_Adv_text, 1
0x1D5A	0x0E00      	MOVLW       hi_addr(?lstr3_glcd)
0x1D5C	0x6FDB      	MOVWF       FARG_Glcd_Write_Text_Adv_text+1, 1
0x1D5E	0x0E04      	MOVLW       4
0x1D60	0x6FDC      	MOVWF       FARG_Glcd_Write_Text_Adv_x, 1
0x1D62	0x0E00      	MOVLW       0
0x1D64	0x6FDD      	MOVWF       FARG_Glcd_Write_Text_Adv_x+1, 1
0x1D66	0x0E15      	MOVLW       21
0x1D68	0x6FDE      	MOVWF       FARG_Glcd_Write_Text_Adv_y, 1
0x1D6A	0x0E00      	MOVLW       0
0x1D6C	0x6FDF      	MOVWF       FARG_Glcd_Write_Text_Adv_y+1, 1
0x1D6E	0xF008EC33  	CALL        _Glcd_Write_Text_Adv, 0
;glcd.c,74 :: 		Glcd_Write_Text_Adv("Erick Quiros", 4, 31);
0x1D72	0x0E69      	MOVLW       ?lstr4_glcd
0x1D74	0x6FDA      	MOVWF       FARG_Glcd_Write_Text_Adv_text, 1
0x1D76	0x0E00      	MOVLW       hi_addr(?lstr4_glcd)
0x1D78	0x6FDB      	MOVWF       FARG_Glcd_Write_Text_Adv_text+1, 1
0x1D7A	0x0E04      	MOVLW       4
0x1D7C	0x6FDC      	MOVWF       FARG_Glcd_Write_Text_Adv_x, 1
0x1D7E	0x0E00      	MOVLW       0
0x1D80	0x6FDD      	MOVWF       FARG_Glcd_Write_Text_Adv_x+1, 1
0x1D82	0x0E1F      	MOVLW       31
0x1D84	0x6FDE      	MOVWF       FARG_Glcd_Write_Text_Adv_y, 1
0x1D86	0x0E00      	MOVLW       0
0x1D88	0x6FDF      	MOVWF       FARG_Glcd_Write_Text_Adv_y+1, 1
0x1D8A	0xF008EC33  	CALL        _Glcd_Write_Text_Adv, 0
;glcd.c,75 :: 		Glcd_Write_Text_Adv("Prof. Ernesto Rivera", 4, 42);
0x1D8E	0x0E7E      	MOVLW       ?lstr5_glcd
0x1D90	0x6FDA      	MOVWF       FARG_Glcd_Write_Text_Adv_text, 1
0x1D92	0x0E00      	MOVLW       hi_addr(?lstr5_glcd)
0x1D94	0x6FDB      	MOVWF       FARG_Glcd_Write_Text_Adv_text+1, 1
0x1D96	0x0E04      	MOVLW       4
0x1D98	0x6FDC      	MOVWF       FARG_Glcd_Write_Text_Adv_x, 1
0x1D9A	0x0E00      	MOVLW       0
0x1D9C	0x6FDD      	MOVWF       FARG_Glcd_Write_Text_Adv_x+1, 1
0x1D9E	0x0E2A      	MOVLW       42
0x1DA0	0x6FDE      	MOVWF       FARG_Glcd_Write_Text_Adv_y, 1
0x1DA2	0x0E00      	MOVLW       0
0x1DA4	0x6FDF      	MOVWF       FARG_Glcd_Write_Text_Adv_y+1, 1
0x1DA6	0xF008EC33  	CALL        _Glcd_Write_Text_Adv, 0
;glcd.c,76 :: 		Glcd_Write_Text_Adv("Taller de Sist. Embebidos", 4, 52);
0x1DAA	0x0E9B      	MOVLW       ?lstr6_glcd
0x1DAC	0x6FDA      	MOVWF       FARG_Glcd_Write_Text_Adv_text, 1
0x1DAE	0x0E00      	MOVLW       hi_addr(?lstr6_glcd)
0x1DB0	0x6FDB      	MOVWF       FARG_Glcd_Write_Text_Adv_text+1, 1
0x1DB2	0x0E04      	MOVLW       4
0x1DB4	0x6FDC      	MOVWF       FARG_Glcd_Write_Text_Adv_x, 1
0x1DB6	0x0E00      	MOVLW       0
0x1DB8	0x6FDD      	MOVWF       FARG_Glcd_Write_Text_Adv_x+1, 1
0x1DBA	0x0E34      	MOVLW       52
0x1DBC	0x6FDE      	MOVWF       FARG_Glcd_Write_Text_Adv_y, 1
0x1DBE	0x0E00      	MOVLW       0
0x1DC0	0x6FDF      	MOVWF       FARG_Glcd_Write_Text_Adv_y+1, 1
0x1DC2	0xF008EC33  	CALL        _Glcd_Write_Text_Adv, 0
;glcd.c,77 :: 		Delay_ms(3000);
0x1DC6	0x0E1F      	MOVLW       31
0x1DC8	0x6E0B      	MOVWF       R11, 0
0x1DCA	0x0E71      	MOVLW       113
0x1DCC	0x6E0C      	MOVWF       R12, 0
0x1DCE	0x0E1E      	MOVLW       30
0x1DD0	0x6E0D      	MOVWF       R13, 0
L_first_CoverP0:
0x1DD2	0x2E0D      	DECFSZ      R13, 1, 0
0x1DD4	0xD7FE      	BRA         L_first_CoverP0
0x1DD6	0x2E0C      	DECFSZ      R12, 1, 0
0x1DD8	0xD7FC      	BRA         L_first_CoverP0
0x1DDA	0x2E0B      	DECFSZ      R11, 1, 0
0x1DDC	0xD7FA      	BRA         L_first_CoverP0
0x1DDE	0x0000      	NOP
;glcd.c,78 :: 		}
L_end_first_CoverP:
0x1DE0	0x0012      	RETURN      0
; end of _first_CoverP
_UART1_Read:
;__Lib_UART_c67.c,39 :: 		
;__Lib_UART_c67.c,42 :: 		
0x1DE2	0xF001CFAE  	MOVFF       RCREG, R1
;__Lib_UART_c67.c,43 :: 		
0x1DE6	0xA2AB      	BTFSS       RCSTA, 1 
0x1DE8	0xD002      	BRA         L_UART1_Read2
;__Lib_UART_c67.c,44 :: 		
0x1DEA	0x98AB      	BCF         RCSTA, 4 
;__Lib_UART_c67.c,45 :: 		
0x1DEC	0x88AB      	BSF         RCSTA, 4 
;__Lib_UART_c67.c,46 :: 		
L_UART1_Read2:
;__Lib_UART_c67.c,47 :: 		
0x1DEE	0xF000C001  	MOVFF       R1, R0
;__Lib_UART_c67.c,48 :: 		
L_end_UART1_Read:
0x1DF2	0x0012      	RETURN      0
; end of _UART1_Read
_serial_pack_data:
;glcd.c,742 :: 		void serial_pack_data() {  //Funcion para empaquetar datos a enviar
;glcd.c,744 :: 		serial_data[0] = flag;
0x1DF4	0xF10FC015  	MOVFF       _flag, _serial_data
;glcd.c,745 :: 		serial_data[1] = jugador[1].y + '0';
0x1DF8	0x0E30      	MOVLW       48
0x1DFA	0x0101      	MOVLB       1
0x1DFC	0x25AC      	ADDWF       _jugador+5, 0, 1
0x1DFE	0x6F10      	MOVWF       _serial_data+1, 1
;glcd.c,746 :: 		serial_data[2] = flagTime;
0x1E00	0xF111C016  	MOVFF       _flagTime, _serial_data+2
;glcd.c,747 :: 		serial_data[3] = turno_player + '0';
0x1E04	0x0E30      	MOVLW       48
0x1E06	0x0100      	MOVLB       0
0x1E08	0x25F4      	ADDWF       _turno_player, 0, 1
0x1E0A	0x0101      	MOVLB       1
0x1E0C	0x6F12      	MOVWF       _serial_data+3, 1
;glcd.c,748 :: 		serial_data[4] = jugador[0].y + '0';
0x1E0E	0x0E30      	MOVLW       48
0x1E10	0x25A8      	ADDWF       _jugador+1, 0, 1
0x1E12	0x6F13      	MOVWF       _serial_data+4, 1
;glcd.c,749 :: 		serial_data[5] = score[1] + '0';
0x1E14	0x0E30      	MOVLW       48
0x1E16	0x0100      	MOVLB       0
0x1E18	0x25F6      	ADDWF       _score+1, 0, 1
0x1E1A	0x0101      	MOVLB       1
0x1E1C	0x6F14      	MOVWF       _serial_data+5, 1
;glcd.c,750 :: 		serial_data[6] = score[0] + '0';
0x1E1E	0x0E30      	MOVLW       48
0x1E20	0x0100      	MOVLB       0
0x1E22	0x25F5      	ADDWF       _score, 0, 1
0x1E24	0x0101      	MOVLB       1
0x1E26	0x6F15      	MOVWF       _serial_data+6, 1
;glcd.c,751 :: 		serial_data[7] = flag_end;
0x1E28	0xF116C01F  	MOVFF       _flag_end, _serial_data+7
;glcd.c,752 :: 		serial_data[8] = 0;
0x1E2C	0x6B17      	CLRF        _serial_data+8, 1
;glcd.c,753 :: 		}
L_end_serial_pack_data:
0x1E2E	0x0012      	RETURN      0
; end of _serial_pack_data
_IA_player:
;glcd.c,581 :: 		void IA_player(){
;glcd.c,583 :: 		int menor_aux = 0;
0x1E30	0x0101      	MOVLB       1
0x1E32	0x6BD4      	CLRF        IA_player_menor_aux_L0, 1
0x1E34	0x6BD5      	CLRF        IA_player_menor_aux_L0+1, 1
0x1E36	0x0EE7      	MOVLW       231
0x1E38	0x6FD6      	MOVWF       IA_player_menor_L0, 1
0x1E3A	0x0E03      	MOVLW       3
0x1E3C	0x6FD7      	MOVWF       IA_player_menor_L0+1, 1
0x1E3E	0x0EE7      	MOVLW       231
0x1E40	0x6FD8      	MOVWF       IA_player_menor2_L0, 1
0x1E42	0x0E03      	MOVLW       3
0x1E44	0x6FD9      	MOVWF       IA_player_menor2_L0+1, 1
;glcd.c,587 :: 		if (count1 == 6){
0x1E46	0x0100      	MOVLB       0
0x1E48	0x51E7      	MOVF        _count1, 0, 1
0x1E4A	0x0A06      	XORLW       6
0x1E4C	0xA4D8      	BTFSS       STATUS, 2 
0x1E4E	0xF014EF59  	GOTO        L_IA_player255
;glcd.c,588 :: 		if(jugador[0].y + 4 > 56){
0x1E52	0x0E04      	MOVLW       4
0x1E54	0x0101      	MOVLB       1
0x1E56	0x25A8      	ADDWF       _jugador+1, 0, 1
0x1E58	0x6E01      	MOVWF       R1 
0x1E5A	0x6A02      	CLRF        R2 
0x1E5C	0x0E00      	MOVLW       0
0x1E5E	0x2202      	ADDWFC      R2, 1 
0x1E60	0x0E80      	MOVLW       128
0x1E62	0x6E00      	MOVWF       R0 
0x1E64	0x0E80      	MOVLW       128
0x1E66	0x1802      	XORWF       R2, 0 
0x1E68	0x5C00      	SUBWF       R0, 0 
0x1E6A	0xE102      	BNZ         L__IA_player568
0x1E6C	0x5001      	MOVF        R1, 0 
0x1E6E	0x0838      	SUBLW       56
L__IA_player568:
0x1E70	0xE265      	BC          L_IA_player256
;glcd.c,589 :: 		for( i = 0; i<4; i++){
0x1E72	0x6BD3      	CLRF        IA_player_i_L0, 1
L_IA_player257:
0x1E74	0x0E04      	MOVLW       4
0x1E76	0x5DD3      	SUBWF       IA_player_i_L0, 0, 1
0x1E78	0xE23C      	BC          L_IA_player258
;glcd.c,590 :: 		menor_aux = fabs( 44 - aste7[i].x );
0x1E7A	0x0E03      	MOVLW       3
0x1E7C	0x6E00      	MOVWF       R0 
0x1E7E	0x0E00      	MOVLW       0
0x1E80	0x6E01      	MOVWF       R1 
0x1E82	0xF004C1D3  	MOVFF       IA_player_i_L0, R4
0x1E86	0x0E00      	MOVLW       0
0x1E88	0x6E05      	MOVWF       R5 
0x1E8A	0xF001EC42  	CALL        _Mul_16X16_U, 0
0x1E8E	0x0EC4      	MOVLW       _aste7
0x1E90	0x2400      	ADDWF       R0, 0 
0x1E92	0x6ED9      	MOVWF       FSR2L 
0x1E94	0x0E01      	MOVLW       hi_addr(_aste7)
0x1E96	0x2001      	ADDWFC      R1, 0 
0x1E98	0x6EDA      	MOVWF       FSR2L+1 
0x1E9A	0xF000CFDE  	MOVFF       POSTINC2, R0
0x1E9E	0x5000      	MOVF        R0, 0 
0x1EA0	0x082C      	SUBLW       44
0x1EA2	0x6E00      	MOVWF       R0 
0x1EA4	0x6A01      	CLRF        R1 
0x1EA6	0x0E00      	MOVLW       0
0x1EA8	0xBE00      	BTFSC       R0, 7 
0x1EAA	0x0EFF      	MOVLW       255
0x1EAC	0x5A01      	SUBWFB      R1, 1 
0x1EAE	0xDE83      	RCALL       _int2double
0x1EB0	0xF1DAC000  	MOVFF       R0, FARG_fabs_d
0x1EB4	0xF1DBC001  	MOVFF       R1, FARG_fabs_d+1
0x1EB8	0xF1DCC002  	MOVFF       R2, FARG_fabs_d+2
0x1EBC	0xF1DDC003  	MOVFF       R3, FARG_fabs_d+3
0x1EC0	0xF007ECE0  	CALL        _fabs, 0
0x1EC4	0xF009EC1A  	CALL        _double2int, 0
0x1EC8	0xF1D4C000  	MOVFF       R0, IA_player_menor_aux_L0
0x1ECC	0xF1D5C001  	MOVFF       R1, IA_player_menor_aux_L0+1
;glcd.c,591 :: 		if(menor_aux < menor){
0x1ED0	0x0E80      	MOVLW       128
0x1ED2	0x1801      	XORWF       R1, 0 
0x1ED4	0x6E02      	MOVWF       R2 
0x1ED6	0x0E80      	MOVLW       128
0x1ED8	0x0101      	MOVLB       1
0x1EDA	0x19D7      	XORWF       IA_player_menor_L0+1, 0, 1
0x1EDC	0x5C02      	SUBWF       R2, 0 
0x1EDE	0xE102      	BNZ         L__IA_player569
0x1EE0	0x51D6      	MOVF        IA_player_menor_L0, 0, 1
0x1EE2	0x5C00      	SUBWF       R0, 0 
L__IA_player569:
0x1EE4	0xE204      	BC          L_IA_player260
;glcd.c,592 :: 		menor = menor_aux;
0x1EE6	0xF1D6C1D4  	MOVFF       IA_player_menor_aux_L0, IA_player_menor_L0
0x1EEA	0xF1D7C1D5  	MOVFF       IA_player_menor_aux_L0+1, IA_player_menor_L0+1
;glcd.c,593 :: 		}
L_IA_player260:
;glcd.c,589 :: 		for( i = 0; i<4; i++){
0x1EEE	0x2BD3      	INCF        IA_player_i_L0, 1, 1
;glcd.c,594 :: 		}
0x1EF0	0xD7C1      	BRA         L_IA_player257
L_IA_player258:
;glcd.c,596 :: 		if(menor >= 8 && (jugador[0].y + 4 > 56)){
0x1EF2	0x0E80      	MOVLW       128
0x1EF4	0x19D7      	XORWF       IA_player_menor_L0+1, 0, 1
0x1EF6	0x6E00      	MOVWF       R0 
0x1EF8	0x0E80      	MOVLW       128
0x1EFA	0x5C00      	SUBWF       R0, 0 
0x1EFC	0xE102      	BNZ         L__IA_player570
0x1EFE	0x0E08      	MOVLW       8
0x1F00	0x5DD6      	SUBWF       IA_player_menor_L0, 0, 1
L__IA_player570:
0x1F02	0xE31A      	BNC         L_IA_player263
0x1F04	0x0E04      	MOVLW       4
0x1F06	0x25A8      	ADDWF       _jugador+1, 0, 1
0x1F08	0x6E01      	MOVWF       R1 
0x1F0A	0x6A02      	CLRF        R2 
0x1F0C	0x0E00      	MOVLW       0
0x1F0E	0x2202      	ADDWFC      R2, 1 
0x1F10	0x0E80      	MOVLW       128
0x1F12	0x6E00      	MOVWF       R0 
0x1F14	0x0E80      	MOVLW       128
0x1F16	0x1802      	XORWF       R2, 0 
0x1F18	0x5C00      	SUBWF       R0, 0 
0x1F1A	0xE102      	BNZ         L__IA_player571
0x1F1C	0x5001      	MOVF        R1, 0 
0x1F1E	0x0838      	SUBLW       56
L__IA_player571:
0x1F20	0xE20B      	BC          L_IA_player263
L__IA_player504:
;glcd.c,597 :: 		move_players(1,0);
0x1F22	0x0E01      	MOVLW       1
0x1F24	0x6FDA      	MOVWF       FARG_move_players_direc, 1
0x1F26	0x6BDB      	CLRF        FARG_move_players_player, 1
0x1F28	0xF006EC8E  	CALL        _move_players, 0
;glcd.c,598 :: 		draw_player(jugador[0].x , jugador[0].y);
0x1F2C	0xF1FCC1A7  	MOVFF       _jugador, FARG_draw_player_x
0x1F30	0xF1FDC1A8  	MOVFF       _jugador+1, FARG_draw_player_y
0x1F34	0xF001ECC8  	CALL        _draw_player, 0
;glcd.c,599 :: 		}
L_IA_player263:
;glcd.c,600 :: 		}
0x1F38	0xF014EF59  	GOTO        L_IA_player264
L_IA_player256:
;glcd.c,601 :: 		else if( jugador[0].y < 56 && jugador[0].y + 4 > 48){
0x1F3C	0x0E38      	MOVLW       56
0x1F3E	0x0101      	MOVLB       1
0x1F40	0x5DA8      	SUBWF       _jugador+1, 0, 1
0x1F42	0xB0D8      	BTFSC       STATUS, 0 
0x1F44	0xD074      	BRA         L_IA_player267
0x1F46	0x0E04      	MOVLW       4
0x1F48	0x25A8      	ADDWF       _jugador+1, 0, 1
0x1F4A	0x6E01      	MOVWF       R1 
0x1F4C	0x6A02      	CLRF        R2 
0x1F4E	0x0E00      	MOVLW       0
0x1F50	0x2202      	ADDWFC      R2, 1 
0x1F52	0x0E80      	MOVLW       128
0x1F54	0x6E00      	MOVWF       R0 
0x1F56	0x0E80      	MOVLW       128
0x1F58	0x1802      	XORWF       R2, 0 
0x1F5A	0x5C00      	SUBWF       R0, 0 
0x1F5C	0xE102      	BNZ         L__IA_player572
0x1F5E	0x5001      	MOVF        R1, 0 
0x1F60	0x0830      	SUBLW       48
L__IA_player572:
0x1F62	0xE265      	BC          L_IA_player267
L__IA_player503:
;glcd.c,602 :: 		for( i = 0; i<4; i++){
0x1F64	0x6BD3      	CLRF        IA_player_i_L0, 1
L_IA_player268:
0x1F66	0x0E04      	MOVLW       4
0x1F68	0x5DD3      	SUBWF       IA_player_i_L0, 0, 1
0x1F6A	0xE23C      	BC          L_IA_player269
;glcd.c,603 :: 		menor_aux = fabs( 44 - asteD6[i].x );
0x1F6C	0x0E03      	MOVLW       3
0x1F6E	0x6E00      	MOVWF       R0 
0x1F70	0x0E00      	MOVLW       0
0x1F72	0x6E01      	MOVWF       R1 
0x1F74	0xF004C1D3  	MOVFF       IA_player_i_L0, R4
0x1F78	0x0E00      	MOVLW       0
0x1F7A	0x6E05      	MOVWF       R5 
0x1F7C	0xF001EC42  	CALL        _Mul_16X16_U, 0
0x1F80	0x0EB8      	MOVLW       _asteD6
0x1F82	0x2400      	ADDWF       R0, 0 
0x1F84	0x6ED9      	MOVWF       FSR2L 
0x1F86	0x0E01      	MOVLW       hi_addr(_asteD6)
0x1F88	0x2001      	ADDWFC      R1, 0 
0x1F8A	0x6EDA      	MOVWF       FSR2L+1 
0x1F8C	0xF000CFDE  	MOVFF       POSTINC2, R0
0x1F90	0x5000      	MOVF        R0, 0 
0x1F92	0x082C      	SUBLW       44
0x1F94	0x6E00      	MOVWF       R0 
0x1F96	0x6A01      	CLRF        R1 
0x1F98	0x0E00      	MOVLW       0
0x1F9A	0xBE00      	BTFSC       R0, 7 
0x1F9C	0x0EFF      	MOVLW       255
0x1F9E	0x5A01      	SUBWFB      R1, 1 
0x1FA0	0xDE0A      	RCALL       _int2double
0x1FA2	0xF1DAC000  	MOVFF       R0, FARG_fabs_d
0x1FA6	0xF1DBC001  	MOVFF       R1, FARG_fabs_d+1
0x1FAA	0xF1DCC002  	MOVFF       R2, FARG_fabs_d+2
0x1FAE	0xF1DDC003  	MOVFF       R3, FARG_fabs_d+3
0x1FB2	0xF007ECE0  	CALL        _fabs, 0
0x1FB6	0xF009EC1A  	CALL        _double2int, 0
0x1FBA	0xF1D4C000  	MOVFF       R0, IA_player_menor_aux_L0
0x1FBE	0xF1D5C001  	MOVFF       R1, IA_player_menor_aux_L0+1
;glcd.c,604 :: 		if(menor_aux < menor){
0x1FC2	0x0E80      	MOVLW       128
0x1FC4	0x1801      	XORWF       R1, 0 
0x1FC6	0x6E02      	MOVWF       R2 
0x1FC8	0x0E80      	MOVLW       128
0x1FCA	0x0101      	MOVLB       1
0x1FCC	0x19D7      	XORWF       IA_player_menor_L0+1, 0, 1
0x1FCE	0x5C02      	SUBWF       R2, 0 
0x1FD0	0xE102      	BNZ         L__IA_player573
0x1FD2	0x51D6      	MOVF        IA_player_menor_L0, 0, 1
0x1FD4	0x5C00      	SUBWF       R0, 0 
L__IA_player573:
0x1FD6	0xE204      	BC          L_IA_player271
;glcd.c,605 :: 		menor = menor_aux;
0x1FD8	0xF1D6C1D4  	MOVFF       IA_player_menor_aux_L0, IA_player_menor_L0
0x1FDC	0xF1D7C1D5  	MOVFF       IA_player_menor_aux_L0+1, IA_player_menor_L0+1
;glcd.c,606 :: 		}
L_IA_player271:
;glcd.c,602 :: 		for( i = 0; i<4; i++){
0x1FE0	0x2BD3      	INCF        IA_player_i_L0, 1, 1
;glcd.c,607 :: 		}
0x1FE2	0xD7C1      	BRA         L_IA_player268
L_IA_player269:
;glcd.c,609 :: 		if(menor >= 8 && (jugador[0].y + 4 > 48)){
0x1FE4	0x0E80      	MOVLW       128
0x1FE6	0x19D7      	XORWF       IA_player_menor_L0+1, 0, 1
0x1FE8	0x6E00      	MOVWF       R0 
0x1FEA	0x0E80      	MOVLW       128
0x1FEC	0x5C00      	SUBWF       R0, 0 
0x1FEE	0xE102      	BNZ         L__IA_player574
0x1FF0	0x0E08      	MOVLW       8
0x1FF2	0x5DD6      	SUBWF       IA_player_menor_L0, 0, 1
L__IA_player574:
0x1FF4	0xE31A      	BNC         L_IA_player274
0x1FF6	0x0E04      	MOVLW       4
0x1FF8	0x25A8      	ADDWF       _jugador+1, 0, 1
0x1FFA	0x6E01      	MOVWF       R1 
0x1FFC	0x6A02      	CLRF        R2 
0x1FFE	0x0E00      	MOVLW       0
0x2000	0x2202      	ADDWFC      R2, 1 
0x2002	0x0E80      	MOVLW       128
0x2004	0x6E00      	MOVWF       R0 
0x2006	0x0E80      	MOVLW       128
0x2008	0x1802      	XORWF       R2, 0 
0x200A	0x5C00      	SUBWF       R0, 0 
0x200C	0xE102      	BNZ         L__IA_player575
0x200E	0x5001      	MOVF        R1, 0 
0x2010	0x0830      	SUBLW       48
L__IA_player575:
0x2012	0xE20B      	BC          L_IA_player274
L__IA_player502:
;glcd.c,610 :: 		move_players(1,0);
0x2014	0x0E01      	MOVLW       1
0x2016	0x6FDA      	MOVWF       FARG_move_players_direc, 1
0x2018	0x6BDB      	CLRF        FARG_move_players_player, 1
0x201A	0xF006EC8E  	CALL        _move_players, 0
;glcd.c,611 :: 		draw_player(jugador[0].x , jugador[0].y);
0x201E	0xF1FCC1A7  	MOVFF       _jugador, FARG_draw_player_x
0x2022	0xF1FDC1A8  	MOVFF       _jugador+1, FARG_draw_player_y
0x2026	0xF001ECC8  	CALL        _draw_player, 0
;glcd.c,612 :: 		}
L_IA_player274:
;glcd.c,613 :: 		}
0x202A	0xF014EF59  	GOTO        L_IA_player275
L_IA_player267:
;glcd.c,614 :: 		else if( jugador[0].y < 48 && jugador[0].y + 4 > 40){
0x202E	0x0E30      	MOVLW       48
0x2030	0x0101      	MOVLB       1
0x2032	0x5DA8      	SUBWF       _jugador+1, 0, 1
0x2034	0xB0D8      	BTFSC       STATUS, 0 
0x2036	0xD0BD      	BRA         L_IA_player278
0x2038	0x0E04      	MOVLW       4
0x203A	0x25A8      	ADDWF       _jugador+1, 0, 1
0x203C	0x6E01      	MOVWF       R1 
0x203E	0x6A02      	CLRF        R2 
0x2040	0x0E00      	MOVLW       0
0x2042	0x2202      	ADDWFC      R2, 1 
0x2044	0x0E80      	MOVLW       128
0x2046	0x6E00      	MOVWF       R0 
0x2048	0x0E80      	MOVLW       128
0x204A	0x1802      	XORWF       R2, 0 
0x204C	0x5C00      	SUBWF       R0, 0 
0x204E	0xE102      	BNZ         L__IA_player576
0x2050	0x5001      	MOVF        R1, 0 
0x2052	0x0828      	SUBLW       40
L__IA_player576:
0x2054	0xB0D8      	BTFSC       STATUS, 0 
0x2056	0xD0AD      	BRA         L_IA_player278
L__IA_player501:
;glcd.c,615 :: 		for( i = 0; i<3; i++){
0x2058	0x6BD3      	CLRF        IA_player_i_L0, 1
L_IA_player279:
0x205A	0x0E03      	MOVLW       3
0x205C	0x5DD3      	SUBWF       IA_player_i_L0, 0, 1
0x205E	0xE23C      	BC          L_IA_player280
;glcd.c,616 :: 		menor_aux = fabs( 44 - asteD5[i].x );
0x2060	0x0E03      	MOVLW       3
0x2062	0x6E00      	MOVWF       R0 
0x2064	0x0E00      	MOVLW       0
0x2066	0x6E01      	MOVWF       R1 
0x2068	0xF004C1D3  	MOVFF       IA_player_i_L0, R4
0x206C	0x0E00      	MOVLW       0
0x206E	0x6E05      	MOVWF       R5 
0x2070	0xF001EC42  	CALL        _Mul_16X16_U, 0
0x2074	0x0EAF      	MOVLW       _asteD5
0x2076	0x2400      	ADDWF       R0, 0 
0x2078	0x6ED9      	MOVWF       FSR2L 
0x207A	0x0E01      	MOVLW       hi_addr(_asteD5)
0x207C	0x2001      	ADDWFC      R1, 0 
0x207E	0x6EDA      	MOVWF       FSR2L+1 
0x2080	0xF000CFDE  	MOVFF       POSTINC2, R0
0x2084	0x5000      	MOVF        R0, 0 
0x2086	0x082C      	SUBLW       44
0x2088	0x6E00      	MOVWF       R0 
0x208A	0x6A01      	CLRF        R1 
0x208C	0x0E00      	MOVLW       0
0x208E	0xBE00      	BTFSC       R0, 7 
0x2090	0x0EFF      	MOVLW       255
0x2092	0x5A01      	SUBWFB      R1, 1 
0x2094	0xDD90      	RCALL       _int2double
0x2096	0xF1DAC000  	MOVFF       R0, FARG_fabs_d
0x209A	0xF1DBC001  	MOVFF       R1, FARG_fabs_d+1
0x209E	0xF1DCC002  	MOVFF       R2, FARG_fabs_d+2
0x20A2	0xF1DDC003  	MOVFF       R3, FARG_fabs_d+3
0x20A6	0xF007ECE0  	CALL        _fabs, 0
0x20AA	0xF009EC1A  	CALL        _double2int, 0
0x20AE	0xF1D4C000  	MOVFF       R0, IA_player_menor_aux_L0
0x20B2	0xF1D5C001  	MOVFF       R1, IA_player_menor_aux_L0+1
;glcd.c,617 :: 		if(menor_aux < menor){
0x20B6	0x0E80      	MOVLW       128
0x20B8	0x1801      	XORWF       R1, 0 
0x20BA	0x6E02      	MOVWF       R2 
0x20BC	0x0E80      	MOVLW       128
0x20BE	0x0101      	MOVLB       1
0x20C0	0x19D7      	XORWF       IA_player_menor_L0+1, 0, 1
0x20C2	0x5C02      	SUBWF       R2, 0 
0x20C4	0xE102      	BNZ         L__IA_player577
0x20C6	0x51D6      	MOVF        IA_player_menor_L0, 0, 1
0x20C8	0x5C00      	SUBWF       R0, 0 
L__IA_player577:
0x20CA	0xE204      	BC          L_IA_player282
;glcd.c,618 :: 		menor = menor_aux;
0x20CC	0xF1D6C1D4  	MOVFF       IA_player_menor_aux_L0, IA_player_menor_L0
0x20D0	0xF1D7C1D5  	MOVFF       IA_player_menor_aux_L0+1, IA_player_menor_L0+1
;glcd.c,619 :: 		}
L_IA_player282:
;glcd.c,615 :: 		for( i = 0; i<3; i++){
0x20D4	0x2BD3      	INCF        IA_player_i_L0, 1, 1
;glcd.c,620 :: 		}
0x20D6	0xD7C1      	BRA         L_IA_player279
L_IA_player280:
;glcd.c,621 :: 		for( i = 0; i<4; i++){
0x20D8	0x6BD3      	CLRF        IA_player_i_L0, 1
L_IA_player283:
0x20DA	0x0E04      	MOVLW       4
0x20DC	0x5DD3      	SUBWF       IA_player_i_L0, 0, 1
0x20DE	0xE23C      	BC          L_IA_player284
;glcd.c,622 :: 		menor_aux = fabs( 44 - aste5[i].x );
0x20E0	0x0E03      	MOVLW       3
0x20E2	0x6E00      	MOVWF       R0 
0x20E4	0x0E00      	MOVLW       0
0x20E6	0x6E01      	MOVWF       R1 
0x20E8	0xF004C1D3  	MOVFF       IA_player_i_L0, R4
0x20EC	0x0E00      	MOVLW       0
0x20EE	0x6E05      	MOVWF       R5 
0x20F0	0xF001EC42  	CALL        _Mul_16X16_U, 0
0x20F4	0x0E9B      	MOVLW       _aste5
0x20F6	0x2400      	ADDWF       R0, 0 
0x20F8	0x6ED9      	MOVWF       FSR2L 
0x20FA	0x0E01      	MOVLW       hi_addr(_aste5)
0x20FC	0x2001      	ADDWFC      R1, 0 
0x20FE	0x6EDA      	MOVWF       FSR2L+1 
0x2100	0xF000CFDE  	MOVFF       POSTINC2, R0
0x2104	0x5000      	MOVF        R0, 0 
0x2106	0x082C      	SUBLW       44
0x2108	0x6E00      	MOVWF       R0 
0x210A	0x6A01      	CLRF        R1 
0x210C	0x0E00      	MOVLW       0
0x210E	0xBE00      	BTFSC       R0, 7 
0x2110	0x0EFF      	MOVLW       255
0x2112	0x5A01      	SUBWFB      R1, 1 
0x2114	0xDD50      	RCALL       _int2double
0x2116	0xF1DAC000  	MOVFF       R0, FARG_fabs_d
0x211A	0xF1DBC001  	MOVFF       R1, FARG_fabs_d+1
0x211E	0xF1DCC002  	MOVFF       R2, FARG_fabs_d+2
0x2122	0xF1DDC003  	MOVFF       R3, FARG_fabs_d+3
0x2126	0xF007ECE0  	CALL        _fabs, 0
0x212A	0xF009EC1A  	CALL        _double2int, 0
0x212E	0xF1D4C000  	MOVFF       R0, IA_player_menor_aux_L0
0x2132	0xF1D5C001  	MOVFF       R1, IA_player_menor_aux_L0+1
;glcd.c,623 :: 		if(menor_aux < menor2){
0x2136	0x0E80      	MOVLW       128
0x2138	0x1801      	XORWF       R1, 0 
0x213A	0x6E02      	MOVWF       R2 
0x213C	0x0E80      	MOVLW       128
0x213E	0x0101      	MOVLB       1
0x2140	0x19D9      	XORWF       IA_player_menor2_L0+1, 0, 1
0x2142	0x5C02      	SUBWF       R2, 0 
0x2144	0xE102      	BNZ         L__IA_player578
0x2146	0x51D8      	MOVF        IA_player_menor2_L0, 0, 1
0x2148	0x5C00      	SUBWF       R0, 0 
L__IA_player578:
0x214A	0xE204      	BC          L_IA_player286
;glcd.c,624 :: 		menor2 = menor_aux;
0x214C	0xF1D8C1D4  	MOVFF       IA_player_menor_aux_L0, IA_player_menor2_L0
0x2150	0xF1D9C1D5  	MOVFF       IA_player_menor_aux_L0+1, IA_player_menor2_L0+1
;glcd.c,625 :: 		}
L_IA_player286:
;glcd.c,621 :: 		for( i = 0; i<4; i++){
0x2154	0x2BD3      	INCF        IA_player_i_L0, 1, 1
;glcd.c,626 :: 		}
0x2156	0xD7C1      	BRA         L_IA_player283
L_IA_player284:
;glcd.c,628 :: 		if((menor >= 8 && menor2 >= 11) && (jugador[0].y + 4 > 40)){
0x2158	0x0E80      	MOVLW       128
0x215A	0x19D7      	XORWF       IA_player_menor_L0+1, 0, 1
0x215C	0x6E00      	MOVWF       R0 
0x215E	0x0E80      	MOVLW       128
0x2160	0x5C00      	SUBWF       R0, 0 
0x2162	0xE102      	BNZ         L__IA_player579
0x2164	0x0E08      	MOVLW       8
0x2166	0x5DD6      	SUBWF       IA_player_menor_L0, 0, 1
L__IA_player579:
0x2168	0xE323      	BNC         L_IA_player291
0x216A	0x0E80      	MOVLW       128
0x216C	0x19D9      	XORWF       IA_player_menor2_L0+1, 0, 1
0x216E	0x6E00      	MOVWF       R0 
0x2170	0x0E80      	MOVLW       128
0x2172	0x5C00      	SUBWF       R0, 0 
0x2174	0xE102      	BNZ         L__IA_player580
0x2176	0x0E0B      	MOVLW       11
0x2178	0x5DD8      	SUBWF       IA_player_menor2_L0, 0, 1
L__IA_player580:
0x217A	0xE31A      	BNC         L_IA_player291
L__IA_player500:
0x217C	0x0E04      	MOVLW       4
0x217E	0x25A8      	ADDWF       _jugador+1, 0, 1
0x2180	0x6E01      	MOVWF       R1 
0x2182	0x6A02      	CLRF        R2 
0x2184	0x0E00      	MOVLW       0
0x2186	0x2202      	ADDWFC      R2, 1 
0x2188	0x0E80      	MOVLW       128
0x218A	0x6E00      	MOVWF       R0 
0x218C	0x0E80      	MOVLW       128
0x218E	0x1802      	XORWF       R2, 0 
0x2190	0x5C00      	SUBWF       R0, 0 
0x2192	0xE102      	BNZ         L__IA_player581
0x2194	0x5001      	MOVF        R1, 0 
0x2196	0x0828      	SUBLW       40
L__IA_player581:
0x2198	0xE20B      	BC          L_IA_player291
L__IA_player499:
;glcd.c,629 :: 		move_players(1,0);
0x219A	0x0E01      	MOVLW       1
0x219C	0x6FDA      	MOVWF       FARG_move_players_direc, 1
0x219E	0x6BDB      	CLRF        FARG_move_players_player, 1
0x21A0	0xF006EC8E  	CALL        _move_players, 0
;glcd.c,630 :: 		draw_player(jugador[0].x , jugador[0].y);
0x21A4	0xF1FCC1A7  	MOVFF       _jugador, FARG_draw_player_x
0x21A8	0xF1FDC1A8  	MOVFF       _jugador+1, FARG_draw_player_y
0x21AC	0xF001ECC8  	CALL        _draw_player, 0
;glcd.c,631 :: 		}
L_IA_player291:
;glcd.c,632 :: 		}
0x21B0	0xD380      	BRA         L_IA_player292
L_IA_player278:
;glcd.c,633 :: 		else if( jugador[0].y < 40 && jugador[0].y + 4 > 35){
0x21B2	0x0E28      	MOVLW       40
0x21B4	0x0101      	MOVLB       1
0x21B6	0x5DA8      	SUBWF       _jugador+1, 0, 1
0x21B8	0xB0D8      	BTFSC       STATUS, 0 
0x21BA	0xD0B4      	BRA         L_IA_player295
0x21BC	0x0E04      	MOVLW       4
0x21BE	0x25A8      	ADDWF       _jugador+1, 0, 1
0x21C0	0x6E01      	MOVWF       R1 
0x21C2	0x6A02      	CLRF        R2 
0x21C4	0x0E00      	MOVLW       0
0x21C6	0x2202      	ADDWFC      R2, 1 
0x21C8	0x0E80      	MOVLW       128
0x21CA	0x6E00      	MOVWF       R0 
0x21CC	0x0E80      	MOVLW       128
0x21CE	0x1802      	XORWF       R2, 0 
0x21D0	0x5C00      	SUBWF       R0, 0 
0x21D2	0xE102      	BNZ         L__IA_player582
0x21D4	0x5001      	MOVF        R1, 0 
0x21D6	0x0823      	SUBLW       35
L__IA_player582:
0x21D8	0xB0D8      	BTFSC       STATUS, 0 
0x21DA	0xD0A4      	BRA         L_IA_player295
L__IA_player498:
;glcd.c,634 :: 		for( i = 0; i<4; i++){
0x21DC	0x6BD3      	CLRF        IA_player_i_L0, 1
L_IA_player296:
0x21DE	0x0E04      	MOVLW       4
0x21E0	0x5DD3      	SUBWF       IA_player_i_L0, 0, 1
0x21E2	0xE23C      	BC          L_IA_player297
;glcd.c,635 :: 		menor_aux = fabs( 44 - aste5[i].x );
0x21E4	0x0E03      	MOVLW       3
0x21E6	0x6E00      	MOVWF       R0 
0x21E8	0x0E00      	MOVLW       0
0x21EA	0x6E01      	MOVWF       R1 
0x21EC	0xF004C1D3  	MOVFF       IA_player_i_L0, R4
0x21F0	0x0E00      	MOVLW       0
0x21F2	0x6E05      	MOVWF       R5 
0x21F4	0xF001EC42  	CALL        _Mul_16X16_U, 0
0x21F8	0x0E9B      	MOVLW       _aste5
0x21FA	0x2400      	ADDWF       R0, 0 
0x21FC	0x6ED9      	MOVWF       FSR2L 
0x21FE	0x0E01      	MOVLW       hi_addr(_aste5)
0x2200	0x2001      	ADDWFC      R1, 0 
0x2202	0x6EDA      	MOVWF       FSR2L+1 
0x2204	0xF000CFDE  	MOVFF       POSTINC2, R0
0x2208	0x5000      	MOVF        R0, 0 
0x220A	0x082C      	SUBLW       44
0x220C	0x6E00      	MOVWF       R0 
0x220E	0x6A01      	CLRF        R1 
0x2210	0x0E00      	MOVLW       0
0x2212	0xBE00      	BTFSC       R0, 7 
0x2214	0x0EFF      	MOVLW       255
0x2216	0x5A01      	SUBWFB      R1, 1 
0x2218	0xDCCE      	RCALL       _int2double
0x221A	0xF1DAC000  	MOVFF       R0, FARG_fabs_d
0x221E	0xF1DBC001  	MOVFF       R1, FARG_fabs_d+1
0x2222	0xF1DCC002  	MOVFF       R2, FARG_fabs_d+2
0x2226	0xF1DDC003  	MOVFF       R3, FARG_fabs_d+3
0x222A	0xF007ECE0  	CALL        _fabs, 0
0x222E	0xF009EC1A  	CALL        _double2int, 0
0x2232	0xF1D4C000  	MOVFF       R0, IA_player_menor_aux_L0
0x2236	0xF1D5C001  	MOVFF       R1, IA_player_menor_aux_L0+1
;glcd.c,636 :: 		if(menor_aux < menor){
0x223A	0x0E80      	MOVLW       128
0x223C	0x1801      	XORWF       R1, 0 
0x223E	0x6E02      	MOVWF       R2 
0x2240	0x0E80      	MOVLW       128
0x2242	0x0101      	MOVLB       1
0x2244	0x19D7      	XORWF       IA_player_menor_L0+1, 0, 1
0x2246	0x5C02      	SUBWF       R2, 0 
0x2248	0xE102      	BNZ         L__IA_player583
0x224A	0x51D6      	MOVF        IA_player_menor_L0, 0, 1
0x224C	0x5C00      	SUBWF       R0, 0 
L__IA_player583:
0x224E	0xE204      	BC          L_IA_player299
;glcd.c,637 :: 		menor = menor_aux;
0x2250	0xF1D6C1D4  	MOVFF       IA_player_menor_aux_L0, IA_player_menor_L0
0x2254	0xF1D7C1D5  	MOVFF       IA_player_menor_aux_L0+1, IA_player_menor_L0+1
;glcd.c,638 :: 		}
L_IA_player299:
;glcd.c,634 :: 		for( i = 0; i<4; i++){
0x2258	0x2BD3      	INCF        IA_player_i_L0, 1, 1
;glcd.c,639 :: 		}
0x225A	0xD7C1      	BRA         L_IA_player296
L_IA_player297:
;glcd.c,640 :: 		for( i = 0; i<4; i++){
0x225C	0x6BD3      	CLRF        IA_player_i_L0, 1
L_IA_player300:
0x225E	0x0E04      	MOVLW       4
0x2260	0x5DD3      	SUBWF       IA_player_i_L0, 0, 1
0x2262	0xE23C      	BC          L_IA_player301
;glcd.c,641 :: 		menor_aux = fabs( 44 - asteD4[i].x );
0x2264	0x0E03      	MOVLW       3
0x2266	0x6E00      	MOVWF       R0 
0x2268	0x0E00      	MOVLW       0
0x226A	0x6E01      	MOVWF       R1 
0x226C	0xF004C1D3  	MOVFF       IA_player_i_L0, R4
0x2270	0x0E00      	MOVLW       0
0x2272	0x6E05      	MOVWF       R5 
0x2274	0xF001EC42  	CALL        _Mul_16X16_U, 0
0x2278	0x0E6B      	MOVLW       _asteD4
0x227A	0x2400      	ADDWF       R0, 0 
0x227C	0x6ED9      	MOVWF       FSR2L 
0x227E	0x0E01      	MOVLW       hi_addr(_asteD4)
0x2280	0x2001      	ADDWFC      R1, 0 
0x2282	0x6EDA      	MOVWF       FSR2L+1 
0x2284	0xF000CFDE  	MOVFF       POSTINC2, R0
0x2288	0x5000      	MOVF        R0, 0 
0x228A	0x082C      	SUBLW       44
0x228C	0x6E00      	MOVWF       R0 
0x228E	0x6A01      	CLRF        R1 
0x2290	0x0E00      	MOVLW       0
0x2292	0xBE00      	BTFSC       R0, 7 
0x2294	0x0EFF      	MOVLW       255
0x2296	0x5A01      	SUBWFB      R1, 1 
0x2298	0xDC8E      	RCALL       _int2double
0x229A	0xF1DAC000  	MOVFF       R0, FARG_fabs_d
0x229E	0xF1DBC001  	MOVFF       R1, FARG_fabs_d+1
0x22A2	0xF1DCC002  	MOVFF       R2, FARG_fabs_d+2
0x22A6	0xF1DDC003  	MOVFF       R3, FARG_fabs_d+3
0x22AA	0xF007ECE0  	CALL        _fabs, 0
0x22AE	0xF009EC1A  	CALL        _double2int, 0
0x22B2	0xF1D4C000  	MOVFF       R0, IA_player_menor_aux_L0
0x22B6	0xF1D5C001  	MOVFF       R1, IA_player_menor_aux_L0+1
;glcd.c,642 :: 		if(menor_aux < menor2){
0x22BA	0x0E80      	MOVLW       128
0x22BC	0x1801      	XORWF       R1, 0 
0x22BE	0x6E02      	MOVWF       R2 
0x22C0	0x0E80      	MOVLW       128
0x22C2	0x0101      	MOVLB       1
0x22C4	0x19D9      	XORWF       IA_player_menor2_L0+1, 0, 1
0x22C6	0x5C02      	SUBWF       R2, 0 
0x22C8	0xE102      	BNZ         L__IA_player584
0x22CA	0x51D8      	MOVF        IA_player_menor2_L0, 0, 1
0x22CC	0x5C00      	SUBWF       R0, 0 
L__IA_player584:
0x22CE	0xE204      	BC          L_IA_player303
;glcd.c,643 :: 		menor2 = menor_aux;
0x22D0	0xF1D8C1D4  	MOVFF       IA_player_menor_aux_L0, IA_player_menor2_L0
0x22D4	0xF1D9C1D5  	MOVFF       IA_player_menor_aux_L0+1, IA_player_menor2_L0+1
;glcd.c,644 :: 		}
L_IA_player303:
;glcd.c,640 :: 		for( i = 0; i<4; i++){
0x22D8	0x2BD3      	INCF        IA_player_i_L0, 1, 1
;glcd.c,645 :: 		}
0x22DA	0xD7C1      	BRA         L_IA_player300
L_IA_player301:
;glcd.c,647 :: 		if(menor >= 8&& (jugador[0].y + 4 > 35)){
0x22DC	0x0E80      	MOVLW       128
0x22DE	0x19D7      	XORWF       IA_player_menor_L0+1, 0, 1
0x22E0	0x6E00      	MOVWF       R0 
0x22E2	0x0E80      	MOVLW       128
0x22E4	0x5C00      	SUBWF       R0, 0 
0x22E6	0xE102      	BNZ         L__IA_player585
0x22E8	0x0E08      	MOVLW       8
0x22EA	0x5DD6      	SUBWF       IA_player_menor_L0, 0, 1
L__IA_player585:
0x22EC	0xE31A      	BNC         L_IA_player306
0x22EE	0x0E04      	MOVLW       4
0x22F0	0x25A8      	ADDWF       _jugador+1, 0, 1
0x22F2	0x6E01      	MOVWF       R1 
0x22F4	0x6A02      	CLRF        R2 
0x22F6	0x0E00      	MOVLW       0
0x22F8	0x2202      	ADDWFC      R2, 1 
0x22FA	0x0E80      	MOVLW       128
0x22FC	0x6E00      	MOVWF       R0 
0x22FE	0x0E80      	MOVLW       128
0x2300	0x1802      	XORWF       R2, 0 
0x2302	0x5C00      	SUBWF       R0, 0 
0x2304	0xE102      	BNZ         L__IA_player586
0x2306	0x5001      	MOVF        R1, 0 
0x2308	0x0823      	SUBLW       35
L__IA_player586:
0x230A	0xE20B      	BC          L_IA_player306
L__IA_player497:
;glcd.c,648 :: 		move_players(1,0);
0x230C	0x0E01      	MOVLW       1
0x230E	0x6FDA      	MOVWF       FARG_move_players_direc, 1
0x2310	0x6BDB      	CLRF        FARG_move_players_player, 1
0x2312	0xF006EC8E  	CALL        _move_players, 0
;glcd.c,649 :: 		draw_player(jugador[0].x , jugador[0].y);
0x2316	0xF1FCC1A7  	MOVFF       _jugador, FARG_draw_player_x
0x231A	0xF1FDC1A8  	MOVFF       _jugador+1, FARG_draw_player_y
0x231E	0xF001ECC8  	CALL        _draw_player, 0
;glcd.c,650 :: 		}
L_IA_player306:
;glcd.c,651 :: 		}
0x2322	0xD2C7      	BRA         L_IA_player307
L_IA_player295:
;glcd.c,652 :: 		else if( jugador[0].y < 35 && jugador[0].y + 4 > 28){
0x2324	0x0E23      	MOVLW       35
0x2326	0x0101      	MOVLB       1
0x2328	0x5DA8      	SUBWF       _jugador+1, 0, 1
0x232A	0xB0D8      	BTFSC       STATUS, 0 
0x232C	0xD073      	BRA         L_IA_player310
0x232E	0x0E04      	MOVLW       4
0x2330	0x25A8      	ADDWF       _jugador+1, 0, 1
0x2332	0x6E01      	MOVWF       R1 
0x2334	0x6A02      	CLRF        R2 
0x2336	0x0E00      	MOVLW       0
0x2338	0x2202      	ADDWFC      R2, 1 
0x233A	0x0E80      	MOVLW       128
0x233C	0x6E00      	MOVWF       R0 
0x233E	0x0E80      	MOVLW       128
0x2340	0x1802      	XORWF       R2, 0 
0x2342	0x5C00      	SUBWF       R0, 0 
0x2344	0xE102      	BNZ         L__IA_player587
0x2346	0x5001      	MOVF        R1, 0 
0x2348	0x081C      	SUBLW       28
L__IA_player587:
0x234A	0xE264      	BC          L_IA_player310
L__IA_player496:
;glcd.c,653 :: 		for( i = 0; i<4; i++){
0x234C	0x6BD3      	CLRF        IA_player_i_L0, 1
L_IA_player311:
0x234E	0x0E04      	MOVLW       4
0x2350	0x5DD3      	SUBWF       IA_player_i_L0, 0, 1
0x2352	0xE23C      	BC          L_IA_player312
;glcd.c,654 :: 		menor_aux = fabs( 44 - asteD4[i].x );
0x2354	0x0E03      	MOVLW       3
0x2356	0x6E00      	MOVWF       R0 
0x2358	0x0E00      	MOVLW       0
0x235A	0x6E01      	MOVWF       R1 
0x235C	0xF004C1D3  	MOVFF       IA_player_i_L0, R4
0x2360	0x0E00      	MOVLW       0
0x2362	0x6E05      	MOVWF       R5 
0x2364	0xF001EC42  	CALL        _Mul_16X16_U, 0
0x2368	0x0E6B      	MOVLW       _asteD4
0x236A	0x2400      	ADDWF       R0, 0 
0x236C	0x6ED9      	MOVWF       FSR2L 
0x236E	0x0E01      	MOVLW       hi_addr(_asteD4)
0x2370	0x2001      	ADDWFC      R1, 0 
0x2372	0x6EDA      	MOVWF       FSR2L+1 
0x2374	0xF000CFDE  	MOVFF       POSTINC2, R0
0x2378	0x5000      	MOVF        R0, 0 
0x237A	0x082C      	SUBLW       44
0x237C	0x6E00      	MOVWF       R0 
0x237E	0x6A01      	CLRF        R1 
0x2380	0x0E00      	MOVLW       0
0x2382	0xBE00      	BTFSC       R0, 7 
0x2384	0x0EFF      	MOVLW       255
0x2386	0x5A01      	SUBWFB      R1, 1 
0x2388	0xDC16      	RCALL       _int2double
0x238A	0xF1DAC000  	MOVFF       R0, FARG_fabs_d
0x238E	0xF1DBC001  	MOVFF       R1, FARG_fabs_d+1
0x2392	0xF1DCC002  	MOVFF       R2, FARG_fabs_d+2
0x2396	0xF1DDC003  	MOVFF       R3, FARG_fabs_d+3
0x239A	0xF007ECE0  	CALL        _fabs, 0
0x239E	0xF009EC1A  	CALL        _double2int, 0
0x23A2	0xF1D4C000  	MOVFF       R0, IA_player_menor_aux_L0
0x23A6	0xF1D5C001  	MOVFF       R1, IA_player_menor_aux_L0+1
;glcd.c,655 :: 		if(menor_aux < menor){
0x23AA	0x0E80      	MOVLW       128
0x23AC	0x1801      	XORWF       R1, 0 
0x23AE	0x6E02      	MOVWF       R2 
0x23B0	0x0E80      	MOVLW       128
0x23B2	0x0101      	MOVLB       1
0x23B4	0x19D7      	XORWF       IA_player_menor_L0+1, 0, 1
0x23B6	0x5C02      	SUBWF       R2, 0 
0x23B8	0xE102      	BNZ         L__IA_player588
0x23BA	0x51D6      	MOVF        IA_player_menor_L0, 0, 1
0x23BC	0x5C00      	SUBWF       R0, 0 
L__IA_player588:
0x23BE	0xE204      	BC          L_IA_player314
;glcd.c,656 :: 		menor = menor_aux;
0x23C0	0xF1D6C1D4  	MOVFF       IA_player_menor_aux_L0, IA_player_menor_L0
0x23C4	0xF1D7C1D5  	MOVFF       IA_player_menor_aux_L0+1, IA_player_menor_L0+1
;glcd.c,657 :: 		}
L_IA_player314:
;glcd.c,653 :: 		for( i = 0; i<4; i++){
0x23C8	0x2BD3      	INCF        IA_player_i_L0, 1, 1
;glcd.c,658 :: 		}
0x23CA	0xD7C1      	BRA         L_IA_player311
L_IA_player312:
;glcd.c,660 :: 		if(menor >= 8 && (jugador[0].y + 4 > 28)){
0x23CC	0x0E80      	MOVLW       128
0x23CE	0x19D7      	XORWF       IA_player_menor_L0+1, 0, 1
0x23D0	0x6E00      	MOVWF       R0 
0x23D2	0x0E80      	MOVLW       128
0x23D4	0x5C00      	SUBWF       R0, 0 
0x23D6	0xE102      	BNZ         L__IA_player589
0x23D8	0x0E08      	MOVLW       8
0x23DA	0x5DD6      	SUBWF       IA_player_menor_L0, 0, 1
L__IA_player589:
0x23DC	0xE31A      	BNC         L_IA_player317
0x23DE	0x0E04      	MOVLW       4
0x23E0	0x25A8      	ADDWF       _jugador+1, 0, 1
0x23E2	0x6E01      	MOVWF       R1 
0x23E4	0x6A02      	CLRF        R2 
0x23E6	0x0E00      	MOVLW       0
0x23E8	0x2202      	ADDWFC      R2, 1 
0x23EA	0x0E80      	MOVLW       128
0x23EC	0x6E00      	MOVWF       R0 
0x23EE	0x0E80      	MOVLW       128
0x23F0	0x1802      	XORWF       R2, 0 
0x23F2	0x5C00      	SUBWF       R0, 0 
0x23F4	0xE102      	BNZ         L__IA_player590
0x23F6	0x5001      	MOVF        R1, 0 
0x23F8	0x081C      	SUBLW       28
L__IA_player590:
0x23FA	0xE20B      	BC          L_IA_player317
L__IA_player495:
;glcd.c,661 :: 		move_players(1,0);
0x23FC	0x0E01      	MOVLW       1
0x23FE	0x6FDA      	MOVWF       FARG_move_players_direc, 1
0x2400	0x6BDB      	CLRF        FARG_move_players_player, 1
0x2402	0xF006EC8E  	CALL        _move_players, 0
;glcd.c,662 :: 		draw_player(jugador[0].x , jugador[0].y);
0x2406	0xF1FCC1A7  	MOVFF       _jugador, FARG_draw_player_x
0x240A	0xF1FDC1A8  	MOVFF       _jugador+1, FARG_draw_player_y
0x240E	0xF001ECC8  	CALL        _draw_player, 0
;glcd.c,663 :: 		}
L_IA_player317:
;glcd.c,664 :: 		}
0x2412	0xD24F      	BRA         L_IA_player318
L_IA_player310:
;glcd.c,665 :: 		else if( jugador[0].y < 28 && jugador[0].y + 4 > 21){
0x2414	0x0E1C      	MOVLW       28
0x2416	0x0101      	MOVLB       1
0x2418	0x5DA8      	SUBWF       _jugador+1, 0, 1
0x241A	0xB0D8      	BTFSC       STATUS, 0 
0x241C	0xD074      	BRA         L_IA_player321
0x241E	0x0E04      	MOVLW       4
0x2420	0x25A8      	ADDWF       _jugador+1, 0, 1
0x2422	0x6E01      	MOVWF       R1 
0x2424	0x6A02      	CLRF        R2 
0x2426	0x0E00      	MOVLW       0
0x2428	0x2202      	ADDWFC      R2, 1 
0x242A	0x0E80      	MOVLW       128
0x242C	0x6E00      	MOVWF       R0 
0x242E	0x0E80      	MOVLW       128
0x2430	0x1802      	XORWF       R2, 0 
0x2432	0x5C00      	SUBWF       R0, 0 
0x2434	0xE102      	BNZ         L__IA_player591
0x2436	0x5001      	MOVF        R1, 0 
0x2438	0x0815      	SUBLW       21
L__IA_player591:
0x243A	0xE265      	BC          L_IA_player321
L__IA_player494:
;glcd.c,666 :: 		for( i = 0; i<4; i++){
0x243C	0x6BD3      	CLRF        IA_player_i_L0, 1
L_IA_player322:
0x243E	0x0E04      	MOVLW       4
0x2440	0x5DD3      	SUBWF       IA_player_i_L0, 0, 1
0x2442	0xE23D      	BC          L_IA_player323
;glcd.c,667 :: 		menor_aux = fabs( 44 - aste3[i].x );
0x2444	0x0E03      	MOVLW       3
0x2446	0x6E00      	MOVWF       R0 
0x2448	0x0E00      	MOVLW       0
0x244A	0x6E01      	MOVWF       R1 
0x244C	0xF004C1D3  	MOVFF       IA_player_i_L0, R4
0x2450	0x0E00      	MOVLW       0
0x2452	0x6E05      	MOVWF       R5 
0x2454	0xF001EC42  	CALL        _Mul_16X16_U, 0
0x2458	0x0E5F      	MOVLW       _aste3
0x245A	0x2400      	ADDWF       R0, 0 
0x245C	0x6ED9      	MOVWF       FSR2L 
0x245E	0x0E01      	MOVLW       hi_addr(_aste3)
0x2460	0x2001      	ADDWFC      R1, 0 
0x2462	0x6EDA      	MOVWF       FSR2L+1 
0x2464	0xF000CFDE  	MOVFF       POSTINC2, R0
0x2468	0x5000      	MOVF        R0, 0 
0x246A	0x082C      	SUBLW       44
0x246C	0x6E00      	MOVWF       R0 
0x246E	0x6A01      	CLRF        R1 
0x2470	0x0E00      	MOVLW       0
0x2472	0xBE00      	BTFSC       R0, 7 
0x2474	0x0EFF      	MOVLW       255
0x2476	0x5A01      	SUBWFB      R1, 1 
0x2478	0xF00DECDB  	CALL        _int2double, 0
0x247C	0xF1DAC000  	MOVFF       R0, FARG_fabs_d
0x2480	0xF1DBC001  	MOVFF       R1, FARG_fabs_d+1
0x2484	0xF1DCC002  	MOVFF       R2, FARG_fabs_d+2
0x2488	0xF1DDC003  	MOVFF       R3, FARG_fabs_d+3
0x248C	0xF007ECE0  	CALL        _fabs, 0
0x2490	0xF009EC1A  	CALL        _double2int, 0
0x2494	0xF1D4C000  	MOVFF       R0, IA_player_menor_aux_L0
0x2498	0xF1D5C001  	MOVFF       R1, IA_player_menor_aux_L0+1
;glcd.c,668 :: 		if(menor_aux < menor){
0x249C	0x0E80      	MOVLW       128
0x249E	0x1801      	XORWF       R1, 0 
0x24A0	0x6E02      	MOVWF       R2 
0x24A2	0x0E80      	MOVLW       128
0x24A4	0x0101      	MOVLB       1
0x24A6	0x19D7      	XORWF       IA_player_menor_L0+1, 0, 1
0x24A8	0x5C02      	SUBWF       R2, 0 
0x24AA	0xE102      	BNZ         L__IA_player592
0x24AC	0x51D6      	MOVF        IA_player_menor_L0, 0, 1
0x24AE	0x5C00      	SUBWF       R0, 0 
L__IA_player592:
0x24B0	0xE204      	BC          L_IA_player325
;glcd.c,669 :: 		menor = menor_aux;
0x24B2	0xF1D6C1D4  	MOVFF       IA_player_menor_aux_L0, IA_player_menor_L0
0x24B6	0xF1D7C1D5  	MOVFF       IA_player_menor_aux_L0+1, IA_player_menor_L0+1
;glcd.c,670 :: 		}
L_IA_player325:
;glcd.c,666 :: 		for( i = 0; i<4; i++){
0x24BA	0x2BD3      	INCF        IA_player_i_L0, 1, 1
;glcd.c,671 :: 		}
0x24BC	0xD7C0      	BRA         L_IA_player322
L_IA_player323:
;glcd.c,673 :: 		if(menor >= 8 && (jugador[0].y + 4 > 21)){
0x24BE	0x0E80      	MOVLW       128
0x24C0	0x19D7      	XORWF       IA_player_menor_L0+1, 0, 1
0x24C2	0x6E00      	MOVWF       R0 
0x24C4	0x0E80      	MOVLW       128
0x24C6	0x5C00      	SUBWF       R0, 0 
0x24C8	0xE102      	BNZ         L__IA_player593
0x24CA	0x0E08      	MOVLW       8
0x24CC	0x5DD6      	SUBWF       IA_player_menor_L0, 0, 1
L__IA_player593:
0x24CE	0xE31A      	BNC         L_IA_player328
0x24D0	0x0E04      	MOVLW       4
0x24D2	0x25A8      	ADDWF       _jugador+1, 0, 1
0x24D4	0x6E01      	MOVWF       R1 
0x24D6	0x6A02      	CLRF        R2 
0x24D8	0x0E00      	MOVLW       0
0x24DA	0x2202      	ADDWFC      R2, 1 
0x24DC	0x0E80      	MOVLW       128
0x24DE	0x6E00      	MOVWF       R0 
0x24E0	0x0E80      	MOVLW       128
0x24E2	0x1802      	XORWF       R2, 0 
0x24E4	0x5C00      	SUBWF       R0, 0 
0x24E6	0xE102      	BNZ         L__IA_player594
0x24E8	0x5001      	MOVF        R1, 0 
0x24EA	0x0815      	SUBLW       21
L__IA_player594:
0x24EC	0xE20B      	BC          L_IA_player328
L__IA_player493:
;glcd.c,674 :: 		move_players(1,0);
0x24EE	0x0E01      	MOVLW       1
0x24F0	0x6FDA      	MOVWF       FARG_move_players_direc, 1
0x24F2	0x6BDB      	CLRF        FARG_move_players_player, 1
0x24F4	0xF006EC8E  	CALL        _move_players, 0
;glcd.c,675 :: 		draw_player(jugador[0].x , jugador[0].y);
0x24F8	0xF1FCC1A7  	MOVFF       _jugador, FARG_draw_player_x
0x24FC	0xF1FDC1A8  	MOVFF       _jugador+1, FARG_draw_player_y
0x2500	0xF001ECC8  	CALL        _draw_player, 0
;glcd.c,676 :: 		}
L_IA_player328:
;glcd.c,677 :: 		}
0x2504	0xD1D6      	BRA         L_IA_player329
L_IA_player321:
;glcd.c,678 :: 		else if( jugador[0].y < 21 && jugador[0].y + 4 > 16){
0x2506	0x0E15      	MOVLW       21
0x2508	0x0101      	MOVLB       1
0x250A	0x5DA8      	SUBWF       _jugador+1, 0, 1
0x250C	0xB0D8      	BTFSC       STATUS, 0 
0x250E	0xD074      	BRA         L_IA_player332
0x2510	0x0E04      	MOVLW       4
0x2512	0x25A8      	ADDWF       _jugador+1, 0, 1
0x2514	0x6E01      	MOVWF       R1 
0x2516	0x6A02      	CLRF        R2 
0x2518	0x0E00      	MOVLW       0
0x251A	0x2202      	ADDWFC      R2, 1 
0x251C	0x0E80      	MOVLW       128
0x251E	0x6E00      	MOVWF       R0 
0x2520	0x0E80      	MOVLW       128
0x2522	0x1802      	XORWF       R2, 0 
0x2524	0x5C00      	SUBWF       R0, 0 
0x2526	0xE102      	BNZ         L__IA_player595
0x2528	0x5001      	MOVF        R1, 0 
0x252A	0x0810      	SUBLW       16
L__IA_player595:
0x252C	0xE265      	BC          L_IA_player332
L__IA_player492:
;glcd.c,679 :: 		for( i = 0; i<4; i++){
0x252E	0x6BD3      	CLRF        IA_player_i_L0, 1
L_IA_player333:
0x2530	0x0E04      	MOVLW       4
0x2532	0x5DD3      	SUBWF       IA_player_i_L0, 0, 1
0x2534	0xE23D      	BC          L_IA_player334
;glcd.c,680 :: 		menor_aux = fabs( 44 - asteD2[i].x );
0x2536	0x0E03      	MOVLW       3
0x2538	0x6E00      	MOVWF       R0 
0x253A	0x0E00      	MOVLW       0
0x253C	0x6E01      	MOVWF       R1 
0x253E	0xF004C1D3  	MOVFF       IA_player_i_L0, R4
0x2542	0x0E00      	MOVLW       0
0x2544	0x6E05      	MOVWF       R5 
0x2546	0xF001EC42  	CALL        _Mul_16X16_U, 0
0x254A	0x0E56      	MOVLW       _asteD2
0x254C	0x2400      	ADDWF       R0, 0 
0x254E	0x6ED9      	MOVWF       FSR2L 
0x2550	0x0E01      	MOVLW       hi_addr(_asteD2)
0x2552	0x2001      	ADDWFC      R1, 0 
0x2554	0x6EDA      	MOVWF       FSR2L+1 
0x2556	0xF000CFDE  	MOVFF       POSTINC2, R0
0x255A	0x5000      	MOVF        R0, 0 
0x255C	0x082C      	SUBLW       44
0x255E	0x6E00      	MOVWF       R0 
0x2560	0x6A01      	CLRF        R1 
0x2562	0x0E00      	MOVLW       0
0x2564	0xBE00      	BTFSC       R0, 7 
0x2566	0x0EFF      	MOVLW       255
0x2568	0x5A01      	SUBWFB      R1, 1 
0x256A	0xF00DECDB  	CALL        _int2double, 0
0x256E	0xF1DAC000  	MOVFF       R0, FARG_fabs_d
0x2572	0xF1DBC001  	MOVFF       R1, FARG_fabs_d+1
0x2576	0xF1DCC002  	MOVFF       R2, FARG_fabs_d+2
0x257A	0xF1DDC003  	MOVFF       R3, FARG_fabs_d+3
0x257E	0xF007ECE0  	CALL        _fabs, 0
0x2582	0xF009EC1A  	CALL        _double2int, 0
0x2586	0xF1D4C000  	MOVFF       R0, IA_player_menor_aux_L0
0x258A	0xF1D5C001  	MOVFF       R1, IA_player_menor_aux_L0+1
;glcd.c,681 :: 		if(menor_aux < menor){
0x258E	0x0E80      	MOVLW       128
0x2590	0x1801      	XORWF       R1, 0 
0x2592	0x6E02      	MOVWF       R2 
0x2594	0x0E80      	MOVLW       128
0x2596	0x0101      	MOVLB       1
0x2598	0x19D7      	XORWF       IA_player_menor_L0+1, 0, 1
0x259A	0x5C02      	SUBWF       R2, 0 
0x259C	0xE102      	BNZ         L__IA_player596
0x259E	0x51D6      	MOVF        IA_player_menor_L0, 0, 1
0x25A0	0x5C00      	SUBWF       R0, 0 
L__IA_player596:
0x25A2	0xE204      	BC          L_IA_player336
;glcd.c,682 :: 		menor = menor_aux;
0x25A4	0xF1D6C1D4  	MOVFF       IA_player_menor_aux_L0, IA_player_menor_L0
0x25A8	0xF1D7C1D5  	MOVFF       IA_player_menor_aux_L0+1, IA_player_menor_L0+1
;glcd.c,683 :: 		}
L_IA_player336:
;glcd.c,679 :: 		for( i = 0; i<4; i++){
0x25AC	0x2BD3      	INCF        IA_player_i_L0, 1, 1
;glcd.c,684 :: 		}
0x25AE	0xD7C0      	BRA         L_IA_player333
L_IA_player334:
;glcd.c,686 :: 		if(menor >= 8 && (jugador[0].y + 4 > 16)){
0x25B0	0x0E80      	MOVLW       128
0x25B2	0x19D7      	XORWF       IA_player_menor_L0+1, 0, 1
0x25B4	0x6E00      	MOVWF       R0 
0x25B6	0x0E80      	MOVLW       128
0x25B8	0x5C00      	SUBWF       R0, 0 
0x25BA	0xE102      	BNZ         L__IA_player597
0x25BC	0x0E08      	MOVLW       8
0x25BE	0x5DD6      	SUBWF       IA_player_menor_L0, 0, 1
L__IA_player597:
0x25C0	0xE31A      	BNC         L_IA_player339
0x25C2	0x0E04      	MOVLW       4
0x25C4	0x25A8      	ADDWF       _jugador+1, 0, 1
0x25C6	0x6E01      	MOVWF       R1 
0x25C8	0x6A02      	CLRF        R2 
0x25CA	0x0E00      	MOVLW       0
0x25CC	0x2202      	ADDWFC      R2, 1 
0x25CE	0x0E80      	MOVLW       128
0x25D0	0x6E00      	MOVWF       R0 
0x25D2	0x0E80      	MOVLW       128
0x25D4	0x1802      	XORWF       R2, 0 
0x25D6	0x5C00      	SUBWF       R0, 0 
0x25D8	0xE102      	BNZ         L__IA_player598
0x25DA	0x5001      	MOVF        R1, 0 
0x25DC	0x0810      	SUBLW       16
L__IA_player598:
0x25DE	0xE20B      	BC          L_IA_player339
L__IA_player491:
;glcd.c,687 :: 		move_players(1,0);
0x25E0	0x0E01      	MOVLW       1
0x25E2	0x6FDA      	MOVWF       FARG_move_players_direc, 1
0x25E4	0x6BDB      	CLRF        FARG_move_players_player, 1
0x25E6	0xF006EC8E  	CALL        _move_players, 0
;glcd.c,688 :: 		draw_player(jugador[0].x , jugador[0].y);
0x25EA	0xF1FCC1A7  	MOVFF       _jugador, FARG_draw_player_x
0x25EE	0xF1FDC1A8  	MOVFF       _jugador+1, FARG_draw_player_y
0x25F2	0xF001ECC8  	CALL        _draw_player, 0
;glcd.c,689 :: 		}
L_IA_player339:
;glcd.c,690 :: 		}
0x25F6	0xD15D      	BRA         L_IA_player340
L_IA_player332:
;glcd.c,691 :: 		else if( jugador[0].y < 16 && jugador[0].y + 4 > 12){
0x25F8	0x0E10      	MOVLW       16
0x25FA	0x0101      	MOVLB       1
0x25FC	0x5DA8      	SUBWF       _jugador+1, 0, 1
0x25FE	0xB0D8      	BTFSC       STATUS, 0 
0x2600	0xD074      	BRA         L_IA_player343
0x2602	0x0E04      	MOVLW       4
0x2604	0x25A8      	ADDWF       _jugador+1, 0, 1
0x2606	0x6E01      	MOVWF       R1 
0x2608	0x6A02      	CLRF        R2 
0x260A	0x0E00      	MOVLW       0
0x260C	0x2202      	ADDWFC      R2, 1 
0x260E	0x0E80      	MOVLW       128
0x2610	0x6E00      	MOVWF       R0 
0x2612	0x0E80      	MOVLW       128
0x2614	0x1802      	XORWF       R2, 0 
0x2616	0x5C00      	SUBWF       R0, 0 
0x2618	0xE102      	BNZ         L__IA_player599
0x261A	0x5001      	MOVF        R1, 0 
0x261C	0x080C      	SUBLW       12
L__IA_player599:
0x261E	0xE265      	BC          L_IA_player343
L__IA_player490:
;glcd.c,692 :: 		for( i = 0; i<4; i++){
0x2620	0x6BD3      	CLRF        IA_player_i_L0, 1
L_IA_player344:
0x2622	0x0E04      	MOVLW       4
0x2624	0x5DD3      	SUBWF       IA_player_i_L0, 0, 1
0x2626	0xE23D      	BC          L_IA_player345
;glcd.c,693 :: 		menor_aux = fabs( 44 - aste2[i].x );
0x2628	0x0E03      	MOVLW       3
0x262A	0x6E00      	MOVWF       R0 
0x262C	0x0E00      	MOVLW       0
0x262E	0x6E01      	MOVWF       R1 
0x2630	0xF004C1D3  	MOVFF       IA_player_i_L0, R4
0x2634	0x0E00      	MOVLW       0
0x2636	0x6E05      	MOVWF       R5 
0x2638	0xF001EC42  	CALL        _Mul_16X16_U, 0
0x263C	0x0E8F      	MOVLW       _aste2
0x263E	0x2400      	ADDWF       R0, 0 
0x2640	0x6ED9      	MOVWF       FSR2L 
0x2642	0x0E01      	MOVLW       hi_addr(_aste2)
0x2644	0x2001      	ADDWFC      R1, 0 
0x2646	0x6EDA      	MOVWF       FSR2L+1 
0x2648	0xF000CFDE  	MOVFF       POSTINC2, R0
0x264C	0x5000      	MOVF        R0, 0 
0x264E	0x082C      	SUBLW       44
0x2650	0x6E00      	MOVWF       R0 
0x2652	0x6A01      	CLRF        R1 
0x2654	0x0E00      	MOVLW       0
0x2656	0xBE00      	BTFSC       R0, 7 
0x2658	0x0EFF      	MOVLW       255
0x265A	0x5A01      	SUBWFB      R1, 1 
0x265C	0xF00DECDB  	CALL        _int2double, 0
0x2660	0xF1DAC000  	MOVFF       R0, FARG_fabs_d
0x2664	0xF1DBC001  	MOVFF       R1, FARG_fabs_d+1
0x2668	0xF1DCC002  	MOVFF       R2, FARG_fabs_d+2
0x266C	0xF1DDC003  	MOVFF       R3, FARG_fabs_d+3
0x2670	0xF007ECE0  	CALL        _fabs, 0
0x2674	0xF009EC1A  	CALL        _double2int, 0
0x2678	0xF1D4C000  	MOVFF       R0, IA_player_menor_aux_L0
0x267C	0xF1D5C001  	MOVFF       R1, IA_player_menor_aux_L0+1
;glcd.c,694 :: 		if(menor_aux < menor){
0x2680	0x0E80      	MOVLW       128
0x2682	0x1801      	XORWF       R1, 0 
0x2684	0x6E02      	MOVWF       R2 
0x2686	0x0E80      	MOVLW       128
0x2688	0x0101      	MOVLB       1
0x268A	0x19D7      	XORWF       IA_player_menor_L0+1, 0, 1
0x268C	0x5C02      	SUBWF       R2, 0 
0x268E	0xE102      	BNZ         L__IA_player600
0x2690	0x51D6      	MOVF        IA_player_menor_L0, 0, 1
0x2692	0x5C00      	SUBWF       R0, 0 
L__IA_player600:
0x2694	0xE204      	BC          L_IA_player347
;glcd.c,695 :: 		menor = menor_aux;
0x2696	0xF1D6C1D4  	MOVFF       IA_player_menor_aux_L0, IA_player_menor_L0
0x269A	0xF1D7C1D5  	MOVFF       IA_player_menor_aux_L0+1, IA_player_menor_L0+1
;glcd.c,696 :: 		}
L_IA_player347:
;glcd.c,692 :: 		for( i = 0; i<4; i++){
0x269E	0x2BD3      	INCF        IA_player_i_L0, 1, 1
;glcd.c,697 :: 		}
0x26A0	0xD7C0      	BRA         L_IA_player344
L_IA_player345:
;glcd.c,699 :: 		if(menor >= 8 && (jugador[0].y + 4 > 12)){
0x26A2	0x0E80      	MOVLW       128
0x26A4	0x19D7      	XORWF       IA_player_menor_L0+1, 0, 1
0x26A6	0x6E00      	MOVWF       R0 
0x26A8	0x0E80      	MOVLW       128
0x26AA	0x5C00      	SUBWF       R0, 0 
0x26AC	0xE102      	BNZ         L__IA_player601
0x26AE	0x0E08      	MOVLW       8
0x26B0	0x5DD6      	SUBWF       IA_player_menor_L0, 0, 1
L__IA_player601:
0x26B2	0xE31A      	BNC         L_IA_player350
0x26B4	0x0E04      	MOVLW       4
0x26B6	0x25A8      	ADDWF       _jugador+1, 0, 1
0x26B8	0x6E01      	MOVWF       R1 
0x26BA	0x6A02      	CLRF        R2 
0x26BC	0x0E00      	MOVLW       0
0x26BE	0x2202      	ADDWFC      R2, 1 
0x26C0	0x0E80      	MOVLW       128
0x26C2	0x6E00      	MOVWF       R0 
0x26C4	0x0E80      	MOVLW       128
0x26C6	0x1802      	XORWF       R2, 0 
0x26C8	0x5C00      	SUBWF       R0, 0 
0x26CA	0xE102      	BNZ         L__IA_player602
0x26CC	0x5001      	MOVF        R1, 0 
0x26CE	0x080C      	SUBLW       12
L__IA_player602:
0x26D0	0xE20B      	BC          L_IA_player350
L__IA_player489:
;glcd.c,700 :: 		move_players(1,0);
0x26D2	0x0E01      	MOVLW       1
0x26D4	0x6FDA      	MOVWF       FARG_move_players_direc, 1
0x26D6	0x6BDB      	CLRF        FARG_move_players_player, 1
0x26D8	0xF006EC8E  	CALL        _move_players, 0
;glcd.c,701 :: 		draw_player(jugador[0].x , jugador[0].y);
0x26DC	0xF1FCC1A7  	MOVFF       _jugador, FARG_draw_player_x
0x26E0	0xF1FDC1A8  	MOVFF       _jugador+1, FARG_draw_player_y
0x26E4	0xF001ECC8  	CALL        _draw_player, 0
;glcd.c,702 :: 		}
L_IA_player350:
;glcd.c,703 :: 		}
0x26E8	0xD0E4      	BRA         L_IA_player351
L_IA_player343:
;glcd.c,704 :: 		else if( jugador[0].y < 12 && jugador[0].y + 4 > 6){
0x26EA	0x0E0C      	MOVLW       12
0x26EC	0x0101      	MOVLB       1
0x26EE	0x5DA8      	SUBWF       _jugador+1, 0, 1
0x26F0	0xB0D8      	BTFSC       STATUS, 0 
0x26F2	0xD074      	BRA         L_IA_player354
0x26F4	0x0E04      	MOVLW       4
0x26F6	0x25A8      	ADDWF       _jugador+1, 0, 1
0x26F8	0x6E01      	MOVWF       R1 
0x26FA	0x6A02      	CLRF        R2 
0x26FC	0x0E00      	MOVLW       0
0x26FE	0x2202      	ADDWFC      R2, 1 
0x2700	0x0E80      	MOVLW       128
0x2702	0x6E00      	MOVWF       R0 
0x2704	0x0E80      	MOVLW       128
0x2706	0x1802      	XORWF       R2, 0 
0x2708	0x5C00      	SUBWF       R0, 0 
0x270A	0xE102      	BNZ         L__IA_player603
0x270C	0x5001      	MOVF        R1, 0 
0x270E	0x0806      	SUBLW       6
L__IA_player603:
0x2710	0xE265      	BC          L_IA_player354
L__IA_player488:
;glcd.c,705 :: 		for( i = 0; i<4; i++){
0x2712	0x6BD3      	CLRF        IA_player_i_L0, 1
L_IA_player355:
0x2714	0x0E04      	MOVLW       4
0x2716	0x5DD3      	SUBWF       IA_player_i_L0, 0, 1
0x2718	0xE23D      	BC          L_IA_player356
;glcd.c,706 :: 		menor_aux = fabs( 44 - asteD1[i].x );
0x271A	0x0E03      	MOVLW       3
0x271C	0x6E00      	MOVWF       R0 
0x271E	0x0E00      	MOVLW       0
0x2720	0x6E01      	MOVWF       R1 
0x2722	0xF004C1D3  	MOVFF       IA_player_i_L0, R4
0x2726	0x0E00      	MOVLW       0
0x2728	0x6E05      	MOVWF       R5 
0x272A	0xF001EC42  	CALL        _Mul_16X16_U, 0
0x272E	0x0E83      	MOVLW       _asteD1
0x2730	0x2400      	ADDWF       R0, 0 
0x2732	0x6ED9      	MOVWF       FSR2L 
0x2734	0x0E01      	MOVLW       hi_addr(_asteD1)
0x2736	0x2001      	ADDWFC      R1, 0 
0x2738	0x6EDA      	MOVWF       FSR2L+1 
0x273A	0xF000CFDE  	MOVFF       POSTINC2, R0
0x273E	0x5000      	MOVF        R0, 0 
0x2740	0x082C      	SUBLW       44
0x2742	0x6E00      	MOVWF       R0 
0x2744	0x6A01      	CLRF        R1 
0x2746	0x0E00      	MOVLW       0
0x2748	0xBE00      	BTFSC       R0, 7 
0x274A	0x0EFF      	MOVLW       255
0x274C	0x5A01      	SUBWFB      R1, 1 
0x274E	0xF00DECDB  	CALL        _int2double, 0
0x2752	0xF1DAC000  	MOVFF       R0, FARG_fabs_d
0x2756	0xF1DBC001  	MOVFF       R1, FARG_fabs_d+1
0x275A	0xF1DCC002  	MOVFF       R2, FARG_fabs_d+2
0x275E	0xF1DDC003  	MOVFF       R3, FARG_fabs_d+3
0x2762	0xF007ECE0  	CALL        _fabs, 0
0x2766	0xF009EC1A  	CALL        _double2int, 0
0x276A	0xF1D4C000  	MOVFF       R0, IA_player_menor_aux_L0
0x276E	0xF1D5C001  	MOVFF       R1, IA_player_menor_aux_L0+1
;glcd.c,707 :: 		if(menor_aux < menor){
0x2772	0x0E80      	MOVLW       128
0x2774	0x1801      	XORWF       R1, 0 
0x2776	0x6E02      	MOVWF       R2 
0x2778	0x0E80      	MOVLW       128
0x277A	0x0101      	MOVLB       1
0x277C	0x19D7      	XORWF       IA_player_menor_L0+1, 0, 1
0x277E	0x5C02      	SUBWF       R2, 0 
0x2780	0xE102      	BNZ         L__IA_player604
0x2782	0x51D6      	MOVF        IA_player_menor_L0, 0, 1
0x2784	0x5C00      	SUBWF       R0, 0 
L__IA_player604:
0x2786	0xE204      	BC          L_IA_player358
;glcd.c,708 :: 		menor = menor_aux;
0x2788	0xF1D6C1D4  	MOVFF       IA_player_menor_aux_L0, IA_player_menor_L0
0x278C	0xF1D7C1D5  	MOVFF       IA_player_menor_aux_L0+1, IA_player_menor_L0+1
;glcd.c,709 :: 		}
L_IA_player358:
;glcd.c,705 :: 		for( i = 0; i<4; i++){
0x2790	0x2BD3      	INCF        IA_player_i_L0, 1, 1
;glcd.c,710 :: 		}
0x2792	0xD7C0      	BRA         L_IA_player355
L_IA_player356:
;glcd.c,712 :: 		if(menor >= 8 && (jugador[0].y + 4 > 6)){
0x2794	0x0E80      	MOVLW       128
0x2796	0x19D7      	XORWF       IA_player_menor_L0+1, 0, 1
0x2798	0x6E00      	MOVWF       R0 
0x279A	0x0E80      	MOVLW       128
0x279C	0x5C00      	SUBWF       R0, 0 
0x279E	0xE102      	BNZ         L__IA_player605
0x27A0	0x0E08      	MOVLW       8
0x27A2	0x5DD6      	SUBWF       IA_player_menor_L0, 0, 1
L__IA_player605:
0x27A4	0xE31A      	BNC         L_IA_player361
0x27A6	0x0E04      	MOVLW       4
0x27A8	0x25A8      	ADDWF       _jugador+1, 0, 1
0x27AA	0x6E01      	MOVWF       R1 
0x27AC	0x6A02      	CLRF        R2 
0x27AE	0x0E00      	MOVLW       0
0x27B0	0x2202      	ADDWFC      R2, 1 
0x27B2	0x0E80      	MOVLW       128
0x27B4	0x6E00      	MOVWF       R0 
0x27B6	0x0E80      	MOVLW       128
0x27B8	0x1802      	XORWF       R2, 0 
0x27BA	0x5C00      	SUBWF       R0, 0 
0x27BC	0xE102      	BNZ         L__IA_player606
0x27BE	0x5001      	MOVF        R1, 0 
0x27C0	0x0806      	SUBLW       6
L__IA_player606:
0x27C2	0xE20B      	BC          L_IA_player361
L__IA_player487:
;glcd.c,713 :: 		move_players(1,0);
0x27C4	0x0E01      	MOVLW       1
0x27C6	0x6FDA      	MOVWF       FARG_move_players_direc, 1
0x27C8	0x6BDB      	CLRF        FARG_move_players_player, 1
0x27CA	0xF006EC8E  	CALL        _move_players, 0
;glcd.c,714 :: 		draw_player(jugador[0].x , jugador[0].y);
0x27CE	0xF1FCC1A7  	MOVFF       _jugador, FARG_draw_player_x
0x27D2	0xF1FDC1A8  	MOVFF       _jugador+1, FARG_draw_player_y
0x27D6	0xF001ECC8  	CALL        _draw_player, 0
;glcd.c,715 :: 		}
L_IA_player361:
;glcd.c,716 :: 		}
0x27DA	0xD06B      	BRA         L_IA_player362
L_IA_player354:
;glcd.c,718 :: 		else if (jugador[0].y < 6 && jugador[0].y > 0){
0x27DC	0x0E06      	MOVLW       6
0x27DE	0x0101      	MOVLB       1
0x27E0	0x5DA8      	SUBWF       _jugador+1, 0, 1
0x27E2	0xE267      	BC          L_IA_player365
0x27E4	0x51A8      	MOVF        _jugador+1, 0, 1
0x27E6	0x0800      	SUBLW       0
0x27E8	0xE264      	BC          L_IA_player365
L__IA_player486:
;glcd.c,719 :: 		for( i = 0; i<4; i++){
0x27EA	0x6BD3      	CLRF        IA_player_i_L0, 1
L_IA_player366:
0x27EC	0x0E04      	MOVLW       4
0x27EE	0x5DD3      	SUBWF       IA_player_i_L0, 0, 1
0x27F0	0xE23D      	BC          L_IA_player367
;glcd.c,720 :: 		menor_aux = fabs( 44 - aste1[i].x );
0x27F2	0x0E03      	MOVLW       3
0x27F4	0x6E00      	MOVWF       R0 
0x27F6	0x0E00      	MOVLW       0
0x27F8	0x6E01      	MOVWF       R1 
0x27FA	0xF004C1D3  	MOVFF       IA_player_i_L0, R4
0x27FE	0x0E00      	MOVLW       0
0x2800	0x6E05      	MOVWF       R5 
0x2802	0xF001EC42  	CALL        _Mul_16X16_U, 0
0x2806	0x0E77      	MOVLW       _aste1
0x2808	0x2400      	ADDWF       R0, 0 
0x280A	0x6ED9      	MOVWF       FSR2L 
0x280C	0x0E01      	MOVLW       hi_addr(_aste1)
0x280E	0x2001      	ADDWFC      R1, 0 
0x2810	0x6EDA      	MOVWF       FSR2L+1 
0x2812	0xF000CFDE  	MOVFF       POSTINC2, R0
0x2816	0x5000      	MOVF        R0, 0 
0x2818	0x082C      	SUBLW       44
0x281A	0x6E00      	MOVWF       R0 
0x281C	0x6A01      	CLRF        R1 
0x281E	0x0E00      	MOVLW       0
0x2820	0xBE00      	BTFSC       R0, 7 
0x2822	0x0EFF      	MOVLW       255
0x2824	0x5A01      	SUBWFB      R1, 1 
0x2826	0xF00DECDB  	CALL        _int2double, 0
0x282A	0xF1DAC000  	MOVFF       R0, FARG_fabs_d
0x282E	0xF1DBC001  	MOVFF       R1, FARG_fabs_d+1
0x2832	0xF1DCC002  	MOVFF       R2, FARG_fabs_d+2
0x2836	0xF1DDC003  	MOVFF       R3, FARG_fabs_d+3
0x283A	0xF007ECE0  	CALL        _fabs, 0
0x283E	0xF009EC1A  	CALL        _double2int, 0
0x2842	0xF1D4C000  	MOVFF       R0, IA_player_menor_aux_L0
0x2846	0xF1D5C001  	MOVFF       R1, IA_player_menor_aux_L0+1
;glcd.c,721 :: 		if(menor_aux < menor){
0x284A	0x0E80      	MOVLW       128
0x284C	0x1801      	XORWF       R1, 0 
0x284E	0x6E02      	MOVWF       R2 
0x2850	0x0E80      	MOVLW       128
0x2852	0x0101      	MOVLB       1
0x2854	0x19D7      	XORWF       IA_player_menor_L0+1, 0, 1
0x2856	0x5C02      	SUBWF       R2, 0 
0x2858	0xE102      	BNZ         L__IA_player607
0x285A	0x51D6      	MOVF        IA_player_menor_L0, 0, 1
0x285C	0x5C00      	SUBWF       R0, 0 
L__IA_player607:
0x285E	0xE204      	BC          L_IA_player369
;glcd.c,722 :: 		menor = menor_aux;
0x2860	0xF1D6C1D4  	MOVFF       IA_player_menor_aux_L0, IA_player_menor_L0
0x2864	0xF1D7C1D5  	MOVFF       IA_player_menor_aux_L0+1, IA_player_menor_L0+1
;glcd.c,723 :: 		}
L_IA_player369:
;glcd.c,719 :: 		for( i = 0; i<4; i++){
0x2868	0x2BD3      	INCF        IA_player_i_L0, 1, 1
;glcd.c,724 :: 		}
0x286A	0xD7C0      	BRA         L_IA_player366
L_IA_player367:
;glcd.c,725 :: 		if(menor >= 8 && (jugador[0].y + 4 > 1)){
0x286C	0x0E80      	MOVLW       128
0x286E	0x19D7      	XORWF       IA_player_menor_L0+1, 0, 1
0x2870	0x6E00      	MOVWF       R0 
0x2872	0x0E80      	MOVLW       128
0x2874	0x5C00      	SUBWF       R0, 0 
0x2876	0xE102      	BNZ         L__IA_player608
0x2878	0x0E08      	MOVLW       8
0x287A	0x5DD6      	SUBWF       IA_player_menor_L0, 0, 1
L__IA_player608:
0x287C	0xE31A      	BNC         L_IA_player372
0x287E	0x0E04      	MOVLW       4
0x2880	0x25A8      	ADDWF       _jugador+1, 0, 1
0x2882	0x6E01      	MOVWF       R1 
0x2884	0x6A02      	CLRF        R2 
0x2886	0x0E00      	MOVLW       0
0x2888	0x2202      	ADDWFC      R2, 1 
0x288A	0x0E80      	MOVLW       128
0x288C	0x6E00      	MOVWF       R0 
0x288E	0x0E80      	MOVLW       128
0x2890	0x1802      	XORWF       R2, 0 
0x2892	0x5C00      	SUBWF       R0, 0 
0x2894	0xE102      	BNZ         L__IA_player609
0x2896	0x5001      	MOVF        R1, 0 
0x2898	0x0801      	SUBLW       1
L__IA_player609:
0x289A	0xE20B      	BC          L_IA_player372
L__IA_player485:
;glcd.c,726 :: 		move_players(1,0);
0x289C	0x0E01      	MOVLW       1
0x289E	0x6FDA      	MOVWF       FARG_move_players_direc, 1
0x28A0	0x6BDB      	CLRF        FARG_move_players_player, 1
0x28A2	0xF006EC8E  	CALL        _move_players, 0
;glcd.c,727 :: 		draw_player(jugador[0].x , jugador[0].y);
0x28A6	0xF1FCC1A7  	MOVFF       _jugador, FARG_draw_player_x
0x28AA	0xF1FDC1A8  	MOVFF       _jugador+1, FARG_draw_player_y
0x28AE	0xF001ECC8  	CALL        _draw_player, 0
;glcd.c,728 :: 		}
L_IA_player372:
;glcd.c,730 :: 		}
L_IA_player365:
L_IA_player362:
L_IA_player351:
L_IA_player340:
L_IA_player329:
L_IA_player318:
L_IA_player307:
L_IA_player292:
L_IA_player275:
L_IA_player264:
;glcd.c,733 :: 		}
L_IA_player255:
;glcd.c,735 :: 		}
L_end_IA_player:
0x28B2	0x0012      	RETURN      0
; end of _IA_player
_UART1_Data_Ready:
;__Lib_UART_c67.c,34 :: 		
;__Lib_UART_c67.c,35 :: 		
0x28B4	0x0E00      	MOVLW       0
0x28B6	0xBA9E      	BTFSC       PIR1, 5 
0x28B8	0x0E01      	MOVLW       1
0x28BA	0x6E00      	MOVWF       R0 
;__Lib_UART_c67.c,36 :: 		
L_end_UART1_Data_Ready:
0x28BC	0x0012      	RETURN      0
; end of _UART1_Data_Ready
_draw_score_1:
;glcd.c,287 :: 		void draw_score_1(){
;glcd.c,288 :: 		if(score[1] == 0){
0x28BE	0x0100      	MOVLB       0
0x28C0	0x51F6      	MOVF        _score+1, 0, 1
0x28C2	0x0A00      	XORLW       0
0x28C4	0xE10D      	BNZ         L_draw_score_151
;glcd.c,289 :: 		Glcd_Write_Text("0", 98 , 7, 1);
0x28C6	0x0EF7      	MOVLW       ?lstr7_glcd
0x28C8	0x0101      	MOVLB       1
0x28CA	0x6FDA      	MOVWF       FARG_Glcd_Write_Text_text, 1
0x28CC	0x0E00      	MOVLW       hi_addr(?lstr7_glcd)
0x28CE	0x6FDB      	MOVWF       FARG_Glcd_Write_Text_text+1, 1
0x28D0	0x0E62      	MOVLW       98
0x28D2	0x6FDC      	MOVWF       FARG_Glcd_Write_Text_x_pos, 1
0x28D4	0x0E07      	MOVLW       7
0x28D6	0x6FDD      	MOVWF       FARG_Glcd_Write_Text_page_num, 1
0x28D8	0x0E01      	MOVLW       1
0x28DA	0x6FDE      	MOVWF       FARG_Glcd_Write_Text_color, 1
0x28DC	0xF008ECE8  	CALL        _Glcd_Write_Text, 0
;glcd.c,290 :: 		}
L_draw_score_151:
;glcd.c,291 :: 		if(score[1] == 1){
0x28E0	0x0100      	MOVLB       0
0x28E2	0x51F6      	MOVF        _score+1, 0, 1
0x28E4	0x0A01      	XORLW       1
0x28E6	0xE10D      	BNZ         L_draw_score_152
;glcd.c,292 :: 		Glcd_Write_Text("1", 98 , 7, 1);
0x28E8	0x0EFB      	MOVLW       ?lstr8_glcd
0x28EA	0x0101      	MOVLB       1
0x28EC	0x6FDA      	MOVWF       FARG_Glcd_Write_Text_text, 1
0x28EE	0x0E00      	MOVLW       hi_addr(?lstr8_glcd)
0x28F0	0x6FDB      	MOVWF       FARG_Glcd_Write_Text_text+1, 1
0x28F2	0x0E62      	MOVLW       98
0x28F4	0x6FDC      	MOVWF       FARG_Glcd_Write_Text_x_pos, 1
0x28F6	0x0E07      	MOVLW       7
0x28F8	0x6FDD      	MOVWF       FARG_Glcd_Write_Text_page_num, 1
0x28FA	0x0E01      	MOVLW       1
0x28FC	0x6FDE      	MOVWF       FARG_Glcd_Write_Text_color, 1
0x28FE	0xF008ECE8  	CALL        _Glcd_Write_Text, 0
;glcd.c,293 :: 		}
L_draw_score_152:
;glcd.c,294 :: 		if(score[1] == 2){
0x2902	0x0100      	MOVLB       0
0x2904	0x51F6      	MOVF        _score+1, 0, 1
0x2906	0x0A02      	XORLW       2
0x2908	0xE10D      	BNZ         L_draw_score_153
;glcd.c,295 :: 		Glcd_Write_Text("2", 98 , 7, 1);
0x290A	0x0EF9      	MOVLW       ?lstr9_glcd
0x290C	0x0101      	MOVLB       1
0x290E	0x6FDA      	MOVWF       FARG_Glcd_Write_Text_text, 1
0x2910	0x0E00      	MOVLW       hi_addr(?lstr9_glcd)
0x2912	0x6FDB      	MOVWF       FARG_Glcd_Write_Text_text+1, 1
0x2914	0x0E62      	MOVLW       98
0x2916	0x6FDC      	MOVWF       FARG_Glcd_Write_Text_x_pos, 1
0x2918	0x0E07      	MOVLW       7
0x291A	0x6FDD      	MOVWF       FARG_Glcd_Write_Text_page_num, 1
0x291C	0x0E01      	MOVLW       1
0x291E	0x6FDE      	MOVWF       FARG_Glcd_Write_Text_color, 1
0x2920	0xF008ECE8  	CALL        _Glcd_Write_Text, 0
;glcd.c,296 :: 		}
L_draw_score_153:
;glcd.c,297 :: 		if(score[1] == 3){
0x2924	0x0100      	MOVLB       0
0x2926	0x51F6      	MOVF        _score+1, 0, 1
0x2928	0x0A03      	XORLW       3
0x292A	0xE10D      	BNZ         L_draw_score_154
;glcd.c,298 :: 		Glcd_Write_Text("3", 98 , 7, 1);
0x292C	0x0E0D      	MOVLW       ?lstr10_glcd
0x292E	0x0101      	MOVLB       1
0x2930	0x6FDA      	MOVWF       FARG_Glcd_Write_Text_text, 1
0x2932	0x0E01      	MOVLW       hi_addr(?lstr10_glcd)
0x2934	0x6FDB      	MOVWF       FARG_Glcd_Write_Text_text+1, 1
0x2936	0x0E62      	MOVLW       98
0x2938	0x6FDC      	MOVWF       FARG_Glcd_Write_Text_x_pos, 1
0x293A	0x0E07      	MOVLW       7
0x293C	0x6FDD      	MOVWF       FARG_Glcd_Write_Text_page_num, 1
0x293E	0x0E01      	MOVLW       1
0x2940	0x6FDE      	MOVWF       FARG_Glcd_Write_Text_color, 1
0x2942	0xF008ECE8  	CALL        _Glcd_Write_Text, 0
;glcd.c,299 :: 		}
L_draw_score_154:
;glcd.c,300 :: 		if(score[1] == 4){
0x2946	0x0100      	MOVLB       0
0x2948	0x51F6      	MOVF        _score+1, 0, 1
0x294A	0x0A04      	XORLW       4
0x294C	0xE10D      	BNZ         L_draw_score_155
;glcd.c,301 :: 		Glcd_Write_Text("4", 98 , 7, 1);
0x294E	0x0E0A      	MOVLW       ?lstr11_glcd
0x2950	0x0101      	MOVLB       1
0x2952	0x6FDA      	MOVWF       FARG_Glcd_Write_Text_text, 1
0x2954	0x0E01      	MOVLW       hi_addr(?lstr11_glcd)
0x2956	0x6FDB      	MOVWF       FARG_Glcd_Write_Text_text+1, 1
0x2958	0x0E62      	MOVLW       98
0x295A	0x6FDC      	MOVWF       FARG_Glcd_Write_Text_x_pos, 1
0x295C	0x0E07      	MOVLW       7
0x295E	0x6FDD      	MOVWF       FARG_Glcd_Write_Text_page_num, 1
0x2960	0x0E01      	MOVLW       1
0x2962	0x6FDE      	MOVWF       FARG_Glcd_Write_Text_color, 1
0x2964	0xF008ECE8  	CALL        _Glcd_Write_Text, 0
;glcd.c,302 :: 		}
L_draw_score_155:
;glcd.c,303 :: 		if(score[1] == 5){
0x2968	0x0100      	MOVLB       0
0x296A	0x51F6      	MOVF        _score+1, 0, 1
0x296C	0x0A05      	XORLW       5
0x296E	0xE10D      	BNZ         L_draw_score_156
;glcd.c,304 :: 		Glcd_Write_Text("5", 98 , 7, 1);
0x2970	0x0E78      	MOVLW       ?lstr12_glcd
0x2972	0x0101      	MOVLB       1
0x2974	0x6FDA      	MOVWF       FARG_Glcd_Write_Text_text, 1
0x2976	0x0E00      	MOVLW       hi_addr(?lstr12_glcd)
0x2978	0x6FDB      	MOVWF       FARG_Glcd_Write_Text_text+1, 1
0x297A	0x0E62      	MOVLW       98
0x297C	0x6FDC      	MOVWF       FARG_Glcd_Write_Text_x_pos, 1
0x297E	0x0E07      	MOVLW       7
0x2980	0x6FDD      	MOVWF       FARG_Glcd_Write_Text_page_num, 1
0x2982	0x0E01      	MOVLW       1
0x2984	0x6FDE      	MOVWF       FARG_Glcd_Write_Text_color, 1
0x2986	0xF008ECE8  	CALL        _Glcd_Write_Text, 0
;glcd.c,305 :: 		}
L_draw_score_156:
;glcd.c,306 :: 		if(score[1] == 6){
0x298A	0x0100      	MOVLB       0
0x298C	0x51F6      	MOVF        _score+1, 0, 1
0x298E	0x0A06      	XORLW       6
0x2990	0xE10D      	BNZ         L_draw_score_157
;glcd.c,307 :: 		Glcd_Write_Text("6", 98 , 7, 1);
0x2992	0x0E7A      	MOVLW       ?lstr13_glcd
0x2994	0x0101      	MOVLB       1
0x2996	0x6FDA      	MOVWF       FARG_Glcd_Write_Text_text, 1
0x2998	0x0E00      	MOVLW       hi_addr(?lstr13_glcd)
0x299A	0x6FDB      	MOVWF       FARG_Glcd_Write_Text_text+1, 1
0x299C	0x0E62      	MOVLW       98
0x299E	0x6FDC      	MOVWF       FARG_Glcd_Write_Text_x_pos, 1
0x29A0	0x0E07      	MOVLW       7
0x29A2	0x6FDD      	MOVWF       FARG_Glcd_Write_Text_page_num, 1
0x29A4	0x0E01      	MOVLW       1
0x29A6	0x6FDE      	MOVWF       FARG_Glcd_Write_Text_color, 1
0x29A8	0xF008ECE8  	CALL        _Glcd_Write_Text, 0
;glcd.c,308 :: 		}
L_draw_score_157:
;glcd.c,309 :: 		if(score[1] == 7){
0x29AC	0x0100      	MOVLB       0
0x29AE	0x51F6      	MOVF        _score+1, 0, 1
0x29B0	0x0A07      	XORLW       7
0x29B2	0xE10D      	BNZ         L_draw_score_158
;glcd.c,310 :: 		Glcd_Write_Text("7", 98 , 7, 1);
0x29B4	0x0E7C      	MOVLW       ?lstr14_glcd
0x29B6	0x0101      	MOVLB       1
0x29B8	0x6FDA      	MOVWF       FARG_Glcd_Write_Text_text, 1
0x29BA	0x0E00      	MOVLW       hi_addr(?lstr14_glcd)
0x29BC	0x6FDB      	MOVWF       FARG_Glcd_Write_Text_text+1, 1
0x29BE	0x0E62      	MOVLW       98
0x29C0	0x6FDC      	MOVWF       FARG_Glcd_Write_Text_x_pos, 1
0x29C2	0x0E07      	MOVLW       7
0x29C4	0x6FDD      	MOVWF       FARG_Glcd_Write_Text_page_num, 1
0x29C6	0x0E01      	MOVLW       1
0x29C8	0x6FDE      	MOVWF       FARG_Glcd_Write_Text_color, 1
0x29CA	0xF008ECE8  	CALL        _Glcd_Write_Text, 0
;glcd.c,311 :: 		}
L_draw_score_158:
;glcd.c,312 :: 		if(score[1] == 8){
0x29CE	0x0100      	MOVLB       0
0x29D0	0x51F6      	MOVF        _score+1, 0, 1
0x29D2	0x0A08      	XORLW       8
0x29D4	0xE10D      	BNZ         L_draw_score_159
;glcd.c,313 :: 		Glcd_Write_Text("8", 98 , 7, 1);
0x29D6	0x0E76      	MOVLW       ?lstr15_glcd
0x29D8	0x0101      	MOVLB       1
0x29DA	0x6FDA      	MOVWF       FARG_Glcd_Write_Text_text, 1
0x29DC	0x0E00      	MOVLW       hi_addr(?lstr15_glcd)
0x29DE	0x6FDB      	MOVWF       FARG_Glcd_Write_Text_text+1, 1
0x29E0	0x0E62      	MOVLW       98
0x29E2	0x6FDC      	MOVWF       FARG_Glcd_Write_Text_x_pos, 1
0x29E4	0x0E07      	MOVLW       7
0x29E6	0x6FDD      	MOVWF       FARG_Glcd_Write_Text_page_num, 1
0x29E8	0x0E01      	MOVLW       1
0x29EA	0x6FDE      	MOVWF       FARG_Glcd_Write_Text_color, 1
0x29EC	0xF008ECE8  	CALL        _Glcd_Write_Text, 0
;glcd.c,314 :: 		}
L_draw_score_159:
;glcd.c,315 :: 		if(score[1] == 9){
0x29F0	0x0100      	MOVLB       0
0x29F2	0x51F6      	MOVF        _score+1, 0, 1
0x29F4	0x0A09      	XORLW       9
0x29F6	0xE10D      	BNZ         L_draw_score_160
;glcd.c,316 :: 		Glcd_Write_Text("9", 98 , 7, 1);
0x29F8	0x0E57      	MOVLW       ?lstr16_glcd
0x29FA	0x0101      	MOVLB       1
0x29FC	0x6FDA      	MOVWF       FARG_Glcd_Write_Text_text, 1
0x29FE	0x0E00      	MOVLW       hi_addr(?lstr16_glcd)
0x2A00	0x6FDB      	MOVWF       FARG_Glcd_Write_Text_text+1, 1
0x2A02	0x0E62      	MOVLW       98
0x2A04	0x6FDC      	MOVWF       FARG_Glcd_Write_Text_x_pos, 1
0x2A06	0x0E07      	MOVLW       7
0x2A08	0x6FDD      	MOVWF       FARG_Glcd_Write_Text_page_num, 1
0x2A0A	0x0E01      	MOVLW       1
0x2A0C	0x6FDE      	MOVWF       FARG_Glcd_Write_Text_color, 1
0x2A0E	0xF008ECE8  	CALL        _Glcd_Write_Text, 0
;glcd.c,317 :: 		}
L_draw_score_160:
;glcd.c,318 :: 		}
L_end_draw_score_1:
0x2A12	0x0012      	RETURN      0
; end of _draw_score_1
_draw_score_2:
;glcd.c,320 :: 		void draw_score_2(){
;glcd.c,321 :: 		if(score[0] == 0){
0x2A14	0x0100      	MOVLB       0
0x2A16	0x51F5      	MOVF        _score, 0, 1
0x2A18	0x0A00      	XORLW       0
0x2A1A	0xE10D      	BNZ         L_draw_score_261
;glcd.c,322 :: 		Glcd_Write_Text("0", 25 , 7, 1);
0x2A1C	0x0EB5      	MOVLW       ?lstr17_glcd
0x2A1E	0x0101      	MOVLB       1
0x2A20	0x6FDA      	MOVWF       FARG_Glcd_Write_Text_text, 1
0x2A22	0x0E00      	MOVLW       hi_addr(?lstr17_glcd)
0x2A24	0x6FDB      	MOVWF       FARG_Glcd_Write_Text_text+1, 1
0x2A26	0x0E19      	MOVLW       25
0x2A28	0x6FDC      	MOVWF       FARG_Glcd_Write_Text_x_pos, 1
0x2A2A	0x0E07      	MOVLW       7
0x2A2C	0x6FDD      	MOVWF       FARG_Glcd_Write_Text_page_num, 1
0x2A2E	0x0E01      	MOVLW       1
0x2A30	0x6FDE      	MOVWF       FARG_Glcd_Write_Text_color, 1
0x2A32	0xF008ECE8  	CALL        _Glcd_Write_Text, 0
;glcd.c,323 :: 		}
L_draw_score_261:
;glcd.c,324 :: 		if(score[0] == 1){
0x2A36	0x0100      	MOVLB       0
0x2A38	0x51F5      	MOVF        _score, 0, 1
0x2A3A	0x0A01      	XORLW       1
0x2A3C	0xE10D      	BNZ         L_draw_score_262
;glcd.c,325 :: 		Glcd_Write_Text("1", 25 , 7, 1);
0x2A3E	0x0EB7      	MOVLW       ?lstr18_glcd
0x2A40	0x0101      	MOVLB       1
0x2A42	0x6FDA      	MOVWF       FARG_Glcd_Write_Text_text, 1
0x2A44	0x0E00      	MOVLW       hi_addr(?lstr18_glcd)
0x2A46	0x6FDB      	MOVWF       FARG_Glcd_Write_Text_text+1, 1
0x2A48	0x0E19      	MOVLW       25
0x2A4A	0x6FDC      	MOVWF       FARG_Glcd_Write_Text_x_pos, 1
0x2A4C	0x0E07      	MOVLW       7
0x2A4E	0x6FDD      	MOVWF       FARG_Glcd_Write_Text_page_num, 1
0x2A50	0x0E01      	MOVLW       1
0x2A52	0x6FDE      	MOVWF       FARG_Glcd_Write_Text_color, 1
0x2A54	0xF008ECE8  	CALL        _Glcd_Write_Text, 0
;glcd.c,326 :: 		}
L_draw_score_262:
;glcd.c,327 :: 		if(score[0] == 2){
0x2A58	0x0100      	MOVLB       0
0x2A5A	0x51F5      	MOVF        _score, 0, 1
0x2A5C	0x0A02      	XORLW       2
0x2A5E	0xE10D      	BNZ         L_draw_score_263
;glcd.c,328 :: 		Glcd_Write_Text("2", 25 , 7, 1);
0x2A60	0x0E99      	MOVLW       ?lstr19_glcd
0x2A62	0x0101      	MOVLB       1
0x2A64	0x6FDA      	MOVWF       FARG_Glcd_Write_Text_text, 1
0x2A66	0x0E00      	MOVLW       hi_addr(?lstr19_glcd)
0x2A68	0x6FDB      	MOVWF       FARG_Glcd_Write_Text_text+1, 1
0x2A6A	0x0E19      	MOVLW       25
0x2A6C	0x6FDC      	MOVWF       FARG_Glcd_Write_Text_x_pos, 1
0x2A6E	0x0E07      	MOVLW       7
0x2A70	0x6FDD      	MOVWF       FARG_Glcd_Write_Text_page_num, 1
0x2A72	0x0E01      	MOVLW       1
0x2A74	0x6FDE      	MOVWF       FARG_Glcd_Write_Text_color, 1
0x2A76	0xF008ECE8  	CALL        _Glcd_Write_Text, 0
;glcd.c,329 :: 		}
L_draw_score_263:
;glcd.c,330 :: 		if(score[0] == 3){
0x2A7A	0x0100      	MOVLB       0
0x2A7C	0x51F5      	MOVF        _score, 0, 1
0x2A7E	0x0A03      	XORLW       3
0x2A80	0xE10D      	BNZ         L_draw_score_264
;glcd.c,331 :: 		Glcd_Write_Text("3", 25 , 7, 1);
0x2A82	0x0E93      	MOVLW       ?lstr20_glcd
0x2A84	0x0101      	MOVLB       1
0x2A86	0x6FDA      	MOVWF       FARG_Glcd_Write_Text_text, 1
0x2A88	0x0E00      	MOVLW       hi_addr(?lstr20_glcd)
0x2A8A	0x6FDB      	MOVWF       FARG_Glcd_Write_Text_text+1, 1
0x2A8C	0x0E19      	MOVLW       25
0x2A8E	0x6FDC      	MOVWF       FARG_Glcd_Write_Text_x_pos, 1
0x2A90	0x0E07      	MOVLW       7
0x2A92	0x6FDD      	MOVWF       FARG_Glcd_Write_Text_page_num, 1
0x2A94	0x0E01      	MOVLW       1
0x2A96	0x6FDE      	MOVWF       FARG_Glcd_Write_Text_color, 1
0x2A98	0xF008ECE8  	CALL        _Glcd_Write_Text, 0
;glcd.c,332 :: 		}
L_draw_score_264:
;glcd.c,333 :: 		if(score[0] == 4){
0x2A9C	0x0100      	MOVLB       0
0x2A9E	0x51F5      	MOVF        _score, 0, 1
0x2AA0	0x0A04      	XORLW       4
0x2AA2	0xE10D      	BNZ         L_draw_score_265
;glcd.c,334 :: 		Glcd_Write_Text("4", 25 , 7, 1);
0x2AA4	0x0E95      	MOVLW       ?lstr21_glcd
0x2AA6	0x0101      	MOVLB       1
0x2AA8	0x6FDA      	MOVWF       FARG_Glcd_Write_Text_text, 1
0x2AAA	0x0E00      	MOVLW       hi_addr(?lstr21_glcd)
0x2AAC	0x6FDB      	MOVWF       FARG_Glcd_Write_Text_text+1, 1
0x2AAE	0x0E19      	MOVLW       25
0x2AB0	0x6FDC      	MOVWF       FARG_Glcd_Write_Text_x_pos, 1
0x2AB2	0x0E07      	MOVLW       7
0x2AB4	0x6FDD      	MOVWF       FARG_Glcd_Write_Text_page_num, 1
0x2AB6	0x0E01      	MOVLW       1
0x2AB8	0x6FDE      	MOVWF       FARG_Glcd_Write_Text_color, 1
0x2ABA	0xF008ECE8  	CALL        _Glcd_Write_Text, 0
;glcd.c,335 :: 		}
L_draw_score_265:
;glcd.c,336 :: 		if(score[0] == 5){
0x2ABE	0x0100      	MOVLB       0
0x2AC0	0x51F5      	MOVF        _score, 0, 1
0x2AC2	0x0A05      	XORLW       5
0x2AC4	0xE10D      	BNZ         L_draw_score_266
;glcd.c,337 :: 		Glcd_Write_Text("5", 25 , 7, 1);
0x2AC6	0x0E97      	MOVLW       ?lstr22_glcd
0x2AC8	0x0101      	MOVLB       1
0x2ACA	0x6FDA      	MOVWF       FARG_Glcd_Write_Text_text, 1
0x2ACC	0x0E00      	MOVLW       hi_addr(?lstr22_glcd)
0x2ACE	0x6FDB      	MOVWF       FARG_Glcd_Write_Text_text+1, 1
0x2AD0	0x0E19      	MOVLW       25
0x2AD2	0x6FDC      	MOVWF       FARG_Glcd_Write_Text_x_pos, 1
0x2AD4	0x0E07      	MOVLW       7
0x2AD6	0x6FDD      	MOVWF       FARG_Glcd_Write_Text_page_num, 1
0x2AD8	0x0E01      	MOVLW       1
0x2ADA	0x6FDE      	MOVWF       FARG_Glcd_Write_Text_color, 1
0x2ADC	0xF008ECE8  	CALL        _Glcd_Write_Text, 0
;glcd.c,338 :: 		}
L_draw_score_266:
;glcd.c,339 :: 		if(score[0] == 6){
0x2AE0	0x0100      	MOVLB       0
0x2AE2	0x51F5      	MOVF        _score, 0, 1
0x2AE4	0x0A06      	XORLW       6
0x2AE6	0xE10D      	BNZ         L_draw_score_267
;glcd.c,340 :: 		Glcd_Write_Text("6", 25 , 7, 1);
0x2AE8	0x0E19      	MOVLW       ?lstr23_glcd
0x2AEA	0x0101      	MOVLB       1
0x2AEC	0x6FDA      	MOVWF       FARG_Glcd_Write_Text_text, 1
0x2AEE	0x0E00      	MOVLW       hi_addr(?lstr23_glcd)
0x2AF0	0x6FDB      	MOVWF       FARG_Glcd_Write_Text_text+1, 1
0x2AF2	0x0E19      	MOVLW       25
0x2AF4	0x6FDC      	MOVWF       FARG_Glcd_Write_Text_x_pos, 1
0x2AF6	0x0E07      	MOVLW       7
0x2AF8	0x6FDD      	MOVWF       FARG_Glcd_Write_Text_page_num, 1
0x2AFA	0x0E01      	MOVLW       1
0x2AFC	0x6FDE      	MOVWF       FARG_Glcd_Write_Text_color, 1
0x2AFE	0xF008ECE8  	CALL        _Glcd_Write_Text, 0
;glcd.c,341 :: 		}
L_draw_score_267:
;glcd.c,342 :: 		if(score[0] == 7){
0x2B02	0x0100      	MOVLB       0
0x2B04	0x51F5      	MOVF        _score, 0, 1
0x2B06	0x0A07      	XORLW       7
0x2B08	0xE10D      	BNZ         L_draw_score_268
;glcd.c,343 :: 		Glcd_Write_Text("7", 25 , 7, 1);
0x2B0A	0x0E1B      	MOVLW       ?lstr24_glcd
0x2B0C	0x0101      	MOVLB       1
0x2B0E	0x6FDA      	MOVWF       FARG_Glcd_Write_Text_text, 1
0x2B10	0x0E00      	MOVLW       hi_addr(?lstr24_glcd)
0x2B12	0x6FDB      	MOVWF       FARG_Glcd_Write_Text_text+1, 1
0x2B14	0x0E19      	MOVLW       25
0x2B16	0x6FDC      	MOVWF       FARG_Glcd_Write_Text_x_pos, 1
0x2B18	0x0E07      	MOVLW       7
0x2B1A	0x6FDD      	MOVWF       FARG_Glcd_Write_Text_page_num, 1
0x2B1C	0x0E01      	MOVLW       1
0x2B1E	0x6FDE      	MOVWF       FARG_Glcd_Write_Text_color, 1
0x2B20	0xF008ECE8  	CALL        _Glcd_Write_Text, 0
;glcd.c,344 :: 		}
L_draw_score_268:
;glcd.c,345 :: 		if(score[0] == 8){
0x2B24	0x0100      	MOVLB       0
0x2B26	0x51F5      	MOVF        _score, 0, 1
0x2B28	0x0A08      	XORLW       8
0x2B2A	0xE10D      	BNZ         L_draw_score_269
;glcd.c,346 :: 		Glcd_Write_Text("8", 25 , 7, 1);
0x2B2C	0x0E1D      	MOVLW       ?lstr25_glcd
0x2B2E	0x0101      	MOVLB       1
0x2B30	0x6FDA      	MOVWF       FARG_Glcd_Write_Text_text, 1
0x2B32	0x0E00      	MOVLW       hi_addr(?lstr25_glcd)
0x2B34	0x6FDB      	MOVWF       FARG_Glcd_Write_Text_text+1, 1
0x2B36	0x0E19      	MOVLW       25
0x2B38	0x6FDC      	MOVWF       FARG_Glcd_Write_Text_x_pos, 1
0x2B3A	0x0E07      	MOVLW       7
0x2B3C	0x6FDD      	MOVWF       FARG_Glcd_Write_Text_page_num, 1
0x2B3E	0x0E01      	MOVLW       1
0x2B40	0x6FDE      	MOVWF       FARG_Glcd_Write_Text_color, 1
0x2B42	0xF008ECE8  	CALL        _Glcd_Write_Text, 0
;glcd.c,347 :: 		}
L_draw_score_269:
;glcd.c,348 :: 		if(score[0] == 9){
0x2B46	0x0100      	MOVLB       0
0x2B48	0x51F5      	MOVF        _score, 0, 1
0x2B4A	0x0A09      	XORLW       9
0x2B4C	0xE10D      	BNZ         L_draw_score_270
;glcd.c,349 :: 		Glcd_Write_Text("9", 25 , 7, 1);
0x2B4E	0x0E17      	MOVLW       ?lstr26_glcd
0x2B50	0x0101      	MOVLB       1
0x2B52	0x6FDA      	MOVWF       FARG_Glcd_Write_Text_text, 1
0x2B54	0x0E00      	MOVLW       hi_addr(?lstr26_glcd)
0x2B56	0x6FDB      	MOVWF       FARG_Glcd_Write_Text_text+1, 1
0x2B58	0x0E19      	MOVLW       25
0x2B5A	0x6FDC      	MOVWF       FARG_Glcd_Write_Text_x_pos, 1
0x2B5C	0x0E07      	MOVLW       7
0x2B5E	0x6FDD      	MOVWF       FARG_Glcd_Write_Text_page_num, 1
0x2B60	0x0E01      	MOVLW       1
0x2B62	0x6FDE      	MOVWF       FARG_Glcd_Write_Text_color, 1
0x2B64	0xF008ECE8  	CALL        _Glcd_Write_Text, 0
;glcd.c,350 :: 		}
L_draw_score_270:
;glcd.c,352 :: 		}
L_end_draw_score_2:
0x2B68	0x0012      	RETURN      0
; end of _draw_score_2
_move_aste:
;glcd.c,386 :: 		void move_aste(){
;glcd.c,388 :: 		if (count == 3){
0x2B6A	0x0101      	MOVLB       1
0x2B6C	0x510C      	MOVF        _count, 0, 1
0x2B6E	0x0A03      	XORLW       3
0x2B70	0xA4D8      	BTFSS       STATUS, 2 
0x2B72	0xF023EF99  	GOTO        L_move_aste77
;glcd.c,389 :: 		for(i = 0; i <4; i++){
0x2B76	0x6BD3      	CLRF        move_aste_i_L0, 1
L_move_aste78:
0x2B78	0x0E04      	MOVLW       4
0x2B7A	0x5DD3      	SUBWF       move_aste_i_L0, 0, 1
0x2B7C	0xB0D8      	BTFSC       STATUS, 0 
0x2B7E	0xD15E      	BRA         L_move_aste79
;glcd.c,390 :: 		aste1[i].old_x = aste1[i].x;
0x2B80	0x0E03      	MOVLW       3
0x2B82	0x6E00      	MOVWF       R0 
0x2B84	0x0E00      	MOVLW       0
0x2B86	0x6E01      	MOVWF       R1 
0x2B88	0xF004C1D3  	MOVFF       move_aste_i_L0, R4
0x2B8C	0x0E00      	MOVLW       0
0x2B8E	0x6E05      	MOVWF       R5 
0x2B90	0xF001EC42  	CALL        _Mul_16X16_U, 0
0x2B94	0x0E77      	MOVLW       _aste1
0x2B96	0x2600      	ADDWF       R0, 1 
0x2B98	0x0E01      	MOVLW       hi_addr(_aste1)
0x2B9A	0x2201      	ADDWFC      R1, 1 
0x2B9C	0x0E02      	MOVLW       2
0x2B9E	0x2400      	ADDWF       R0, 0 
0x2BA0	0x6EE1      	MOVWF       FSR1L 
0x2BA2	0x0E00      	MOVLW       0
0x2BA4	0x2001      	ADDWFC      R1, 0 
0x2BA6	0x6EE2      	MOVWF       FSR1L+1 
0x2BA8	0xFFE9C000  	MOVFF       R0, FSR0L
0x2BAC	0xFFEAC001  	MOVFF       R1, FSR0H
0x2BB0	0xF000CFEE  	MOVFF       POSTINC0, R0
0x2BB4	0xFFE6C000  	MOVFF       R0, POSTINC1
;glcd.c,391 :: 		aste1[i].x -= 1;
0x2BB8	0x0E03      	MOVLW       3
0x2BBA	0x6E00      	MOVWF       R0 
0x2BBC	0x0E00      	MOVLW       0
0x2BBE	0x6E01      	MOVWF       R1 
0x2BC0	0xF004C1D3  	MOVFF       move_aste_i_L0, R4
0x2BC4	0x0E00      	MOVLW       0
0x2BC6	0x6E05      	MOVWF       R5 
0x2BC8	0xF001EC42  	CALL        _Mul_16X16_U, 0
0x2BCC	0x0E77      	MOVLW       _aste1
0x2BCE	0x2400      	ADDWF       R0, 0 
0x2BD0	0x6E02      	MOVWF       R2 
0x2BD2	0x0E01      	MOVLW       hi_addr(_aste1)
0x2BD4	0x2001      	ADDWFC      R1, 0 
0x2BD6	0x6E03      	MOVWF       R3 
0x2BD8	0xFFE9C002  	MOVFF       R2, FSR0L
0x2BDC	0xFFEAC003  	MOVFF       R3, FSR0H
0x2BE0	0xF000CFEE  	MOVFF       POSTINC0, R0
0x2BE4	0x0600      	DECF        R0, 1 
0x2BE6	0xFFE1C002  	MOVFF       R2, FSR1L
0x2BEA	0xFFE2C003  	MOVFF       R3, FSR1H
0x2BEE	0xFFE6C000  	MOVFF       R0, POSTINC1
;glcd.c,392 :: 		if(aste1[i].x<=1){
0x2BF2	0x0E03      	MOVLW       3
0x2BF4	0x6E00      	MOVWF       R0 
0x2BF6	0x0E00      	MOVLW       0
0x2BF8	0x6E01      	MOVWF       R1 
0x2BFA	0xF004C1D3  	MOVFF       move_aste_i_L0, R4
0x2BFE	0x0E00      	MOVLW       0
0x2C00	0x6E05      	MOVWF       R5 
0x2C02	0xF001EC42  	CALL        _Mul_16X16_U, 0
0x2C06	0x0E77      	MOVLW       _aste1
0x2C08	0x2400      	ADDWF       R0, 0 
0x2C0A	0x6EE9      	MOVWF       FSR0L 
0x2C0C	0x0E01      	MOVLW       hi_addr(_aste1)
0x2C0E	0x2001      	ADDWFC      R1, 0 
0x2C10	0x6EEA      	MOVWF       FSR0L+1 
0x2C12	0xF001CFEE  	MOVFF       POSTINC0, R1
0x2C16	0x0E80      	MOVLW       128
0x2C18	0x0A01      	XORLW       1
0x2C1A	0x6E00      	MOVWF       R0 
0x2C1C	0x0E80      	MOVLW       128
0x2C1E	0x1801      	XORWF       R1, 0 
0x2C20	0x5C00      	SUBWF       R0, 0 
0x2C22	0xE312      	BNC         L_move_aste81
;glcd.c,393 :: 		aste1[i].x = 127;
0x2C24	0x0E03      	MOVLW       3
0x2C26	0x6E00      	MOVWF       R0 
0x2C28	0x0E00      	MOVLW       0
0x2C2A	0x6E01      	MOVWF       R1 
0x2C2C	0xF004C1D3  	MOVFF       move_aste_i_L0, R4
0x2C30	0x0E00      	MOVLW       0
0x2C32	0x6E05      	MOVWF       R5 
0x2C34	0xF001EC42  	CALL        _Mul_16X16_U, 0
0x2C38	0x0E77      	MOVLW       _aste1
0x2C3A	0x2400      	ADDWF       R0, 0 
0x2C3C	0x6EE1      	MOVWF       FSR1L 
0x2C3E	0x0E01      	MOVLW       hi_addr(_aste1)
0x2C40	0x2001      	ADDWFC      R1, 0 
0x2C42	0x6EE2      	MOVWF       FSR1L+1 
0x2C44	0x0E7F      	MOVLW       127
0x2C46	0x6EE6      	MOVWF       POSTINC1 
;glcd.c,394 :: 		}
L_move_aste81:
;glcd.c,395 :: 		if(turno_player == 1){
0x2C48	0x0100      	MOVLB       0
0x2C4A	0x51F4      	MOVF        _turno_player, 0, 1
0x2C4C	0x0A01      	XORLW       1
0x2C4E	0xA4D8      	BTFSS       STATUS, 2 
0x2C50	0xD077      	BRA         L_move_aste82
;glcd.c,396 :: 		if((aste1[i].y >= jugador[1].y) &&(aste1[i].y < jugador[1].y + 4)){
0x2C52	0x0E03      	MOVLW       3
0x2C54	0x6E00      	MOVWF       R0 
0x2C56	0x0E00      	MOVLW       0
0x2C58	0x6E01      	MOVWF       R1 
0x2C5A	0xF004C1D3  	MOVFF       move_aste_i_L0, R4
0x2C5E	0x0E00      	MOVLW       0
0x2C60	0x6E05      	MOVWF       R5 
0x2C62	0xF001EC42  	CALL        _Mul_16X16_U, 0
0x2C66	0x0E77      	MOVLW       _aste1
0x2C68	0x2600      	ADDWF       R0, 1 
0x2C6A	0x0E01      	MOVLW       hi_addr(_aste1)
0x2C6C	0x2201      	ADDWFC      R1, 1 
0x2C6E	0x0E01      	MOVLW       1
0x2C70	0x2400      	ADDWF       R0, 0 
0x2C72	0x6EE9      	MOVWF       FSR0L 
0x2C74	0x0E00      	MOVLW       0
0x2C76	0x2001      	ADDWFC      R1, 0 
0x2C78	0x6EEA      	MOVWF       FSR0L+1 
0x2C7A	0xF001CFEE  	MOVFF       POSTINC0, R1
0x2C7E	0x0E80      	MOVLW       128
0x2C80	0xBE01      	BTFSC       R1, 7 
0x2C82	0x0E7F      	MOVLW       127
0x2C84	0x6E00      	MOVWF       R0 
0x2C86	0x0E80      	MOVLW       128
0x2C88	0x5C00      	SUBWF       R0, 0 
0x2C8A	0xE103      	BNZ         L__move_aste523
0x2C8C	0x0101      	MOVLB       1
0x2C8E	0x51AC      	MOVF        _jugador+5, 0, 1
0x2C90	0x5C01      	SUBWF       R1, 0 
L__move_aste523:
0x2C92	0xE355      	BNC         L_move_aste85
0x2C94	0x0101      	MOVLB       1
0x2C96	0x0E03      	MOVLW       3
0x2C98	0x6E00      	MOVWF       R0 
0x2C9A	0x0E00      	MOVLW       0
0x2C9C	0x6E01      	MOVWF       R1 
0x2C9E	0xF004C1D3  	MOVFF       move_aste_i_L0, R4
0x2CA2	0x0E00      	MOVLW       0
0x2CA4	0x6E05      	MOVWF       R5 
0x2CA6	0xF001EC42  	CALL        _Mul_16X16_U, 0
0x2CAA	0x0E77      	MOVLW       _aste1
0x2CAC	0x2600      	ADDWF       R0, 1 
0x2CAE	0x0E01      	MOVLW       hi_addr(_aste1)
0x2CB0	0x2201      	ADDWFC      R1, 1 
0x2CB2	0x0E01      	MOVLW       1
0x2CB4	0x2400      	ADDWF       R0, 0 
0x2CB6	0x6EE9      	MOVWF       FSR0L 
0x2CB8	0x0E00      	MOVLW       0
0x2CBA	0x2001      	ADDWFC      R1, 0 
0x2CBC	0x6EEA      	MOVWF       FSR0L+1 
0x2CBE	0xF003CFEE  	MOVFF       POSTINC0, R3
0x2CC2	0x0E04      	MOVLW       4
0x2CC4	0x25AC      	ADDWF       _jugador+5, 0, 1
0x2CC6	0x6E01      	MOVWF       R1 
0x2CC8	0x6A02      	CLRF        R2 
0x2CCA	0x0E00      	MOVLW       0
0x2CCC	0x2202      	ADDWFC      R2, 1 
0x2CCE	0x0E80      	MOVLW       128
0x2CD0	0xBE03      	BTFSC       R3, 7 
0x2CD2	0x0E7F      	MOVLW       127
0x2CD4	0x6E00      	MOVWF       R0 
0x2CD6	0x0E80      	MOVLW       128
0x2CD8	0x1802      	XORWF       R2, 0 
0x2CDA	0x5C00      	SUBWF       R0, 0 
0x2CDC	0xE102      	BNZ         L__move_aste524
0x2CDE	0x5001      	MOVF        R1, 0 
0x2CE0	0x5C03      	SUBWF       R3, 0 
L__move_aste524:
0x2CE2	0xE22D      	BC          L_move_aste85
L__move_aste483:
;glcd.c,397 :: 		check_coll(jugador[1], aste1[i], 1);
0x2CE4	0x0E04      	MOVLW       4
0x2CE6	0x6E00      	MOVWF       R0 
0x2CE8	0x0EDA      	MOVLW       FARG_check_coll_nave
0x2CEA	0x6EE1      	MOVWF       FSR1L 
0x2CEC	0x0E01      	MOVLW       hi_addr(FARG_check_coll_nave)
0x2CEE	0x6EE2      	MOVWF       FSR1L+1 
0x2CF0	0x0EAB      	MOVLW       _jugador+4
0x2CF2	0x6EE9      	MOVWF       FSR0L 
0x2CF4	0x0E01      	MOVLW       hi_addr(_jugador+4)
0x2CF6	0x6EEA      	MOVWF       FSR0L+1 
L_move_aste86:
0x2CF8	0xFFE6CFEE  	MOVFF       POSTINC0, POSTINC1
0x2CFC	0x0600      	DECF        R0, 1 
0x2CFE	0xE1FC      	BNZ         L_move_aste86
0x2D00	0x0E03      	MOVLW       3
0x2D02	0x6E00      	MOVWF       R0 
0x2D04	0x0E00      	MOVLW       0
0x2D06	0x6E01      	MOVWF       R1 
0x2D08	0xF004C1D3  	MOVFF       move_aste_i_L0, R4
0x2D0C	0x0E00      	MOVLW       0
0x2D0E	0x6E05      	MOVWF       R5 
0x2D10	0xF001EC42  	CALL        _Mul_16X16_U, 0
0x2D14	0x0E77      	MOVLW       _aste1
0x2D16	0x2400      	ADDWF       R0, 0 
0x2D18	0x6EE9      	MOVWF       FSR0L 
0x2D1A	0x0E01      	MOVLW       hi_addr(_aste1)
0x2D1C	0x2001      	ADDWFC      R1, 0 
0x2D1E	0x6EEA      	MOVWF       FSR0L+1 
0x2D20	0x0E03      	MOVLW       3
0x2D22	0x6E00      	MOVWF       R0 
0x2D24	0x0EDE      	MOVLW       FARG_check_coll_aste
0x2D26	0x6EE1      	MOVWF       FSR1L 
0x2D28	0x0E01      	MOVLW       hi_addr(FARG_check_coll_aste)
0x2D2A	0x6EE2      	MOVWF       FSR1L+1 
L_move_aste87:
0x2D2C	0xFFE6CFEE  	MOVFF       POSTINC0, POSTINC1
0x2D30	0x0600      	DECF        R0, 1 
0x2D32	0xE1FC      	BNZ         L_move_aste87
0x2D34	0x0101      	MOVLB       1
0x2D36	0x0E01      	MOVLW       1
0x2D38	0x6FE1      	MOVWF       FARG_check_coll_num, 1
0x2D3A	0xF008EC0B  	CALL        _check_coll, 0
;glcd.c,398 :: 		}
L_move_aste85:
;glcd.c,399 :: 		}
0x2D3E	0xD07B      	BRA         L_move_aste88
L_move_aste82:
;glcd.c,400 :: 		else if(turno_player == 2){
0x2D40	0x0100      	MOVLB       0
0x2D42	0x51F4      	MOVF        _turno_player, 0, 1
0x2D44	0x0A02      	XORLW       2
0x2D46	0xA4D8      	BTFSS       STATUS, 2 
0x2D48	0xD076      	BRA         L_move_aste89
;glcd.c,401 :: 		if((aste1[i].y >= jugador[0].y) &&(aste1[i].y < jugador[0].y + 4)){
0x2D4A	0x0E03      	MOVLW       3
0x2D4C	0x6E00      	MOVWF       R0 
0x2D4E	0x0E00      	MOVLW       0
0x2D50	0x6E01      	MOVWF       R1 
0x2D52	0xF004C1D3  	MOVFF       move_aste_i_L0, R4
0x2D56	0x0E00      	MOVLW       0
0x2D58	0x6E05      	MOVWF       R5 
0x2D5A	0xF001EC42  	CALL        _Mul_16X16_U, 0
0x2D5E	0x0E77      	MOVLW       _aste1
0x2D60	0x2600      	ADDWF       R0, 1 
0x2D62	0x0E01      	MOVLW       hi_addr(_aste1)
0x2D64	0x2201      	ADDWFC      R1, 1 
0x2D66	0x0E01      	MOVLW       1
0x2D68	0x2400      	ADDWF       R0, 0 
0x2D6A	0x6EE9      	MOVWF       FSR0L 
0x2D6C	0x0E00      	MOVLW       0
0x2D6E	0x2001      	ADDWFC      R1, 0 
0x2D70	0x6EEA      	MOVWF       FSR0L+1 
0x2D72	0xF001CFEE  	MOVFF       POSTINC0, R1
0x2D76	0x0E80      	MOVLW       128
0x2D78	0xBE01      	BTFSC       R1, 7 
0x2D7A	0x0E7F      	MOVLW       127
0x2D7C	0x6E00      	MOVWF       R0 
0x2D7E	0x0E80      	MOVLW       128
0x2D80	0x5C00      	SUBWF       R0, 0 
0x2D82	0xE103      	BNZ         L__move_aste525
0x2D84	0x0101      	MOVLB       1
0x2D86	0x51A8      	MOVF        _jugador+1, 0, 1
0x2D88	0x5C01      	SUBWF       R1, 0 
L__move_aste525:
0x2D8A	0xE355      	BNC         L_move_aste92
0x2D8C	0x0101      	MOVLB       1
0x2D8E	0x0E03      	MOVLW       3
0x2D90	0x6E00      	MOVWF       R0 
0x2D92	0x0E00      	MOVLW       0
0x2D94	0x6E01      	MOVWF       R1 
0x2D96	0xF004C1D3  	MOVFF       move_aste_i_L0, R4
0x2D9A	0x0E00      	MOVLW       0
0x2D9C	0x6E05      	MOVWF       R5 
0x2D9E	0xF001EC42  	CALL        _Mul_16X16_U, 0
0x2DA2	0x0E77      	MOVLW       _aste1
0x2DA4	0x2600      	ADDWF       R0, 1 
0x2DA6	0x0E01      	MOVLW       hi_addr(_aste1)
0x2DA8	0x2201      	ADDWFC      R1, 1 
0x2DAA	0x0E01      	MOVLW       1
0x2DAC	0x2400      	ADDWF       R0, 0 
0x2DAE	0x6EE9      	MOVWF       FSR0L 
0x2DB0	0x0E00      	MOVLW       0
0x2DB2	0x2001      	ADDWFC      R1, 0 
0x2DB4	0x6EEA      	MOVWF       FSR0L+1 
0x2DB6	0xF003CFEE  	MOVFF       POSTINC0, R3
0x2DBA	0x0E04      	MOVLW       4
0x2DBC	0x25A8      	ADDWF       _jugador+1, 0, 1
0x2DBE	0x6E01      	MOVWF       R1 
0x2DC0	0x6A02      	CLRF        R2 
0x2DC2	0x0E00      	MOVLW       0
0x2DC4	0x2202      	ADDWFC      R2, 1 
0x2DC6	0x0E80      	MOVLW       128
0x2DC8	0xBE03      	BTFSC       R3, 7 
0x2DCA	0x0E7F      	MOVLW       127
0x2DCC	0x6E00      	MOVWF       R0 
0x2DCE	0x0E80      	MOVLW       128
0x2DD0	0x1802      	XORWF       R2, 0 
0x2DD2	0x5C00      	SUBWF       R0, 0 
0x2DD4	0xE102      	BNZ         L__move_aste526
0x2DD6	0x5001      	MOVF        R1, 0 
0x2DD8	0x5C03      	SUBWF       R3, 0 
L__move_aste526:
0x2DDA	0xE22D      	BC          L_move_aste92
L__move_aste482:
;glcd.c,402 :: 		check_coll(jugador[0], aste1[i], 1);
0x2DDC	0x0E04      	MOVLW       4
0x2DDE	0x6E00      	MOVWF       R0 
0x2DE0	0x0EDA      	MOVLW       FARG_check_coll_nave
0x2DE2	0x6EE1      	MOVWF       FSR1L 
0x2DE4	0x0E01      	MOVLW       hi_addr(FARG_check_coll_nave)
0x2DE6	0x6EE2      	MOVWF       FSR1L+1 
0x2DE8	0x0EA7      	MOVLW       _jugador
0x2DEA	0x6EE9      	MOVWF       FSR0L 
0x2DEC	0x0E01      	MOVLW       hi_addr(_jugador)
0x2DEE	0x6EEA      	MOVWF       FSR0L+1 
L_move_aste93:
0x2DF0	0xFFE6CFEE  	MOVFF       POSTINC0, POSTINC1
0x2DF4	0x0600      	DECF        R0, 1 
0x2DF6	0xE1FC      	BNZ         L_move_aste93
0x2DF8	0x0E03      	MOVLW       3
0x2DFA	0x6E00      	MOVWF       R0 
0x2DFC	0x0E00      	MOVLW       0
0x2DFE	0x6E01      	MOVWF       R1 
0x2E00	0xF004C1D3  	MOVFF       move_aste_i_L0, R4
0x2E04	0x0E00      	MOVLW       0
0x2E06	0x6E05      	MOVWF       R5 
0x2E08	0xF001EC42  	CALL        _Mul_16X16_U, 0
0x2E0C	0x0E77      	MOVLW       _aste1
0x2E0E	0x2400      	ADDWF       R0, 0 
0x2E10	0x6EE9      	MOVWF       FSR0L 
0x2E12	0x0E01      	MOVLW       hi_addr(_aste1)
0x2E14	0x2001      	ADDWFC      R1, 0 
0x2E16	0x6EEA      	MOVWF       FSR0L+1 
0x2E18	0x0E03      	MOVLW       3
0x2E1A	0x6E00      	MOVWF       R0 
0x2E1C	0x0EDE      	MOVLW       FARG_check_coll_aste
0x2E1E	0x6EE1      	MOVWF       FSR1L 
0x2E20	0x0E01      	MOVLW       hi_addr(FARG_check_coll_aste)
0x2E22	0x6EE2      	MOVWF       FSR1L+1 
L_move_aste94:
0x2E24	0xFFE6CFEE  	MOVFF       POSTINC0, POSTINC1
0x2E28	0x0600      	DECF        R0, 1 
0x2E2A	0xE1FC      	BNZ         L_move_aste94
0x2E2C	0x0101      	MOVLB       1
0x2E2E	0x0E01      	MOVLW       1
0x2E30	0x6FE1      	MOVWF       FARG_check_coll_num, 1
0x2E32	0xF008EC0B  	CALL        _check_coll, 0
;glcd.c,403 :: 		}
L_move_aste92:
;glcd.c,404 :: 		}
L_move_aste89:
L_move_aste88:
;glcd.c,389 :: 		for(i = 0; i <4; i++){
0x2E36	0x0101      	MOVLB       1
0x2E38	0x2BD3      	INCF        move_aste_i_L0, 1, 1
;glcd.c,405 :: 		}
0x2E3A	0xD69E      	BRA         L_move_aste78
L_move_aste79:
;glcd.c,406 :: 		for(i = 0; i <4; i++){
0x2E3C	0x6BD3      	CLRF        move_aste_i_L0, 1
L_move_aste95:
0x2E3E	0x0E04      	MOVLW       4
0x2E40	0x5DD3      	SUBWF       move_aste_i_L0, 0, 1
0x2E42	0xB0D8      	BTFSC       STATUS, 0 
0x2E44	0xD15E      	BRA         L_move_aste96
;glcd.c,407 :: 		aste2[i].old_x = aste2[i].x;
0x2E46	0x0E03      	MOVLW       3
0x2E48	0x6E00      	MOVWF       R0 
0x2E4A	0x0E00      	MOVLW       0
0x2E4C	0x6E01      	MOVWF       R1 
0x2E4E	0xF004C1D3  	MOVFF       move_aste_i_L0, R4
0x2E52	0x0E00      	MOVLW       0
0x2E54	0x6E05      	MOVWF       R5 
0x2E56	0xF001EC42  	CALL        _Mul_16X16_U, 0
0x2E5A	0x0E8F      	MOVLW       _aste2
0x2E5C	0x2600      	ADDWF       R0, 1 
0x2E5E	0x0E01      	MOVLW       hi_addr(_aste2)
0x2E60	0x2201      	ADDWFC      R1, 1 
0x2E62	0x0E02      	MOVLW       2
0x2E64	0x2400      	ADDWF       R0, 0 
0x2E66	0x6EE1      	MOVWF       FSR1L 
0x2E68	0x0E00      	MOVLW       0
0x2E6A	0x2001      	ADDWFC      R1, 0 
0x2E6C	0x6EE2      	MOVWF       FSR1L+1 
0x2E6E	0xFFE9C000  	MOVFF       R0, FSR0L
0x2E72	0xFFEAC001  	MOVFF       R1, FSR0H
0x2E76	0xF000CFEE  	MOVFF       POSTINC0, R0
0x2E7A	0xFFE6C000  	MOVFF       R0, POSTINC1
;glcd.c,408 :: 		aste2[i].x -= 1;
0x2E7E	0x0E03      	MOVLW       3
0x2E80	0x6E00      	MOVWF       R0 
0x2E82	0x0E00      	MOVLW       0
0x2E84	0x6E01      	MOVWF       R1 
0x2E86	0xF004C1D3  	MOVFF       move_aste_i_L0, R4
0x2E8A	0x0E00      	MOVLW       0
0x2E8C	0x6E05      	MOVWF       R5 
0x2E8E	0xF001EC42  	CALL        _Mul_16X16_U, 0
0x2E92	0x0E8F      	MOVLW       _aste2
0x2E94	0x2400      	ADDWF       R0, 0 
0x2E96	0x6E02      	MOVWF       R2 
0x2E98	0x0E01      	MOVLW       hi_addr(_aste2)
0x2E9A	0x2001      	ADDWFC      R1, 0 
0x2E9C	0x6E03      	MOVWF       R3 
0x2E9E	0xFFE9C002  	MOVFF       R2, FSR0L
0x2EA2	0xFFEAC003  	MOVFF       R3, FSR0H
0x2EA6	0xF000CFEE  	MOVFF       POSTINC0, R0
0x2EAA	0x0600      	DECF        R0, 1 
0x2EAC	0xFFE1C002  	MOVFF       R2, FSR1L
0x2EB0	0xFFE2C003  	MOVFF       R3, FSR1H
0x2EB4	0xFFE6C000  	MOVFF       R0, POSTINC1
;glcd.c,409 :: 		if(aste2[i].x<=1){
0x2EB8	0x0E03      	MOVLW       3
0x2EBA	0x6E00      	MOVWF       R0 
0x2EBC	0x0E00      	MOVLW       0
0x2EBE	0x6E01      	MOVWF       R1 
0x2EC0	0xF004C1D3  	MOVFF       move_aste_i_L0, R4
0x2EC4	0x0E00      	MOVLW       0
0x2EC6	0x6E05      	MOVWF       R5 
0x2EC8	0xF001EC42  	CALL        _Mul_16X16_U, 0
0x2ECC	0x0E8F      	MOVLW       _aste2
0x2ECE	0x2400      	ADDWF       R0, 0 
0x2ED0	0x6EE9      	MOVWF       FSR0L 
0x2ED2	0x0E01      	MOVLW       hi_addr(_aste2)
0x2ED4	0x2001      	ADDWFC      R1, 0 
0x2ED6	0x6EEA      	MOVWF       FSR0L+1 
0x2ED8	0xF001CFEE  	MOVFF       POSTINC0, R1
0x2EDC	0x0E80      	MOVLW       128
0x2EDE	0x0A01      	XORLW       1
0x2EE0	0x6E00      	MOVWF       R0 
0x2EE2	0x0E80      	MOVLW       128
0x2EE4	0x1801      	XORWF       R1, 0 
0x2EE6	0x5C00      	SUBWF       R0, 0 
0x2EE8	0xE312      	BNC         L_move_aste98
;glcd.c,410 :: 		aste2[i].x = 127;
0x2EEA	0x0E03      	MOVLW       3
0x2EEC	0x6E00      	MOVWF       R0 
0x2EEE	0x0E00      	MOVLW       0
0x2EF0	0x6E01      	MOVWF       R1 
0x2EF2	0xF004C1D3  	MOVFF       move_aste_i_L0, R4
0x2EF6	0x0E00      	MOVLW       0
0x2EF8	0x6E05      	MOVWF       R5 
0x2EFA	0xF001EC42  	CALL        _Mul_16X16_U, 0
0x2EFE	0x0E8F      	MOVLW       _aste2
0x2F00	0x2400      	ADDWF       R0, 0 
0x2F02	0x6EE1      	MOVWF       FSR1L 
0x2F04	0x0E01      	MOVLW       hi_addr(_aste2)
0x2F06	0x2001      	ADDWFC      R1, 0 
0x2F08	0x6EE2      	MOVWF       FSR1L+1 
0x2F0A	0x0E7F      	MOVLW       127
0x2F0C	0x6EE6      	MOVWF       POSTINC1 
;glcd.c,411 :: 		}
L_move_aste98:
;glcd.c,412 :: 		if(turno_player == 1){
0x2F0E	0x0100      	MOVLB       0
0x2F10	0x51F4      	MOVF        _turno_player, 0, 1
0x2F12	0x0A01      	XORLW       1
0x2F14	0xA4D8      	BTFSS       STATUS, 2 
0x2F16	0xD077      	BRA         L_move_aste99
;glcd.c,413 :: 		if((aste2[i].y >= jugador[1].y) &&(aste2[i].y < jugador[1].y + 4)){
0x2F18	0x0E03      	MOVLW       3
0x2F1A	0x6E00      	MOVWF       R0 
0x2F1C	0x0E00      	MOVLW       0
0x2F1E	0x6E01      	MOVWF       R1 
0x2F20	0xF004C1D3  	MOVFF       move_aste_i_L0, R4
0x2F24	0x0E00      	MOVLW       0
0x2F26	0x6E05      	MOVWF       R5 
0x2F28	0xF001EC42  	CALL        _Mul_16X16_U, 0
0x2F2C	0x0E8F      	MOVLW       _aste2
0x2F2E	0x2600      	ADDWF       R0, 1 
0x2F30	0x0E01      	MOVLW       hi_addr(_aste2)
0x2F32	0x2201      	ADDWFC      R1, 1 
0x2F34	0x0E01      	MOVLW       1
0x2F36	0x2400      	ADDWF       R0, 0 
0x2F38	0x6EE9      	MOVWF       FSR0L 
0x2F3A	0x0E00      	MOVLW       0
0x2F3C	0x2001      	ADDWFC      R1, 0 
0x2F3E	0x6EEA      	MOVWF       FSR0L+1 
0x2F40	0xF001CFEE  	MOVFF       POSTINC0, R1
0x2F44	0x0E80      	MOVLW       128
0x2F46	0xBE01      	BTFSC       R1, 7 
0x2F48	0x0E7F      	MOVLW       127
0x2F4A	0x6E00      	MOVWF       R0 
0x2F4C	0x0E80      	MOVLW       128
0x2F4E	0x5C00      	SUBWF       R0, 0 
0x2F50	0xE103      	BNZ         L__move_aste527
0x2F52	0x0101      	MOVLB       1
0x2F54	0x51AC      	MOVF        _jugador+5, 0, 1
0x2F56	0x5C01      	SUBWF       R1, 0 
L__move_aste527:
0x2F58	0xE355      	BNC         L_move_aste102
0x2F5A	0x0101      	MOVLB       1
0x2F5C	0x0E03      	MOVLW       3
0x2F5E	0x6E00      	MOVWF       R0 
0x2F60	0x0E00      	MOVLW       0
0x2F62	0x6E01      	MOVWF       R1 
0x2F64	0xF004C1D3  	MOVFF       move_aste_i_L0, R4
0x2F68	0x0E00      	MOVLW       0
0x2F6A	0x6E05      	MOVWF       R5 
0x2F6C	0xF001EC42  	CALL        _Mul_16X16_U, 0
0x2F70	0x0E8F      	MOVLW       _aste2
0x2F72	0x2600      	ADDWF       R0, 1 
0x2F74	0x0E01      	MOVLW       hi_addr(_aste2)
0x2F76	0x2201      	ADDWFC      R1, 1 
0x2F78	0x0E01      	MOVLW       1
0x2F7A	0x2400      	ADDWF       R0, 0 
0x2F7C	0x6EE9      	MOVWF       FSR0L 
0x2F7E	0x0E00      	MOVLW       0
0x2F80	0x2001      	ADDWFC      R1, 0 
0x2F82	0x6EEA      	MOVWF       FSR0L+1 
0x2F84	0xF003CFEE  	MOVFF       POSTINC0, R3
0x2F88	0x0E04      	MOVLW       4
0x2F8A	0x25AC      	ADDWF       _jugador+5, 0, 1
0x2F8C	0x6E01      	MOVWF       R1 
0x2F8E	0x6A02      	CLRF        R2 
0x2F90	0x0E00      	MOVLW       0
0x2F92	0x2202      	ADDWFC      R2, 1 
0x2F94	0x0E80      	MOVLW       128
0x2F96	0xBE03      	BTFSC       R3, 7 
0x2F98	0x0E7F      	MOVLW       127
0x2F9A	0x6E00      	MOVWF       R0 
0x2F9C	0x0E80      	MOVLW       128
0x2F9E	0x1802      	XORWF       R2, 0 
0x2FA0	0x5C00      	SUBWF       R0, 0 
0x2FA2	0xE102      	BNZ         L__move_aste528
0x2FA4	0x5001      	MOVF        R1, 0 
0x2FA6	0x5C03      	SUBWF       R3, 0 
L__move_aste528:
0x2FA8	0xE22D      	BC          L_move_aste102
L__move_aste481:
;glcd.c,414 :: 		check_coll(jugador[1], aste2[i], 1);
0x2FAA	0x0E04      	MOVLW       4
0x2FAC	0x6E00      	MOVWF       R0 
0x2FAE	0x0EDA      	MOVLW       FARG_check_coll_nave
0x2FB0	0x6EE1      	MOVWF       FSR1L 
0x2FB2	0x0E01      	MOVLW       hi_addr(FARG_check_coll_nave)
0x2FB4	0x6EE2      	MOVWF       FSR1L+1 
0x2FB6	0x0EAB      	MOVLW       _jugador+4
0x2FB8	0x6EE9      	MOVWF       FSR0L 
0x2FBA	0x0E01      	MOVLW       hi_addr(_jugador+4)
0x2FBC	0x6EEA      	MOVWF       FSR0L+1 
L_move_aste103:
0x2FBE	0xFFE6CFEE  	MOVFF       POSTINC0, POSTINC1
0x2FC2	0x0600      	DECF        R0, 1 
0x2FC4	0xE1FC      	BNZ         L_move_aste103
0x2FC6	0x0E03      	MOVLW       3
0x2FC8	0x6E00      	MOVWF       R0 
0x2FCA	0x0E00      	MOVLW       0
0x2FCC	0x6E01      	MOVWF       R1 
0x2FCE	0xF004C1D3  	MOVFF       move_aste_i_L0, R4
0x2FD2	0x0E00      	MOVLW       0
0x2FD4	0x6E05      	MOVWF       R5 
0x2FD6	0xF001EC42  	CALL        _Mul_16X16_U, 0
0x2FDA	0x0E8F      	MOVLW       _aste2
0x2FDC	0x2400      	ADDWF       R0, 0 
0x2FDE	0x6EE9      	MOVWF       FSR0L 
0x2FE0	0x0E01      	MOVLW       hi_addr(_aste2)
0x2FE2	0x2001      	ADDWFC      R1, 0 
0x2FE4	0x6EEA      	MOVWF       FSR0L+1 
0x2FE6	0x0E03      	MOVLW       3
0x2FE8	0x6E00      	MOVWF       R0 
0x2FEA	0x0EDE      	MOVLW       FARG_check_coll_aste
0x2FEC	0x6EE1      	MOVWF       FSR1L 
0x2FEE	0x0E01      	MOVLW       hi_addr(FARG_check_coll_aste)
0x2FF0	0x6EE2      	MOVWF       FSR1L+1 
L_move_aste104:
0x2FF2	0xFFE6CFEE  	MOVFF       POSTINC0, POSTINC1
0x2FF6	0x0600      	DECF        R0, 1 
0x2FF8	0xE1FC      	BNZ         L_move_aste104
0x2FFA	0x0101      	MOVLB       1
0x2FFC	0x0E01      	MOVLW       1
0x2FFE	0x6FE1      	MOVWF       FARG_check_coll_num, 1
0x3000	0xF008EC0B  	CALL        _check_coll, 0
;glcd.c,415 :: 		}
L_move_aste102:
;glcd.c,416 :: 		}
0x3004	0xD07B      	BRA         L_move_aste105
L_move_aste99:
;glcd.c,417 :: 		else if(turno_player == 2){
0x3006	0x0100      	MOVLB       0
0x3008	0x51F4      	MOVF        _turno_player, 0, 1
0x300A	0x0A02      	XORLW       2
0x300C	0xA4D8      	BTFSS       STATUS, 2 
0x300E	0xD076      	BRA         L_move_aste106
;glcd.c,418 :: 		if((aste2[i].y >= jugador[0].y) &&(aste2[i].y < jugador[0].y + 4)){
0x3010	0x0E03      	MOVLW       3
0x3012	0x6E00      	MOVWF       R0 
0x3014	0x0E00      	MOVLW       0
0x3016	0x6E01      	MOVWF       R1 
0x3018	0xF004C1D3  	MOVFF       move_aste_i_L0, R4
0x301C	0x0E00      	MOVLW       0
0x301E	0x6E05      	MOVWF       R5 
0x3020	0xF001EC42  	CALL        _Mul_16X16_U, 0
0x3024	0x0E8F      	MOVLW       _aste2
0x3026	0x2600      	ADDWF       R0, 1 
0x3028	0x0E01      	MOVLW       hi_addr(_aste2)
0x302A	0x2201      	ADDWFC      R1, 1 
0x302C	0x0E01      	MOVLW       1
0x302E	0x2400      	ADDWF       R0, 0 
0x3030	0x6EE9      	MOVWF       FSR0L 
0x3032	0x0E00      	MOVLW       0
0x3034	0x2001      	ADDWFC      R1, 0 
0x3036	0x6EEA      	MOVWF       FSR0L+1 
0x3038	0xF001CFEE  	MOVFF       POSTINC0, R1
0x303C	0x0E80      	MOVLW       128
0x303E	0xBE01      	BTFSC       R1, 7 
0x3040	0x0E7F      	MOVLW       127
0x3042	0x6E00      	MOVWF       R0 
0x3044	0x0E80      	MOVLW       128
0x3046	0x5C00      	SUBWF       R0, 0 
0x3048	0xE103      	BNZ         L__move_aste529
0x304A	0x0101      	MOVLB       1
0x304C	0x51A8      	MOVF        _jugador+1, 0, 1
0x304E	0x5C01      	SUBWF       R1, 0 
L__move_aste529:
0x3050	0xE355      	BNC         L_move_aste109
0x3052	0x0101      	MOVLB       1
0x3054	0x0E03      	MOVLW       3
0x3056	0x6E00      	MOVWF       R0 
0x3058	0x0E00      	MOVLW       0
0x305A	0x6E01      	MOVWF       R1 
0x305C	0xF004C1D3  	MOVFF       move_aste_i_L0, R4
0x3060	0x0E00      	MOVLW       0
0x3062	0x6E05      	MOVWF       R5 
0x3064	0xF001EC42  	CALL        _Mul_16X16_U, 0
0x3068	0x0E8F      	MOVLW       _aste2
0x306A	0x2600      	ADDWF       R0, 1 
0x306C	0x0E01      	MOVLW       hi_addr(_aste2)
0x306E	0x2201      	ADDWFC      R1, 1 
0x3070	0x0E01      	MOVLW       1
0x3072	0x2400      	ADDWF       R0, 0 
0x3074	0x6EE9      	MOVWF       FSR0L 
0x3076	0x0E00      	MOVLW       0
0x3078	0x2001      	ADDWFC      R1, 0 
0x307A	0x6EEA      	MOVWF       FSR0L+1 
0x307C	0xF003CFEE  	MOVFF       POSTINC0, R3
0x3080	0x0E04      	MOVLW       4
0x3082	0x25A8      	ADDWF       _jugador+1, 0, 1
0x3084	0x6E01      	MOVWF       R1 
0x3086	0x6A02      	CLRF        R2 
0x3088	0x0E00      	MOVLW       0
0x308A	0x2202      	ADDWFC      R2, 1 
0x308C	0x0E80      	MOVLW       128
0x308E	0xBE03      	BTFSC       R3, 7 
0x3090	0x0E7F      	MOVLW       127
0x3092	0x6E00      	MOVWF       R0 
0x3094	0x0E80      	MOVLW       128
0x3096	0x1802      	XORWF       R2, 0 
0x3098	0x5C00      	SUBWF       R0, 0 
0x309A	0xE102      	BNZ         L__move_aste530
0x309C	0x5001      	MOVF        R1, 0 
0x309E	0x5C03      	SUBWF       R3, 0 
L__move_aste530:
0x30A0	0xE22D      	BC          L_move_aste109
L__move_aste480:
;glcd.c,419 :: 		check_coll(jugador[0], aste2[i], 1);
0x30A2	0x0E04      	MOVLW       4
0x30A4	0x6E00      	MOVWF       R0 
0x30A6	0x0EDA      	MOVLW       FARG_check_coll_nave
0x30A8	0x6EE1      	MOVWF       FSR1L 
0x30AA	0x0E01      	MOVLW       hi_addr(FARG_check_coll_nave)
0x30AC	0x6EE2      	MOVWF       FSR1L+1 
0x30AE	0x0EA7      	MOVLW       _jugador
0x30B0	0x6EE9      	MOVWF       FSR0L 
0x30B2	0x0E01      	MOVLW       hi_addr(_jugador)
0x30B4	0x6EEA      	MOVWF       FSR0L+1 
L_move_aste110:
0x30B6	0xFFE6CFEE  	MOVFF       POSTINC0, POSTINC1
0x30BA	0x0600      	DECF        R0, 1 
0x30BC	0xE1FC      	BNZ         L_move_aste110
0x30BE	0x0E03      	MOVLW       3
0x30C0	0x6E00      	MOVWF       R0 
0x30C2	0x0E00      	MOVLW       0
0x30C4	0x6E01      	MOVWF       R1 
0x30C6	0xF004C1D3  	MOVFF       move_aste_i_L0, R4
0x30CA	0x0E00      	MOVLW       0
0x30CC	0x6E05      	MOVWF       R5 
0x30CE	0xF001EC42  	CALL        _Mul_16X16_U, 0
0x30D2	0x0E8F      	MOVLW       _aste2
0x30D4	0x2400      	ADDWF       R0, 0 
0x30D6	0x6EE9      	MOVWF       FSR0L 
0x30D8	0x0E01      	MOVLW       hi_addr(_aste2)
0x30DA	0x2001      	ADDWFC      R1, 0 
0x30DC	0x6EEA      	MOVWF       FSR0L+1 
0x30DE	0x0E03      	MOVLW       3
0x30E0	0x6E00      	MOVWF       R0 
0x30E2	0x0EDE      	MOVLW       FARG_check_coll_aste
0x30E4	0x6EE1      	MOVWF       FSR1L 
0x30E6	0x0E01      	MOVLW       hi_addr(FARG_check_coll_aste)
0x30E8	0x6EE2      	MOVWF       FSR1L+1 
L_move_aste111:
0x30EA	0xFFE6CFEE  	MOVFF       POSTINC0, POSTINC1
0x30EE	0x0600      	DECF        R0, 1 
0x30F0	0xE1FC      	BNZ         L_move_aste111
0x30F2	0x0101      	MOVLB       1
0x30F4	0x0E01      	MOVLW       1
0x30F6	0x6FE1      	MOVWF       FARG_check_coll_num, 1
0x30F8	0xF008EC0B  	CALL        _check_coll, 0
;glcd.c,420 :: 		}
L_move_aste109:
;glcd.c,421 :: 		}
L_move_aste106:
L_move_aste105:
;glcd.c,406 :: 		for(i = 0; i <4; i++){
0x30FC	0x0101      	MOVLB       1
0x30FE	0x2BD3      	INCF        move_aste_i_L0, 1, 1
;glcd.c,422 :: 		}
0x3100	0xD69E      	BRA         L_move_aste95
L_move_aste96:
;glcd.c,423 :: 		for(i = 0; i <4; i++){
0x3102	0x6BD3      	CLRF        move_aste_i_L0, 1
L_move_aste112:
0x3104	0x0E04      	MOVLW       4
0x3106	0x5DD3      	SUBWF       move_aste_i_L0, 0, 1
0x3108	0xB0D8      	BTFSC       STATUS, 0 
0x310A	0xD15E      	BRA         L_move_aste113
;glcd.c,424 :: 		aste3[i].old_x = aste3[i].x;
0x310C	0x0E03      	MOVLW       3
0x310E	0x6E00      	MOVWF       R0 
0x3110	0x0E00      	MOVLW       0
0x3112	0x6E01      	MOVWF       R1 
0x3114	0xF004C1D3  	MOVFF       move_aste_i_L0, R4
0x3118	0x0E00      	MOVLW       0
0x311A	0x6E05      	MOVWF       R5 
0x311C	0xF001EC42  	CALL        _Mul_16X16_U, 0
0x3120	0x0E5F      	MOVLW       _aste3
0x3122	0x2600      	ADDWF       R0, 1 
0x3124	0x0E01      	MOVLW       hi_addr(_aste3)
0x3126	0x2201      	ADDWFC      R1, 1 
0x3128	0x0E02      	MOVLW       2
0x312A	0x2400      	ADDWF       R0, 0 
0x312C	0x6EE1      	MOVWF       FSR1L 
0x312E	0x0E00      	MOVLW       0
0x3130	0x2001      	ADDWFC      R1, 0 
0x3132	0x6EE2      	MOVWF       FSR1L+1 
0x3134	0xFFE9C000  	MOVFF       R0, FSR0L
0x3138	0xFFEAC001  	MOVFF       R1, FSR0H
0x313C	0xF000CFEE  	MOVFF       POSTINC0, R0
0x3140	0xFFE6C000  	MOVFF       R0, POSTINC1
;glcd.c,425 :: 		aste3[i].x -= 1;
0x3144	0x0E03      	MOVLW       3
0x3146	0x6E00      	MOVWF       R0 
0x3148	0x0E00      	MOVLW       0
0x314A	0x6E01      	MOVWF       R1 
0x314C	0xF004C1D3  	MOVFF       move_aste_i_L0, R4
0x3150	0x0E00      	MOVLW       0
0x3152	0x6E05      	MOVWF       R5 
0x3154	0xF001EC42  	CALL        _Mul_16X16_U, 0
0x3158	0x0E5F      	MOVLW       _aste3
0x315A	0x2400      	ADDWF       R0, 0 
0x315C	0x6E02      	MOVWF       R2 
0x315E	0x0E01      	MOVLW       hi_addr(_aste3)
0x3160	0x2001      	ADDWFC      R1, 0 
0x3162	0x6E03      	MOVWF       R3 
0x3164	0xFFE9C002  	MOVFF       R2, FSR0L
0x3168	0xFFEAC003  	MOVFF       R3, FSR0H
0x316C	0xF000CFEE  	MOVFF       POSTINC0, R0
0x3170	0x0600      	DECF        R0, 1 
0x3172	0xFFE1C002  	MOVFF       R2, FSR1L
0x3176	0xFFE2C003  	MOVFF       R3, FSR1H
0x317A	0xFFE6C000  	MOVFF       R0, POSTINC1
;glcd.c,426 :: 		if(aste3[i].x<=1){
0x317E	0x0E03      	MOVLW       3
0x3180	0x6E00      	MOVWF       R0 
0x3182	0x0E00      	MOVLW       0
0x3184	0x6E01      	MOVWF       R1 
0x3186	0xF004C1D3  	MOVFF       move_aste_i_L0, R4
0x318A	0x0E00      	MOVLW       0
0x318C	0x6E05      	MOVWF       R5 
0x318E	0xF001EC42  	CALL        _Mul_16X16_U, 0
0x3192	0x0E5F      	MOVLW       _aste3
0x3194	0x2400      	ADDWF       R0, 0 
0x3196	0x6EE9      	MOVWF       FSR0L 
0x3198	0x0E01      	MOVLW       hi_addr(_aste3)
0x319A	0x2001      	ADDWFC      R1, 0 
0x319C	0x6EEA      	MOVWF       FSR0L+1 
0x319E	0xF001CFEE  	MOVFF       POSTINC0, R1
0x31A2	0x0E80      	MOVLW       128
0x31A4	0x0A01      	XORLW       1
0x31A6	0x6E00      	MOVWF       R0 
0x31A8	0x0E80      	MOVLW       128
0x31AA	0x1801      	XORWF       R1, 0 
0x31AC	0x5C00      	SUBWF       R0, 0 
0x31AE	0xE312      	BNC         L_move_aste115
;glcd.c,427 :: 		aste3[i].x = 127;
0x31B0	0x0E03      	MOVLW       3
0x31B2	0x6E00      	MOVWF       R0 
0x31B4	0x0E00      	MOVLW       0
0x31B6	0x6E01      	MOVWF       R1 
0x31B8	0xF004C1D3  	MOVFF       move_aste_i_L0, R4
0x31BC	0x0E00      	MOVLW       0
0x31BE	0x6E05      	MOVWF       R5 
0x31C0	0xF001EC42  	CALL        _Mul_16X16_U, 0
0x31C4	0x0E5F      	MOVLW       _aste3
0x31C6	0x2400      	ADDWF       R0, 0 
0x31C8	0x6EE1      	MOVWF       FSR1L 
0x31CA	0x0E01      	MOVLW       hi_addr(_aste3)
0x31CC	0x2001      	ADDWFC      R1, 0 
0x31CE	0x6EE2      	MOVWF       FSR1L+1 
0x31D0	0x0E7F      	MOVLW       127
0x31D2	0x6EE6      	MOVWF       POSTINC1 
;glcd.c,428 :: 		}
L_move_aste115:
;glcd.c,429 :: 		if(turno_player == 1){
0x31D4	0x0100      	MOVLB       0
0x31D6	0x51F4      	MOVF        _turno_player, 0, 1
0x31D8	0x0A01      	XORLW       1
0x31DA	0xA4D8      	BTFSS       STATUS, 2 
0x31DC	0xD077      	BRA         L_move_aste116
;glcd.c,430 :: 		if((aste3[i].y >= jugador[1].y) &&(aste3[i].y < jugador[1].y + 4)){
0x31DE	0x0E03      	MOVLW       3
0x31E0	0x6E00      	MOVWF       R0 
0x31E2	0x0E00      	MOVLW       0
0x31E4	0x6E01      	MOVWF       R1 
0x31E6	0xF004C1D3  	MOVFF       move_aste_i_L0, R4
0x31EA	0x0E00      	MOVLW       0
0x31EC	0x6E05      	MOVWF       R5 
0x31EE	0xF001EC42  	CALL        _Mul_16X16_U, 0
0x31F2	0x0E5F      	MOVLW       _aste3
0x31F4	0x2600      	ADDWF       R0, 1 
0x31F6	0x0E01      	MOVLW       hi_addr(_aste3)
0x31F8	0x2201      	ADDWFC      R1, 1 
0x31FA	0x0E01      	MOVLW       1
0x31FC	0x2400      	ADDWF       R0, 0 
0x31FE	0x6EE9      	MOVWF       FSR0L 
0x3200	0x0E00      	MOVLW       0
0x3202	0x2001      	ADDWFC      R1, 0 
0x3204	0x6EEA      	MOVWF       FSR0L+1 
0x3206	0xF001CFEE  	MOVFF       POSTINC0, R1
0x320A	0x0E80      	MOVLW       128
0x320C	0xBE01      	BTFSC       R1, 7 
0x320E	0x0E7F      	MOVLW       127
0x3210	0x6E00      	MOVWF       R0 
0x3212	0x0E80      	MOVLW       128
0x3214	0x5C00      	SUBWF       R0, 0 
0x3216	0xE103      	BNZ         L__move_aste531
0x3218	0x0101      	MOVLB       1
0x321A	0x51AC      	MOVF        _jugador+5, 0, 1
0x321C	0x5C01      	SUBWF       R1, 0 
L__move_aste531:
0x321E	0xE355      	BNC         L_move_aste119
0x3220	0x0101      	MOVLB       1
0x3222	0x0E03      	MOVLW       3
0x3224	0x6E00      	MOVWF       R0 
0x3226	0x0E00      	MOVLW       0
0x3228	0x6E01      	MOVWF       R1 
0x322A	0xF004C1D3  	MOVFF       move_aste_i_L0, R4
0x322E	0x0E00      	MOVLW       0
0x3230	0x6E05      	MOVWF       R5 
0x3232	0xF001EC42  	CALL        _Mul_16X16_U, 0
0x3236	0x0E5F      	MOVLW       _aste3
0x3238	0x2600      	ADDWF       R0, 1 
0x323A	0x0E01      	MOVLW       hi_addr(_aste3)
0x323C	0x2201      	ADDWFC      R1, 1 
0x323E	0x0E01      	MOVLW       1
0x3240	0x2400      	ADDWF       R0, 0 
0x3242	0x6EE9      	MOVWF       FSR0L 
0x3244	0x0E00      	MOVLW       0
0x3246	0x2001      	ADDWFC      R1, 0 
0x3248	0x6EEA      	MOVWF       FSR0L+1 
0x324A	0xF003CFEE  	MOVFF       POSTINC0, R3
0x324E	0x0E04      	MOVLW       4
0x3250	0x25AC      	ADDWF       _jugador+5, 0, 1
0x3252	0x6E01      	MOVWF       R1 
0x3254	0x6A02      	CLRF        R2 
0x3256	0x0E00      	MOVLW       0
0x3258	0x2202      	ADDWFC      R2, 1 
0x325A	0x0E80      	MOVLW       128
0x325C	0xBE03      	BTFSC       R3, 7 
0x325E	0x0E7F      	MOVLW       127
0x3260	0x6E00      	MOVWF       R0 
0x3262	0x0E80      	MOVLW       128
0x3264	0x1802      	XORWF       R2, 0 
0x3266	0x5C00      	SUBWF       R0, 0 
0x3268	0xE102      	BNZ         L__move_aste532
0x326A	0x5001      	MOVF        R1, 0 
0x326C	0x5C03      	SUBWF       R3, 0 
L__move_aste532:
0x326E	0xE22D      	BC          L_move_aste119
L__move_aste479:
;glcd.c,431 :: 		check_coll(jugador[1], aste3[i], 1);
0x3270	0x0E04      	MOVLW       4
0x3272	0x6E00      	MOVWF       R0 
0x3274	0x0EDA      	MOVLW       FARG_check_coll_nave
0x3276	0x6EE1      	MOVWF       FSR1L 
0x3278	0x0E01      	MOVLW       hi_addr(FARG_check_coll_nave)
0x327A	0x6EE2      	MOVWF       FSR1L+1 
0x327C	0x0EAB      	MOVLW       _jugador+4
0x327E	0x6EE9      	MOVWF       FSR0L 
0x3280	0x0E01      	MOVLW       hi_addr(_jugador+4)
0x3282	0x6EEA      	MOVWF       FSR0L+1 
L_move_aste120:
0x3284	0xFFE6CFEE  	MOVFF       POSTINC0, POSTINC1
0x3288	0x0600      	DECF        R0, 1 
0x328A	0xE1FC      	BNZ         L_move_aste120
0x328C	0x0E03      	MOVLW       3
0x328E	0x6E00      	MOVWF       R0 
0x3290	0x0E00      	MOVLW       0
0x3292	0x6E01      	MOVWF       R1 
0x3294	0xF004C1D3  	MOVFF       move_aste_i_L0, R4
0x3298	0x0E00      	MOVLW       0
0x329A	0x6E05      	MOVWF       R5 
0x329C	0xF001EC42  	CALL        _Mul_16X16_U, 0
0x32A0	0x0E5F      	MOVLW       _aste3
0x32A2	0x2400      	ADDWF       R0, 0 
0x32A4	0x6EE9      	MOVWF       FSR0L 
0x32A6	0x0E01      	MOVLW       hi_addr(_aste3)
0x32A8	0x2001      	ADDWFC      R1, 0 
0x32AA	0x6EEA      	MOVWF       FSR0L+1 
0x32AC	0x0E03      	MOVLW       3
0x32AE	0x6E00      	MOVWF       R0 
0x32B0	0x0EDE      	MOVLW       FARG_check_coll_aste
0x32B2	0x6EE1      	MOVWF       FSR1L 
0x32B4	0x0E01      	MOVLW       hi_addr(FARG_check_coll_aste)
0x32B6	0x6EE2      	MOVWF       FSR1L+1 
L_move_aste121:
0x32B8	0xFFE6CFEE  	MOVFF       POSTINC0, POSTINC1
0x32BC	0x0600      	DECF        R0, 1 
0x32BE	0xE1FC      	BNZ         L_move_aste121
0x32C0	0x0101      	MOVLB       1
0x32C2	0x0E01      	MOVLW       1
0x32C4	0x6FE1      	MOVWF       FARG_check_coll_num, 1
0x32C6	0xF008EC0B  	CALL        _check_coll, 0
;glcd.c,432 :: 		}
L_move_aste119:
;glcd.c,433 :: 		}
0x32CA	0xD07B      	BRA         L_move_aste122
L_move_aste116:
;glcd.c,434 :: 		else if(turno_player == 2){
0x32CC	0x0100      	MOVLB       0
0x32CE	0x51F4      	MOVF        _turno_player, 0, 1
0x32D0	0x0A02      	XORLW       2
0x32D2	0xA4D8      	BTFSS       STATUS, 2 
0x32D4	0xD076      	BRA         L_move_aste123
;glcd.c,435 :: 		if((aste3[i].y >= jugador[0].y) &&(aste3[i].y < jugador[0].y + 4)){
0x32D6	0x0E03      	MOVLW       3
0x32D8	0x6E00      	MOVWF       R0 
0x32DA	0x0E00      	MOVLW       0
0x32DC	0x6E01      	MOVWF       R1 
0x32DE	0xF004C1D3  	MOVFF       move_aste_i_L0, R4
0x32E2	0x0E00      	MOVLW       0
0x32E4	0x6E05      	MOVWF       R5 
0x32E6	0xF001EC42  	CALL        _Mul_16X16_U, 0
0x32EA	0x0E5F      	MOVLW       _aste3
0x32EC	0x2600      	ADDWF       R0, 1 
0x32EE	0x0E01      	MOVLW       hi_addr(_aste3)
0x32F0	0x2201      	ADDWFC      R1, 1 
0x32F2	0x0E01      	MOVLW       1
0x32F4	0x2400      	ADDWF       R0, 0 
0x32F6	0x6EE9      	MOVWF       FSR0L 
0x32F8	0x0E00      	MOVLW       0
0x32FA	0x2001      	ADDWFC      R1, 0 
0x32FC	0x6EEA      	MOVWF       FSR0L+1 
0x32FE	0xF001CFEE  	MOVFF       POSTINC0, R1
0x3302	0x0E80      	MOVLW       128
0x3304	0xBE01      	BTFSC       R1, 7 
0x3306	0x0E7F      	MOVLW       127
0x3308	0x6E00      	MOVWF       R0 
0x330A	0x0E80      	MOVLW       128
0x330C	0x5C00      	SUBWF       R0, 0 
0x330E	0xE103      	BNZ         L__move_aste533
0x3310	0x0101      	MOVLB       1
0x3312	0x51A8      	MOVF        _jugador+1, 0, 1
0x3314	0x5C01      	SUBWF       R1, 0 
L__move_aste533:
0x3316	0xE355      	BNC         L_move_aste126
0x3318	0x0101      	MOVLB       1
0x331A	0x0E03      	MOVLW       3
0x331C	0x6E00      	MOVWF       R0 
0x331E	0x0E00      	MOVLW       0
0x3320	0x6E01      	MOVWF       R1 
0x3322	0xF004C1D3  	MOVFF       move_aste_i_L0, R4
0x3326	0x0E00      	MOVLW       0
0x3328	0x6E05      	MOVWF       R5 
0x332A	0xF001EC42  	CALL        _Mul_16X16_U, 0
0x332E	0x0E5F      	MOVLW       _aste3
0x3330	0x2600      	ADDWF       R0, 1 
0x3332	0x0E01      	MOVLW       hi_addr(_aste3)
0x3334	0x2201      	ADDWFC      R1, 1 
0x3336	0x0E01      	MOVLW       1
0x3338	0x2400      	ADDWF       R0, 0 
0x333A	0x6EE9      	MOVWF       FSR0L 
0x333C	0x0E00      	MOVLW       0
0x333E	0x2001      	ADDWFC      R1, 0 
0x3340	0x6EEA      	MOVWF       FSR0L+1 
0x3342	0xF003CFEE  	MOVFF       POSTINC0, R3
0x3346	0x0E04      	MOVLW       4
0x3348	0x25A8      	ADDWF       _jugador+1, 0, 1
0x334A	0x6E01      	MOVWF       R1 
0x334C	0x6A02      	CLRF        R2 
0x334E	0x0E00      	MOVLW       0
0x3350	0x2202      	ADDWFC      R2, 1 
0x3352	0x0E80      	MOVLW       128
0x3354	0xBE03      	BTFSC       R3, 7 
0x3356	0x0E7F      	MOVLW       127
0x3358	0x6E00      	MOVWF       R0 
0x335A	0x0E80      	MOVLW       128
0x335C	0x1802      	XORWF       R2, 0 
0x335E	0x5C00      	SUBWF       R0, 0 
0x3360	0xE102      	BNZ         L__move_aste534
0x3362	0x5001      	MOVF        R1, 0 
0x3364	0x5C03      	SUBWF       R3, 0 
L__move_aste534:
0x3366	0xE22D      	BC          L_move_aste126
L__move_aste478:
;glcd.c,436 :: 		check_coll(jugador[0], aste3[i], 1);
0x3368	0x0E04      	MOVLW       4
0x336A	0x6E00      	MOVWF       R0 
0x336C	0x0EDA      	MOVLW       FARG_check_coll_nave
0x336E	0x6EE1      	MOVWF       FSR1L 
0x3370	0x0E01      	MOVLW       hi_addr(FARG_check_coll_nave)
0x3372	0x6EE2      	MOVWF       FSR1L+1 
0x3374	0x0EA7      	MOVLW       _jugador
0x3376	0x6EE9      	MOVWF       FSR0L 
0x3378	0x0E01      	MOVLW       hi_addr(_jugador)
0x337A	0x6EEA      	MOVWF       FSR0L+1 
L_move_aste127:
0x337C	0xFFE6CFEE  	MOVFF       POSTINC0, POSTINC1
0x3380	0x0600      	DECF        R0, 1 
0x3382	0xE1FC      	BNZ         L_move_aste127
0x3384	0x0E03      	MOVLW       3
0x3386	0x6E00      	MOVWF       R0 
0x3388	0x0E00      	MOVLW       0
0x338A	0x6E01      	MOVWF       R1 
0x338C	0xF004C1D3  	MOVFF       move_aste_i_L0, R4
0x3390	0x0E00      	MOVLW       0
0x3392	0x6E05      	MOVWF       R5 
0x3394	0xF001EC42  	CALL        _Mul_16X16_U, 0
0x3398	0x0E5F      	MOVLW       _aste3
0x339A	0x2400      	ADDWF       R0, 0 
0x339C	0x6EE9      	MOVWF       FSR0L 
0x339E	0x0E01      	MOVLW       hi_addr(_aste3)
0x33A0	0x2001      	ADDWFC      R1, 0 
0x33A2	0x6EEA      	MOVWF       FSR0L+1 
0x33A4	0x0E03      	MOVLW       3
0x33A6	0x6E00      	MOVWF       R0 
0x33A8	0x0EDE      	MOVLW       FARG_check_coll_aste
0x33AA	0x6EE1      	MOVWF       FSR1L 
0x33AC	0x0E01      	MOVLW       hi_addr(FARG_check_coll_aste)
0x33AE	0x6EE2      	MOVWF       FSR1L+1 
L_move_aste128:
0x33B0	0xFFE6CFEE  	MOVFF       POSTINC0, POSTINC1
0x33B4	0x0600      	DECF        R0, 1 
0x33B6	0xE1FC      	BNZ         L_move_aste128
0x33B8	0x0101      	MOVLB       1
0x33BA	0x0E01      	MOVLW       1
0x33BC	0x6FE1      	MOVWF       FARG_check_coll_num, 1
0x33BE	0xF008EC0B  	CALL        _check_coll, 0
;glcd.c,437 :: 		}
L_move_aste126:
;glcd.c,438 :: 		}
L_move_aste123:
L_move_aste122:
;glcd.c,423 :: 		for(i = 0; i <4; i++){
0x33C2	0x0101      	MOVLB       1
0x33C4	0x2BD3      	INCF        move_aste_i_L0, 1, 1
;glcd.c,439 :: 		}
0x33C6	0xD69E      	BRA         L_move_aste112
L_move_aste113:
;glcd.c,440 :: 		for(i = 0; i <4; i++){
0x33C8	0x6BD3      	CLRF        move_aste_i_L0, 1
L_move_aste129:
0x33CA	0x0E04      	MOVLW       4
0x33CC	0x5DD3      	SUBWF       move_aste_i_L0, 0, 1
0x33CE	0xB0D8      	BTFSC       STATUS, 0 
0x33D0	0xD15E      	BRA         L_move_aste130
;glcd.c,441 :: 		aste5[i].old_x = aste5[i].x;
0x33D2	0x0E03      	MOVLW       3
0x33D4	0x6E00      	MOVWF       R0 
0x33D6	0x0E00      	MOVLW       0
0x33D8	0x6E01      	MOVWF       R1 
0x33DA	0xF004C1D3  	MOVFF       move_aste_i_L0, R4
0x33DE	0x0E00      	MOVLW       0
0x33E0	0x6E05      	MOVWF       R5 
0x33E2	0xF001EC42  	CALL        _Mul_16X16_U, 0
0x33E6	0x0E9B      	MOVLW       _aste5
0x33E8	0x2600      	ADDWF       R0, 1 
0x33EA	0x0E01      	MOVLW       hi_addr(_aste5)
0x33EC	0x2201      	ADDWFC      R1, 1 
0x33EE	0x0E02      	MOVLW       2
0x33F0	0x2400      	ADDWF       R0, 0 
0x33F2	0x6EE1      	MOVWF       FSR1L 
0x33F4	0x0E00      	MOVLW       0
0x33F6	0x2001      	ADDWFC      R1, 0 
0x33F8	0x6EE2      	MOVWF       FSR1L+1 
0x33FA	0xFFE9C000  	MOVFF       R0, FSR0L
0x33FE	0xFFEAC001  	MOVFF       R1, FSR0H
0x3402	0xF000CFEE  	MOVFF       POSTINC0, R0
0x3406	0xFFE6C000  	MOVFF       R0, POSTINC1
;glcd.c,442 :: 		aste5[i].x -= 1;
0x340A	0x0E03      	MOVLW       3
0x340C	0x6E00      	MOVWF       R0 
0x340E	0x0E00      	MOVLW       0
0x3410	0x6E01      	MOVWF       R1 
0x3412	0xF004C1D3  	MOVFF       move_aste_i_L0, R4
0x3416	0x0E00      	MOVLW       0
0x3418	0x6E05      	MOVWF       R5 
0x341A	0xF001EC42  	CALL        _Mul_16X16_U, 0
0x341E	0x0E9B      	MOVLW       _aste5
0x3420	0x2400      	ADDWF       R0, 0 
0x3422	0x6E02      	MOVWF       R2 
0x3424	0x0E01      	MOVLW       hi_addr(_aste5)
0x3426	0x2001      	ADDWFC      R1, 0 
0x3428	0x6E03      	MOVWF       R3 
0x342A	0xFFE9C002  	MOVFF       R2, FSR0L
0x342E	0xFFEAC003  	MOVFF       R3, FSR0H
0x3432	0xF000CFEE  	MOVFF       POSTINC0, R0
0x3436	0x0600      	DECF        R0, 1 
0x3438	0xFFE1C002  	MOVFF       R2, FSR1L
0x343C	0xFFE2C003  	MOVFF       R3, FSR1H
0x3440	0xFFE6C000  	MOVFF       R0, POSTINC1
;glcd.c,443 :: 		if(aste5[i].x<=1){
0x3444	0x0E03      	MOVLW       3
0x3446	0x6E00      	MOVWF       R0 
0x3448	0x0E00      	MOVLW       0
0x344A	0x6E01      	MOVWF       R1 
0x344C	0xF004C1D3  	MOVFF       move_aste_i_L0, R4
0x3450	0x0E00      	MOVLW       0
0x3452	0x6E05      	MOVWF       R5 
0x3454	0xF001EC42  	CALL        _Mul_16X16_U, 0
0x3458	0x0E9B      	MOVLW       _aste5
0x345A	0x2400      	ADDWF       R0, 0 
0x345C	0x6EE9      	MOVWF       FSR0L 
0x345E	0x0E01      	MOVLW       hi_addr(_aste5)
0x3460	0x2001      	ADDWFC      R1, 0 
0x3462	0x6EEA      	MOVWF       FSR0L+1 
0x3464	0xF001CFEE  	MOVFF       POSTINC0, R1
0x3468	0x0E80      	MOVLW       128
0x346A	0x0A01      	XORLW       1
0x346C	0x6E00      	MOVWF       R0 
0x346E	0x0E80      	MOVLW       128
0x3470	0x1801      	XORWF       R1, 0 
0x3472	0x5C00      	SUBWF       R0, 0 
0x3474	0xE312      	BNC         L_move_aste132
;glcd.c,444 :: 		aste5[i].x = 127;
0x3476	0x0E03      	MOVLW       3
0x3478	0x6E00      	MOVWF       R0 
0x347A	0x0E00      	MOVLW       0
0x347C	0x6E01      	MOVWF       R1 
0x347E	0xF004C1D3  	MOVFF       move_aste_i_L0, R4
0x3482	0x0E00      	MOVLW       0
0x3484	0x6E05      	MOVWF       R5 
0x3486	0xF001EC42  	CALL        _Mul_16X16_U, 0
0x348A	0x0E9B      	MOVLW       _aste5
0x348C	0x2400      	ADDWF       R0, 0 
0x348E	0x6EE1      	MOVWF       FSR1L 
0x3490	0x0E01      	MOVLW       hi_addr(_aste5)
0x3492	0x2001      	ADDWFC      R1, 0 
0x3494	0x6EE2      	MOVWF       FSR1L+1 
0x3496	0x0E7F      	MOVLW       127
0x3498	0x6EE6      	MOVWF       POSTINC1 
;glcd.c,445 :: 		}
L_move_aste132:
;glcd.c,446 :: 		if(turno_player == 1){
0x349A	0x0100      	MOVLB       0
0x349C	0x51F4      	MOVF        _turno_player, 0, 1
0x349E	0x0A01      	XORLW       1
0x34A0	0xA4D8      	BTFSS       STATUS, 2 
0x34A2	0xD077      	BRA         L_move_aste133
;glcd.c,447 :: 		if((aste5[i].y >= jugador[1].y) &&(aste5[i].y < jugador[1].y + 4)){
0x34A4	0x0E03      	MOVLW       3
0x34A6	0x6E00      	MOVWF       R0 
0x34A8	0x0E00      	MOVLW       0
0x34AA	0x6E01      	MOVWF       R1 
0x34AC	0xF004C1D3  	MOVFF       move_aste_i_L0, R4
0x34B0	0x0E00      	MOVLW       0
0x34B2	0x6E05      	MOVWF       R5 
0x34B4	0xF001EC42  	CALL        _Mul_16X16_U, 0
0x34B8	0x0E9B      	MOVLW       _aste5
0x34BA	0x2600      	ADDWF       R0, 1 
0x34BC	0x0E01      	MOVLW       hi_addr(_aste5)
0x34BE	0x2201      	ADDWFC      R1, 1 
0x34C0	0x0E01      	MOVLW       1
0x34C2	0x2400      	ADDWF       R0, 0 
0x34C4	0x6EE9      	MOVWF       FSR0L 
0x34C6	0x0E00      	MOVLW       0
0x34C8	0x2001      	ADDWFC      R1, 0 
0x34CA	0x6EEA      	MOVWF       FSR0L+1 
0x34CC	0xF001CFEE  	MOVFF       POSTINC0, R1
0x34D0	0x0E80      	MOVLW       128
0x34D2	0xBE01      	BTFSC       R1, 7 
0x34D4	0x0E7F      	MOVLW       127
0x34D6	0x6E00      	MOVWF       R0 
0x34D8	0x0E80      	MOVLW       128
0x34DA	0x5C00      	SUBWF       R0, 0 
0x34DC	0xE103      	BNZ         L__move_aste535
0x34DE	0x0101      	MOVLB       1
0x34E0	0x51AC      	MOVF        _jugador+5, 0, 1
0x34E2	0x5C01      	SUBWF       R1, 0 
L__move_aste535:
0x34E4	0xE355      	BNC         L_move_aste136
0x34E6	0x0101      	MOVLB       1
0x34E8	0x0E03      	MOVLW       3
0x34EA	0x6E00      	MOVWF       R0 
0x34EC	0x0E00      	MOVLW       0
0x34EE	0x6E01      	MOVWF       R1 
0x34F0	0xF004C1D3  	MOVFF       move_aste_i_L0, R4
0x34F4	0x0E00      	MOVLW       0
0x34F6	0x6E05      	MOVWF       R5 
0x34F8	0xF001EC42  	CALL        _Mul_16X16_U, 0
0x34FC	0x0E9B      	MOVLW       _aste5
0x34FE	0x2600      	ADDWF       R0, 1 
0x3500	0x0E01      	MOVLW       hi_addr(_aste5)
0x3502	0x2201      	ADDWFC      R1, 1 
0x3504	0x0E01      	MOVLW       1
0x3506	0x2400      	ADDWF       R0, 0 
0x3508	0x6EE9      	MOVWF       FSR0L 
0x350A	0x0E00      	MOVLW       0
0x350C	0x2001      	ADDWFC      R1, 0 
0x350E	0x6EEA      	MOVWF       FSR0L+1 
0x3510	0xF003CFEE  	MOVFF       POSTINC0, R3
0x3514	0x0E04      	MOVLW       4
0x3516	0x25AC      	ADDWF       _jugador+5, 0, 1
0x3518	0x6E01      	MOVWF       R1 
0x351A	0x6A02      	CLRF        R2 
0x351C	0x0E00      	MOVLW       0
0x351E	0x2202      	ADDWFC      R2, 1 
0x3520	0x0E80      	MOVLW       128
0x3522	0xBE03      	BTFSC       R3, 7 
0x3524	0x0E7F      	MOVLW       127
0x3526	0x6E00      	MOVWF       R0 
0x3528	0x0E80      	MOVLW       128
0x352A	0x1802      	XORWF       R2, 0 
0x352C	0x5C00      	SUBWF       R0, 0 
0x352E	0xE102      	BNZ         L__move_aste536
0x3530	0x5001      	MOVF        R1, 0 
0x3532	0x5C03      	SUBWF       R3, 0 
L__move_aste536:
0x3534	0xE22D      	BC          L_move_aste136
L__move_aste477:
;glcd.c,448 :: 		check_coll(jugador[1], aste5[i], 1);
0x3536	0x0E04      	MOVLW       4
0x3538	0x6E00      	MOVWF       R0 
0x353A	0x0EDA      	MOVLW       FARG_check_coll_nave
0x353C	0x6EE1      	MOVWF       FSR1L 
0x353E	0x0E01      	MOVLW       hi_addr(FARG_check_coll_nave)
0x3540	0x6EE2      	MOVWF       FSR1L+1 
0x3542	0x0EAB      	MOVLW       _jugador+4
0x3544	0x6EE9      	MOVWF       FSR0L 
0x3546	0x0E01      	MOVLW       hi_addr(_jugador+4)
0x3548	0x6EEA      	MOVWF       FSR0L+1 
L_move_aste137:
0x354A	0xFFE6CFEE  	MOVFF       POSTINC0, POSTINC1
0x354E	0x0600      	DECF        R0, 1 
0x3550	0xE1FC      	BNZ         L_move_aste137
0x3552	0x0E03      	MOVLW       3
0x3554	0x6E00      	MOVWF       R0 
0x3556	0x0E00      	MOVLW       0
0x3558	0x6E01      	MOVWF       R1 
0x355A	0xF004C1D3  	MOVFF       move_aste_i_L0, R4
0x355E	0x0E00      	MOVLW       0
0x3560	0x6E05      	MOVWF       R5 
0x3562	0xF001EC42  	CALL        _Mul_16X16_U, 0
0x3566	0x0E9B      	MOVLW       _aste5
0x3568	0x2400      	ADDWF       R0, 0 
0x356A	0x6EE9      	MOVWF       FSR0L 
0x356C	0x0E01      	MOVLW       hi_addr(_aste5)
0x356E	0x2001      	ADDWFC      R1, 0 
0x3570	0x6EEA      	MOVWF       FSR0L+1 
0x3572	0x0E03      	MOVLW       3
0x3574	0x6E00      	MOVWF       R0 
0x3576	0x0EDE      	MOVLW       FARG_check_coll_aste
0x3578	0x6EE1      	MOVWF       FSR1L 
0x357A	0x0E01      	MOVLW       hi_addr(FARG_check_coll_aste)
0x357C	0x6EE2      	MOVWF       FSR1L+1 
L_move_aste138:
0x357E	0xFFE6CFEE  	MOVFF       POSTINC0, POSTINC1
0x3582	0x0600      	DECF        R0, 1 
0x3584	0xE1FC      	BNZ         L_move_aste138
0x3586	0x0101      	MOVLB       1
0x3588	0x0E01      	MOVLW       1
0x358A	0x6FE1      	MOVWF       FARG_check_coll_num, 1
0x358C	0xF008EC0B  	CALL        _check_coll, 0
;glcd.c,449 :: 		}
L_move_aste136:
;glcd.c,450 :: 		}
0x3590	0xD07B      	BRA         L_move_aste139
L_move_aste133:
;glcd.c,451 :: 		else if(turno_player == 2){
0x3592	0x0100      	MOVLB       0
0x3594	0x51F4      	MOVF        _turno_player, 0, 1
0x3596	0x0A02      	XORLW       2
0x3598	0xA4D8      	BTFSS       STATUS, 2 
0x359A	0xD076      	BRA         L_move_aste140
;glcd.c,452 :: 		if((aste5[i].y >= jugador[0].y) &&(aste5[i].y < jugador[0].y + 4)){
0x359C	0x0E03      	MOVLW       3
0x359E	0x6E00      	MOVWF       R0 
0x35A0	0x0E00      	MOVLW       0
0x35A2	0x6E01      	MOVWF       R1 
0x35A4	0xF004C1D3  	MOVFF       move_aste_i_L0, R4
0x35A8	0x0E00      	MOVLW       0
0x35AA	0x6E05      	MOVWF       R5 
0x35AC	0xF001EC42  	CALL        _Mul_16X16_U, 0
0x35B0	0x0E9B      	MOVLW       _aste5
0x35B2	0x2600      	ADDWF       R0, 1 
0x35B4	0x0E01      	MOVLW       hi_addr(_aste5)
0x35B6	0x2201      	ADDWFC      R1, 1 
0x35B8	0x0E01      	MOVLW       1
0x35BA	0x2400      	ADDWF       R0, 0 
0x35BC	0x6EE9      	MOVWF       FSR0L 
0x35BE	0x0E00      	MOVLW       0
0x35C0	0x2001      	ADDWFC      R1, 0 
0x35C2	0x6EEA      	MOVWF       FSR0L+1 
0x35C4	0xF001CFEE  	MOVFF       POSTINC0, R1
0x35C8	0x0E80      	MOVLW       128
0x35CA	0xBE01      	BTFSC       R1, 7 
0x35CC	0x0E7F      	MOVLW       127
0x35CE	0x6E00      	MOVWF       R0 
0x35D0	0x0E80      	MOVLW       128
0x35D2	0x5C00      	SUBWF       R0, 0 
0x35D4	0xE103      	BNZ         L__move_aste537
0x35D6	0x0101      	MOVLB       1
0x35D8	0x51A8      	MOVF        _jugador+1, 0, 1
0x35DA	0x5C01      	SUBWF       R1, 0 
L__move_aste537:
0x35DC	0xE355      	BNC         L_move_aste143
0x35DE	0x0101      	MOVLB       1
0x35E0	0x0E03      	MOVLW       3
0x35E2	0x6E00      	MOVWF       R0 
0x35E4	0x0E00      	MOVLW       0
0x35E6	0x6E01      	MOVWF       R1 
0x35E8	0xF004C1D3  	MOVFF       move_aste_i_L0, R4
0x35EC	0x0E00      	MOVLW       0
0x35EE	0x6E05      	MOVWF       R5 
0x35F0	0xF001EC42  	CALL        _Mul_16X16_U, 0
0x35F4	0x0E9B      	MOVLW       _aste5
0x35F6	0x2600      	ADDWF       R0, 1 
0x35F8	0x0E01      	MOVLW       hi_addr(_aste5)
0x35FA	0x2201      	ADDWFC      R1, 1 
0x35FC	0x0E01      	MOVLW       1
0x35FE	0x2400      	ADDWF       R0, 0 
0x3600	0x6EE9      	MOVWF       FSR0L 
0x3602	0x0E00      	MOVLW       0
0x3604	0x2001      	ADDWFC      R1, 0 
0x3606	0x6EEA      	MOVWF       FSR0L+1 
0x3608	0xF003CFEE  	MOVFF       POSTINC0, R3
0x360C	0x0E04      	MOVLW       4
0x360E	0x25A8      	ADDWF       _jugador+1, 0, 1
0x3610	0x6E01      	MOVWF       R1 
0x3612	0x6A02      	CLRF        R2 
0x3614	0x0E00      	MOVLW       0
0x3616	0x2202      	ADDWFC      R2, 1 
0x3618	0x0E80      	MOVLW       128
0x361A	0xBE03      	BTFSC       R3, 7 
0x361C	0x0E7F      	MOVLW       127
0x361E	0x6E00      	MOVWF       R0 
0x3620	0x0E80      	MOVLW       128
0x3622	0x1802      	XORWF       R2, 0 
0x3624	0x5C00      	SUBWF       R0, 0 
0x3626	0xE102      	BNZ         L__move_aste538
0x3628	0x5001      	MOVF        R1, 0 
0x362A	0x5C03      	SUBWF       R3, 0 
L__move_aste538:
0x362C	0xE22D      	BC          L_move_aste143
L__move_aste476:
;glcd.c,453 :: 		check_coll(jugador[0], aste5[i], 1);
0x362E	0x0E04      	MOVLW       4
0x3630	0x6E00      	MOVWF       R0 
0x3632	0x0EDA      	MOVLW       FARG_check_coll_nave
0x3634	0x6EE1      	MOVWF       FSR1L 
0x3636	0x0E01      	MOVLW       hi_addr(FARG_check_coll_nave)
0x3638	0x6EE2      	MOVWF       FSR1L+1 
0x363A	0x0EA7      	MOVLW       _jugador
0x363C	0x6EE9      	MOVWF       FSR0L 
0x363E	0x0E01      	MOVLW       hi_addr(_jugador)
0x3640	0x6EEA      	MOVWF       FSR0L+1 
L_move_aste144:
0x3642	0xFFE6CFEE  	MOVFF       POSTINC0, POSTINC1
0x3646	0x0600      	DECF        R0, 1 
0x3648	0xE1FC      	BNZ         L_move_aste144
0x364A	0x0E03      	MOVLW       3
0x364C	0x6E00      	MOVWF       R0 
0x364E	0x0E00      	MOVLW       0
0x3650	0x6E01      	MOVWF       R1 
0x3652	0xF004C1D3  	MOVFF       move_aste_i_L0, R4
0x3656	0x0E00      	MOVLW       0
0x3658	0x6E05      	MOVWF       R5 
0x365A	0xF001EC42  	CALL        _Mul_16X16_U, 0
0x365E	0x0E9B      	MOVLW       _aste5
0x3660	0x2400      	ADDWF       R0, 0 
0x3662	0x6EE9      	MOVWF       FSR0L 
0x3664	0x0E01      	MOVLW       hi_addr(_aste5)
0x3666	0x2001      	ADDWFC      R1, 0 
0x3668	0x6EEA      	MOVWF       FSR0L+1 
0x366A	0x0E03      	MOVLW       3
0x366C	0x6E00      	MOVWF       R0 
0x366E	0x0EDE      	MOVLW       FARG_check_coll_aste
0x3670	0x6EE1      	MOVWF       FSR1L 
0x3672	0x0E01      	MOVLW       hi_addr(FARG_check_coll_aste)
0x3674	0x6EE2      	MOVWF       FSR1L+1 
L_move_aste145:
0x3676	0xFFE6CFEE  	MOVFF       POSTINC0, POSTINC1
0x367A	0x0600      	DECF        R0, 1 
0x367C	0xE1FC      	BNZ         L_move_aste145
0x367E	0x0101      	MOVLB       1
0x3680	0x0E01      	MOVLW       1
0x3682	0x6FE1      	MOVWF       FARG_check_coll_num, 1
0x3684	0xF008EC0B  	CALL        _check_coll, 0
;glcd.c,454 :: 		}
L_move_aste143:
;glcd.c,455 :: 		}
L_move_aste140:
L_move_aste139:
;glcd.c,440 :: 		for(i = 0; i <4; i++){
0x3688	0x0101      	MOVLB       1
0x368A	0x2BD3      	INCF        move_aste_i_L0, 1, 1
;glcd.c,456 :: 		}
0x368C	0xD69E      	BRA         L_move_aste129
L_move_aste130:
;glcd.c,457 :: 		for(i = 0; i <4; i++){
0x368E	0x6BD3      	CLRF        move_aste_i_L0, 1
L_move_aste146:
0x3690	0x0E04      	MOVLW       4
0x3692	0x5DD3      	SUBWF       move_aste_i_L0, 0, 1
0x3694	0xB0D8      	BTFSC       STATUS, 0 
0x3696	0xD15E      	BRA         L_move_aste147
;glcd.c,458 :: 		aste7[i].old_x = aste7[i].x;
0x3698	0x0E03      	MOVLW       3
0x369A	0x6E00      	MOVWF       R0 
0x369C	0x0E00      	MOVLW       0
0x369E	0x6E01      	MOVWF       R1 
0x36A0	0xF004C1D3  	MOVFF       move_aste_i_L0, R4
0x36A4	0x0E00      	MOVLW       0
0x36A6	0x6E05      	MOVWF       R5 
0x36A8	0xF001EC42  	CALL        _Mul_16X16_U, 0
0x36AC	0x0EC4      	MOVLW       _aste7
0x36AE	0x2600      	ADDWF       R0, 1 
0x36B0	0x0E01      	MOVLW       hi_addr(_aste7)
0x36B2	0x2201      	ADDWFC      R1, 1 
0x36B4	0x0E02      	MOVLW       2
0x36B6	0x2400      	ADDWF       R0, 0 
0x36B8	0x6EE1      	MOVWF       FSR1L 
0x36BA	0x0E00      	MOVLW       0
0x36BC	0x2001      	ADDWFC      R1, 0 
0x36BE	0x6EE2      	MOVWF       FSR1L+1 
0x36C0	0xFFE9C000  	MOVFF       R0, FSR0L
0x36C4	0xFFEAC001  	MOVFF       R1, FSR0H
0x36C8	0xF000CFEE  	MOVFF       POSTINC0, R0
0x36CC	0xFFE6C000  	MOVFF       R0, POSTINC1
;glcd.c,459 :: 		aste7[i].x -= 1;
0x36D0	0x0E03      	MOVLW       3
0x36D2	0x6E00      	MOVWF       R0 
0x36D4	0x0E00      	MOVLW       0
0x36D6	0x6E01      	MOVWF       R1 
0x36D8	0xF004C1D3  	MOVFF       move_aste_i_L0, R4
0x36DC	0x0E00      	MOVLW       0
0x36DE	0x6E05      	MOVWF       R5 
0x36E0	0xF001EC42  	CALL        _Mul_16X16_U, 0
0x36E4	0x0EC4      	MOVLW       _aste7
0x36E6	0x2400      	ADDWF       R0, 0 
0x36E8	0x6E02      	MOVWF       R2 
0x36EA	0x0E01      	MOVLW       hi_addr(_aste7)
0x36EC	0x2001      	ADDWFC      R1, 0 
0x36EE	0x6E03      	MOVWF       R3 
0x36F0	0xFFE9C002  	MOVFF       R2, FSR0L
0x36F4	0xFFEAC003  	MOVFF       R3, FSR0H
0x36F8	0xF000CFEE  	MOVFF       POSTINC0, R0
0x36FC	0x0600      	DECF        R0, 1 
0x36FE	0xFFE1C002  	MOVFF       R2, FSR1L
0x3702	0xFFE2C003  	MOVFF       R3, FSR1H
0x3706	0xFFE6C000  	MOVFF       R0, POSTINC1
;glcd.c,460 :: 		if(aste7[i].x<=1){
0x370A	0x0E03      	MOVLW       3
0x370C	0x6E00      	MOVWF       R0 
0x370E	0x0E00      	MOVLW       0
0x3710	0x6E01      	MOVWF       R1 
0x3712	0xF004C1D3  	MOVFF       move_aste_i_L0, R4
0x3716	0x0E00      	MOVLW       0
0x3718	0x6E05      	MOVWF       R5 
0x371A	0xF001EC42  	CALL        _Mul_16X16_U, 0
0x371E	0x0EC4      	MOVLW       _aste7
0x3720	0x2400      	ADDWF       R0, 0 
0x3722	0x6EE9      	MOVWF       FSR0L 
0x3724	0x0E01      	MOVLW       hi_addr(_aste7)
0x3726	0x2001      	ADDWFC      R1, 0 
0x3728	0x6EEA      	MOVWF       FSR0L+1 
0x372A	0xF001CFEE  	MOVFF       POSTINC0, R1
0x372E	0x0E80      	MOVLW       128
0x3730	0x0A01      	XORLW       1
0x3732	0x6E00      	MOVWF       R0 
0x3734	0x0E80      	MOVLW       128
0x3736	0x1801      	XORWF       R1, 0 
0x3738	0x5C00      	SUBWF       R0, 0 
0x373A	0xE312      	BNC         L_move_aste149
;glcd.c,461 :: 		aste7[i].x = 127;
0x373C	0x0E03      	MOVLW       3
0x373E	0x6E00      	MOVWF       R0 
0x3740	0x0E00      	MOVLW       0
0x3742	0x6E01      	MOVWF       R1 
0x3744	0xF004C1D3  	MOVFF       move_aste_i_L0, R4
0x3748	0x0E00      	MOVLW       0
0x374A	0x6E05      	MOVWF       R5 
0x374C	0xF001EC42  	CALL        _Mul_16X16_U, 0
0x3750	0x0EC4      	MOVLW       _aste7
0x3752	0x2400      	ADDWF       R0, 0 
0x3754	0x6EE1      	MOVWF       FSR1L 
0x3756	0x0E01      	MOVLW       hi_addr(_aste7)
0x3758	0x2001      	ADDWFC      R1, 0 
0x375A	0x6EE2      	MOVWF       FSR1L+1 
0x375C	0x0E7F      	MOVLW       127
0x375E	0x6EE6      	MOVWF       POSTINC1 
;glcd.c,462 :: 		}
L_move_aste149:
;glcd.c,463 :: 		if(turno_player == 1){
0x3760	0x0100      	MOVLB       0
0x3762	0x51F4      	MOVF        _turno_player, 0, 1
0x3764	0x0A01      	XORLW       1
0x3766	0xA4D8      	BTFSS       STATUS, 2 
0x3768	0xD077      	BRA         L_move_aste150
;glcd.c,464 :: 		if((aste7[i].y >= jugador[1].y) &&(aste7[i].y < jugador[1].y + 4)){
0x376A	0x0E03      	MOVLW       3
0x376C	0x6E00      	MOVWF       R0 
0x376E	0x0E00      	MOVLW       0
0x3770	0x6E01      	MOVWF       R1 
0x3772	0xF004C1D3  	MOVFF       move_aste_i_L0, R4
0x3776	0x0E00      	MOVLW       0
0x3778	0x6E05      	MOVWF       R5 
0x377A	0xF001EC42  	CALL        _Mul_16X16_U, 0
0x377E	0x0EC4      	MOVLW       _aste7
0x3780	0x2600      	ADDWF       R0, 1 
0x3782	0x0E01      	MOVLW       hi_addr(_aste7)
0x3784	0x2201      	ADDWFC      R1, 1 
0x3786	0x0E01      	MOVLW       1
0x3788	0x2400      	ADDWF       R0, 0 
0x378A	0x6EE9      	MOVWF       FSR0L 
0x378C	0x0E00      	MOVLW       0
0x378E	0x2001      	ADDWFC      R1, 0 
0x3790	0x6EEA      	MOVWF       FSR0L+1 
0x3792	0xF001CFEE  	MOVFF       POSTINC0, R1
0x3796	0x0E80      	MOVLW       128
0x3798	0xBE01      	BTFSC       R1, 7 
0x379A	0x0E7F      	MOVLW       127
0x379C	0x6E00      	MOVWF       R0 
0x379E	0x0E80      	MOVLW       128
0x37A0	0x5C00      	SUBWF       R0, 0 
0x37A2	0xE103      	BNZ         L__move_aste539
0x37A4	0x0101      	MOVLB       1
0x37A6	0x51AC      	MOVF        _jugador+5, 0, 1
0x37A8	0x5C01      	SUBWF       R1, 0 
L__move_aste539:
0x37AA	0xE355      	BNC         L_move_aste153
0x37AC	0x0101      	MOVLB       1
0x37AE	0x0E03      	MOVLW       3
0x37B0	0x6E00      	MOVWF       R0 
0x37B2	0x0E00      	MOVLW       0
0x37B4	0x6E01      	MOVWF       R1 
0x37B6	0xF004C1D3  	MOVFF       move_aste_i_L0, R4
0x37BA	0x0E00      	MOVLW       0
0x37BC	0x6E05      	MOVWF       R5 
0x37BE	0xF001EC42  	CALL        _Mul_16X16_U, 0
0x37C2	0x0EC4      	MOVLW       _aste7
0x37C4	0x2600      	ADDWF       R0, 1 
0x37C6	0x0E01      	MOVLW       hi_addr(_aste7)
0x37C8	0x2201      	ADDWFC      R1, 1 
0x37CA	0x0E01      	MOVLW       1
0x37CC	0x2400      	ADDWF       R0, 0 
0x37CE	0x6EE9      	MOVWF       FSR0L 
0x37D0	0x0E00      	MOVLW       0
0x37D2	0x2001      	ADDWFC      R1, 0 
0x37D4	0x6EEA      	MOVWF       FSR0L+1 
0x37D6	0xF003CFEE  	MOVFF       POSTINC0, R3
0x37DA	0x0E04      	MOVLW       4
0x37DC	0x25AC      	ADDWF       _jugador+5, 0, 1
0x37DE	0x6E01      	MOVWF       R1 
0x37E0	0x6A02      	CLRF        R2 
0x37E2	0x0E00      	MOVLW       0
0x37E4	0x2202      	ADDWFC      R2, 1 
0x37E6	0x0E80      	MOVLW       128
0x37E8	0xBE03      	BTFSC       R3, 7 
0x37EA	0x0E7F      	MOVLW       127
0x37EC	0x6E00      	MOVWF       R0 
0x37EE	0x0E80      	MOVLW       128
0x37F0	0x1802      	XORWF       R2, 0 
0x37F2	0x5C00      	SUBWF       R0, 0 
0x37F4	0xE102      	BNZ         L__move_aste540
0x37F6	0x5001      	MOVF        R1, 0 
0x37F8	0x5C03      	SUBWF       R3, 0 
L__move_aste540:
0x37FA	0xE22D      	BC          L_move_aste153
L__move_aste475:
;glcd.c,465 :: 		check_coll(jugador[1], aste7[i], 1);
0x37FC	0x0E04      	MOVLW       4
0x37FE	0x6E00      	MOVWF       R0 
0x3800	0x0EDA      	MOVLW       FARG_check_coll_nave
0x3802	0x6EE1      	MOVWF       FSR1L 
0x3804	0x0E01      	MOVLW       hi_addr(FARG_check_coll_nave)
0x3806	0x6EE2      	MOVWF       FSR1L+1 
0x3808	0x0EAB      	MOVLW       _jugador+4
0x380A	0x6EE9      	MOVWF       FSR0L 
0x380C	0x0E01      	MOVLW       hi_addr(_jugador+4)
0x380E	0x6EEA      	MOVWF       FSR0L+1 
L_move_aste154:
0x3810	0xFFE6CFEE  	MOVFF       POSTINC0, POSTINC1
0x3814	0x0600      	DECF        R0, 1 
0x3816	0xE1FC      	BNZ         L_move_aste154
0x3818	0x0E03      	MOVLW       3
0x381A	0x6E00      	MOVWF       R0 
0x381C	0x0E00      	MOVLW       0
0x381E	0x6E01      	MOVWF       R1 
0x3820	0xF004C1D3  	MOVFF       move_aste_i_L0, R4
0x3824	0x0E00      	MOVLW       0
0x3826	0x6E05      	MOVWF       R5 
0x3828	0xF001EC42  	CALL        _Mul_16X16_U, 0
0x382C	0x0EC4      	MOVLW       _aste7
0x382E	0x2400      	ADDWF       R0, 0 
0x3830	0x6EE9      	MOVWF       FSR0L 
0x3832	0x0E01      	MOVLW       hi_addr(_aste7)
0x3834	0x2001      	ADDWFC      R1, 0 
0x3836	0x6EEA      	MOVWF       FSR0L+1 
0x3838	0x0E03      	MOVLW       3
0x383A	0x6E00      	MOVWF       R0 
0x383C	0x0EDE      	MOVLW       FARG_check_coll_aste
0x383E	0x6EE1      	MOVWF       FSR1L 
0x3840	0x0E01      	MOVLW       hi_addr(FARG_check_coll_aste)
0x3842	0x6EE2      	MOVWF       FSR1L+1 
L_move_aste155:
0x3844	0xFFE6CFEE  	MOVFF       POSTINC0, POSTINC1
0x3848	0x0600      	DECF        R0, 1 
0x384A	0xE1FC      	BNZ         L_move_aste155
0x384C	0x0101      	MOVLB       1
0x384E	0x0E01      	MOVLW       1
0x3850	0x6FE1      	MOVWF       FARG_check_coll_num, 1
0x3852	0xF008EC0B  	CALL        _check_coll, 0
;glcd.c,466 :: 		}
L_move_aste153:
;glcd.c,467 :: 		}
0x3856	0xD07B      	BRA         L_move_aste156
L_move_aste150:
;glcd.c,468 :: 		else if(turno_player == 2){
0x3858	0x0100      	MOVLB       0
0x385A	0x51F4      	MOVF        _turno_player, 0, 1
0x385C	0x0A02      	XORLW       2
0x385E	0xA4D8      	BTFSS       STATUS, 2 
0x3860	0xD076      	BRA         L_move_aste157
;glcd.c,469 :: 		if((aste7[i].y >= jugador[0].y) &&(aste7[i].y < jugador[0].y + 4)){
0x3862	0x0E03      	MOVLW       3
0x3864	0x6E00      	MOVWF       R0 
0x3866	0x0E00      	MOVLW       0
0x3868	0x6E01      	MOVWF       R1 
0x386A	0xF004C1D3  	MOVFF       move_aste_i_L0, R4
0x386E	0x0E00      	MOVLW       0
0x3870	0x6E05      	MOVWF       R5 
0x3872	0xF001EC42  	CALL        _Mul_16X16_U, 0
0x3876	0x0EC4      	MOVLW       _aste7
0x3878	0x2600      	ADDWF       R0, 1 
0x387A	0x0E01      	MOVLW       hi_addr(_aste7)
0x387C	0x2201      	ADDWFC      R1, 1 
0x387E	0x0E01      	MOVLW       1
0x3880	0x2400      	ADDWF       R0, 0 
0x3882	0x6EE9      	MOVWF       FSR0L 
0x3884	0x0E00      	MOVLW       0
0x3886	0x2001      	ADDWFC      R1, 0 
0x3888	0x6EEA      	MOVWF       FSR0L+1 
0x388A	0xF001CFEE  	MOVFF       POSTINC0, R1
0x388E	0x0E80      	MOVLW       128
0x3890	0xBE01      	BTFSC       R1, 7 
0x3892	0x0E7F      	MOVLW       127
0x3894	0x6E00      	MOVWF       R0 
0x3896	0x0E80      	MOVLW       128
0x3898	0x5C00      	SUBWF       R0, 0 
0x389A	0xE103      	BNZ         L__move_aste541
0x389C	0x0101      	MOVLB       1
0x389E	0x51A8      	MOVF        _jugador+1, 0, 1
0x38A0	0x5C01      	SUBWF       R1, 0 
L__move_aste541:
0x38A2	0xE355      	BNC         L_move_aste160
0x38A4	0x0101      	MOVLB       1
0x38A6	0x0E03      	MOVLW       3
0x38A8	0x6E00      	MOVWF       R0 
0x38AA	0x0E00      	MOVLW       0
0x38AC	0x6E01      	MOVWF       R1 
0x38AE	0xF004C1D3  	MOVFF       move_aste_i_L0, R4
0x38B2	0x0E00      	MOVLW       0
0x38B4	0x6E05      	MOVWF       R5 
0x38B6	0xF001EC42  	CALL        _Mul_16X16_U, 0
0x38BA	0x0EC4      	MOVLW       _aste7
0x38BC	0x2600      	ADDWF       R0, 1 
0x38BE	0x0E01      	MOVLW       hi_addr(_aste7)
0x38C0	0x2201      	ADDWFC      R1, 1 
0x38C2	0x0E01      	MOVLW       1
0x38C4	0x2400      	ADDWF       R0, 0 
0x38C6	0x6EE9      	MOVWF       FSR0L 
0x38C8	0x0E00      	MOVLW       0
0x38CA	0x2001      	ADDWFC      R1, 0 
0x38CC	0x6EEA      	MOVWF       FSR0L+1 
0x38CE	0xF003CFEE  	MOVFF       POSTINC0, R3
0x38D2	0x0E04      	MOVLW       4
0x38D4	0x25A8      	ADDWF       _jugador+1, 0, 1
0x38D6	0x6E01      	MOVWF       R1 
0x38D8	0x6A02      	CLRF        R2 
0x38DA	0x0E00      	MOVLW       0
0x38DC	0x2202      	ADDWFC      R2, 1 
0x38DE	0x0E80      	MOVLW       128
0x38E0	0xBE03      	BTFSC       R3, 7 
0x38E2	0x0E7F      	MOVLW       127
0x38E4	0x6E00      	MOVWF       R0 
0x38E6	0x0E80      	MOVLW       128
0x38E8	0x1802      	XORWF       R2, 0 
0x38EA	0x5C00      	SUBWF       R0, 0 
0x38EC	0xE102      	BNZ         L__move_aste542
0x38EE	0x5001      	MOVF        R1, 0 
0x38F0	0x5C03      	SUBWF       R3, 0 
L__move_aste542:
0x38F2	0xE22D      	BC          L_move_aste160
L__move_aste474:
;glcd.c,470 :: 		check_coll(jugador[0], aste7[i], 1);
0x38F4	0x0E04      	MOVLW       4
0x38F6	0x6E00      	MOVWF       R0 
0x38F8	0x0EDA      	MOVLW       FARG_check_coll_nave
0x38FA	0x6EE1      	MOVWF       FSR1L 
0x38FC	0x0E01      	MOVLW       hi_addr(FARG_check_coll_nave)
0x38FE	0x6EE2      	MOVWF       FSR1L+1 
0x3900	0x0EA7      	MOVLW       _jugador
0x3902	0x6EE9      	MOVWF       FSR0L 
0x3904	0x0E01      	MOVLW       hi_addr(_jugador)
0x3906	0x6EEA      	MOVWF       FSR0L+1 
L_move_aste161:
0x3908	0xFFE6CFEE  	MOVFF       POSTINC0, POSTINC1
0x390C	0x0600      	DECF        R0, 1 
0x390E	0xE1FC      	BNZ         L_move_aste161
0x3910	0x0E03      	MOVLW       3
0x3912	0x6E00      	MOVWF       R0 
0x3914	0x0E00      	MOVLW       0
0x3916	0x6E01      	MOVWF       R1 
0x3918	0xF004C1D3  	MOVFF       move_aste_i_L0, R4
0x391C	0x0E00      	MOVLW       0
0x391E	0x6E05      	MOVWF       R5 
0x3920	0xF001EC42  	CALL        _Mul_16X16_U, 0
0x3924	0x0EC4      	MOVLW       _aste7
0x3926	0x2400      	ADDWF       R0, 0 
0x3928	0x6EE9      	MOVWF       FSR0L 
0x392A	0x0E01      	MOVLW       hi_addr(_aste7)
0x392C	0x2001      	ADDWFC      R1, 0 
0x392E	0x6EEA      	MOVWF       FSR0L+1 
0x3930	0x0E03      	MOVLW       3
0x3932	0x6E00      	MOVWF       R0 
0x3934	0x0EDE      	MOVLW       FARG_check_coll_aste
0x3936	0x6EE1      	MOVWF       FSR1L 
0x3938	0x0E01      	MOVLW       hi_addr(FARG_check_coll_aste)
0x393A	0x6EE2      	MOVWF       FSR1L+1 
L_move_aste162:
0x393C	0xFFE6CFEE  	MOVFF       POSTINC0, POSTINC1
0x3940	0x0600      	DECF        R0, 1 
0x3942	0xE1FC      	BNZ         L_move_aste162
0x3944	0x0101      	MOVLB       1
0x3946	0x0E01      	MOVLW       1
0x3948	0x6FE1      	MOVWF       FARG_check_coll_num, 1
0x394A	0xF008EC0B  	CALL        _check_coll, 0
;glcd.c,471 :: 		}
L_move_aste160:
;glcd.c,472 :: 		}
L_move_aste157:
L_move_aste156:
;glcd.c,457 :: 		for(i = 0; i <4; i++){
0x394E	0x0101      	MOVLB       1
0x3950	0x2BD3      	INCF        move_aste_i_L0, 1, 1
;glcd.c,473 :: 		}
0x3952	0xD69E      	BRA         L_move_aste146
L_move_aste147:
;glcd.c,475 :: 		for(i = 0; i <4; i++){
0x3954	0x6BD3      	CLRF        move_aste_i_L0, 1
L_move_aste163:
0x3956	0x0E04      	MOVLW       4
0x3958	0x5DD3      	SUBWF       move_aste_i_L0, 0, 1
0x395A	0xB0D8      	BTFSC       STATUS, 0 
0x395C	0xD15E      	BRA         L_move_aste164
;glcd.c,476 :: 		asteD1[i].old_x = asteD1[i].x;
0x395E	0x0E03      	MOVLW       3
0x3960	0x6E00      	MOVWF       R0 
0x3962	0x0E00      	MOVLW       0
0x3964	0x6E01      	MOVWF       R1 
0x3966	0xF004C1D3  	MOVFF       move_aste_i_L0, R4
0x396A	0x0E00      	MOVLW       0
0x396C	0x6E05      	MOVWF       R5 
0x396E	0xF001EC42  	CALL        _Mul_16X16_U, 0
0x3972	0x0E83      	MOVLW       _asteD1
0x3974	0x2600      	ADDWF       R0, 1 
0x3976	0x0E01      	MOVLW       hi_addr(_asteD1)
0x3978	0x2201      	ADDWFC      R1, 1 
0x397A	0x0E02      	MOVLW       2
0x397C	0x2400      	ADDWF       R0, 0 
0x397E	0x6EE1      	MOVWF       FSR1L 
0x3980	0x0E00      	MOVLW       0
0x3982	0x2001      	ADDWFC      R1, 0 
0x3984	0x6EE2      	MOVWF       FSR1L+1 
0x3986	0xFFE9C000  	MOVFF       R0, FSR0L
0x398A	0xFFEAC001  	MOVFF       R1, FSR0H
0x398E	0xF000CFEE  	MOVFF       POSTINC0, R0
0x3992	0xFFE6C000  	MOVFF       R0, POSTINC1
;glcd.c,477 :: 		asteD1[i].x += 1;
0x3996	0x0E03      	MOVLW       3
0x3998	0x6E00      	MOVWF       R0 
0x399A	0x0E00      	MOVLW       0
0x399C	0x6E01      	MOVWF       R1 
0x399E	0xF004C1D3  	MOVFF       move_aste_i_L0, R4
0x39A2	0x0E00      	MOVLW       0
0x39A4	0x6E05      	MOVWF       R5 
0x39A6	0xF001EC42  	CALL        _Mul_16X16_U, 0
0x39AA	0x0E83      	MOVLW       _asteD1
0x39AC	0x2400      	ADDWF       R0, 0 
0x39AE	0x6E02      	MOVWF       R2 
0x39B0	0x0E01      	MOVLW       hi_addr(_asteD1)
0x39B2	0x2001      	ADDWFC      R1, 0 
0x39B4	0x6E03      	MOVWF       R3 
0x39B6	0xFFE9C002  	MOVFF       R2, FSR0L
0x39BA	0xFFEAC003  	MOVFF       R3, FSR0H
0x39BE	0xF000CFEE  	MOVFF       POSTINC0, R0
0x39C2	0x2A00      	INCF        R0, 1 
0x39C4	0xFFE1C002  	MOVFF       R2, FSR1L
0x39C8	0xFFE2C003  	MOVFF       R3, FSR1H
0x39CC	0xFFE6C000  	MOVFF       R0, POSTINC1
;glcd.c,478 :: 		if(asteD1[i].x > 126){
0x39D0	0x0E03      	MOVLW       3
0x39D2	0x6E00      	MOVWF       R0 
0x39D4	0x0E00      	MOVLW       0
0x39D6	0x6E01      	MOVWF       R1 
0x39D8	0xF004C1D3  	MOVFF       move_aste_i_L0, R4
0x39DC	0x0E00      	MOVLW       0
0x39DE	0x6E05      	MOVWF       R5 
0x39E0	0xF001EC42  	CALL        _Mul_16X16_U, 0
0x39E4	0x0E83      	MOVLW       _asteD1
0x39E6	0x2400      	ADDWF       R0, 0 
0x39E8	0x6EE9      	MOVWF       FSR0L 
0x39EA	0x0E01      	MOVLW       hi_addr(_asteD1)
0x39EC	0x2001      	ADDWFC      R1, 0 
0x39EE	0x6EEA      	MOVWF       FSR0L+1 
0x39F0	0xF001CFEE  	MOVFF       POSTINC0, R1
0x39F4	0x0E80      	MOVLW       128
0x39F6	0x0A7E      	XORLW       126
0x39F8	0x6E00      	MOVWF       R0 
0x39FA	0x0E80      	MOVLW       128
0x39FC	0x1801      	XORWF       R1, 0 
0x39FE	0x5C00      	SUBWF       R0, 0 
0x3A00	0xE212      	BC          L_move_aste166
;glcd.c,479 :: 		asteD1[i].x = 2;
0x3A02	0x0E03      	MOVLW       3
0x3A04	0x6E00      	MOVWF       R0 
0x3A06	0x0E00      	MOVLW       0
0x3A08	0x6E01      	MOVWF       R1 
0x3A0A	0xF004C1D3  	MOVFF       move_aste_i_L0, R4
0x3A0E	0x0E00      	MOVLW       0
0x3A10	0x6E05      	MOVWF       R5 
0x3A12	0xF001EC42  	CALL        _Mul_16X16_U, 0
0x3A16	0x0E83      	MOVLW       _asteD1
0x3A18	0x2400      	ADDWF       R0, 0 
0x3A1A	0x6EE1      	MOVWF       FSR1L 
0x3A1C	0x0E01      	MOVLW       hi_addr(_asteD1)
0x3A1E	0x2001      	ADDWFC      R1, 0 
0x3A20	0x6EE2      	MOVWF       FSR1L+1 
0x3A22	0x0E02      	MOVLW       2
0x3A24	0x6EE6      	MOVWF       POSTINC1 
;glcd.c,480 :: 		}
L_move_aste166:
;glcd.c,481 :: 		if(turno_player == 1){
0x3A26	0x0100      	MOVLB       0
0x3A28	0x51F4      	MOVF        _turno_player, 0, 1
0x3A2A	0x0A01      	XORLW       1
0x3A2C	0xA4D8      	BTFSS       STATUS, 2 
0x3A2E	0xD077      	BRA         L_move_aste167
;glcd.c,482 :: 		if((asteD1[i].y >= jugador[1].y) &&(asteD1[i].y < jugador[1].y + 4)){
0x3A30	0x0E03      	MOVLW       3
0x3A32	0x6E00      	MOVWF       R0 
0x3A34	0x0E00      	MOVLW       0
0x3A36	0x6E01      	MOVWF       R1 
0x3A38	0xF004C1D3  	MOVFF       move_aste_i_L0, R4
0x3A3C	0x0E00      	MOVLW       0
0x3A3E	0x6E05      	MOVWF       R5 
0x3A40	0xF001EC42  	CALL        _Mul_16X16_U, 0
0x3A44	0x0E83      	MOVLW       _asteD1
0x3A46	0x2600      	ADDWF       R0, 1 
0x3A48	0x0E01      	MOVLW       hi_addr(_asteD1)
0x3A4A	0x2201      	ADDWFC      R1, 1 
0x3A4C	0x0E01      	MOVLW       1
0x3A4E	0x2400      	ADDWF       R0, 0 
0x3A50	0x6EE9      	MOVWF       FSR0L 
0x3A52	0x0E00      	MOVLW       0
0x3A54	0x2001      	ADDWFC      R1, 0 
0x3A56	0x6EEA      	MOVWF       FSR0L+1 
0x3A58	0xF001CFEE  	MOVFF       POSTINC0, R1
0x3A5C	0x0E80      	MOVLW       128
0x3A5E	0xBE01      	BTFSC       R1, 7 
0x3A60	0x0E7F      	MOVLW       127
0x3A62	0x6E00      	MOVWF       R0 
0x3A64	0x0E80      	MOVLW       128
0x3A66	0x5C00      	SUBWF       R0, 0 
0x3A68	0xE103      	BNZ         L__move_aste543
0x3A6A	0x0101      	MOVLB       1
0x3A6C	0x51AC      	MOVF        _jugador+5, 0, 1
0x3A6E	0x5C01      	SUBWF       R1, 0 
L__move_aste543:
0x3A70	0xE355      	BNC         L_move_aste170
0x3A72	0x0101      	MOVLB       1
0x3A74	0x0E03      	MOVLW       3
0x3A76	0x6E00      	MOVWF       R0 
0x3A78	0x0E00      	MOVLW       0
0x3A7A	0x6E01      	MOVWF       R1 
0x3A7C	0xF004C1D3  	MOVFF       move_aste_i_L0, R4
0x3A80	0x0E00      	MOVLW       0
0x3A82	0x6E05      	MOVWF       R5 
0x3A84	0xF001EC42  	CALL        _Mul_16X16_U, 0
0x3A88	0x0E83      	MOVLW       _asteD1
0x3A8A	0x2600      	ADDWF       R0, 1 
0x3A8C	0x0E01      	MOVLW       hi_addr(_asteD1)
0x3A8E	0x2201      	ADDWFC      R1, 1 
0x3A90	0x0E01      	MOVLW       1
0x3A92	0x2400      	ADDWF       R0, 0 
0x3A94	0x6EE9      	MOVWF       FSR0L 
0x3A96	0x0E00      	MOVLW       0
0x3A98	0x2001      	ADDWFC      R1, 0 
0x3A9A	0x6EEA      	MOVWF       FSR0L+1 
0x3A9C	0xF003CFEE  	MOVFF       POSTINC0, R3
0x3AA0	0x0E04      	MOVLW       4
0x3AA2	0x25AC      	ADDWF       _jugador+5, 0, 1
0x3AA4	0x6E01      	MOVWF       R1 
0x3AA6	0x6A02      	CLRF        R2 
0x3AA8	0x0E00      	MOVLW       0
0x3AAA	0x2202      	ADDWFC      R2, 1 
0x3AAC	0x0E80      	MOVLW       128
0x3AAE	0xBE03      	BTFSC       R3, 7 
0x3AB0	0x0E7F      	MOVLW       127
0x3AB2	0x6E00      	MOVWF       R0 
0x3AB4	0x0E80      	MOVLW       128
0x3AB6	0x1802      	XORWF       R2, 0 
0x3AB8	0x5C00      	SUBWF       R0, 0 
0x3ABA	0xE102      	BNZ         L__move_aste544
0x3ABC	0x5001      	MOVF        R1, 0 
0x3ABE	0x5C03      	SUBWF       R3, 0 
L__move_aste544:
0x3AC0	0xE22D      	BC          L_move_aste170
L__move_aste473:
;glcd.c,483 :: 		check_coll(jugador[1], asteD1[i], 1);
0x3AC2	0x0E04      	MOVLW       4
0x3AC4	0x6E00      	MOVWF       R0 
0x3AC6	0x0EDA      	MOVLW       FARG_check_coll_nave
0x3AC8	0x6EE1      	MOVWF       FSR1L 
0x3ACA	0x0E01      	MOVLW       hi_addr(FARG_check_coll_nave)
0x3ACC	0x6EE2      	MOVWF       FSR1L+1 
0x3ACE	0x0EAB      	MOVLW       _jugador+4
0x3AD0	0x6EE9      	MOVWF       FSR0L 
0x3AD2	0x0E01      	MOVLW       hi_addr(_jugador+4)
0x3AD4	0x6EEA      	MOVWF       FSR0L+1 
L_move_aste171:
0x3AD6	0xFFE6CFEE  	MOVFF       POSTINC0, POSTINC1
0x3ADA	0x0600      	DECF        R0, 1 
0x3ADC	0xE1FC      	BNZ         L_move_aste171
0x3ADE	0x0E03      	MOVLW       3
0x3AE0	0x6E00      	MOVWF       R0 
0x3AE2	0x0E00      	MOVLW       0
0x3AE4	0x6E01      	MOVWF       R1 
0x3AE6	0xF004C1D3  	MOVFF       move_aste_i_L0, R4
0x3AEA	0x0E00      	MOVLW       0
0x3AEC	0x6E05      	MOVWF       R5 
0x3AEE	0xF001EC42  	CALL        _Mul_16X16_U, 0
0x3AF2	0x0E83      	MOVLW       _asteD1
0x3AF4	0x2400      	ADDWF       R0, 0 
0x3AF6	0x6EE9      	MOVWF       FSR0L 
0x3AF8	0x0E01      	MOVLW       hi_addr(_asteD1)
0x3AFA	0x2001      	ADDWFC      R1, 0 
0x3AFC	0x6EEA      	MOVWF       FSR0L+1 
0x3AFE	0x0E03      	MOVLW       3
0x3B00	0x6E00      	MOVWF       R0 
0x3B02	0x0EDE      	MOVLW       FARG_check_coll_aste
0x3B04	0x6EE1      	MOVWF       FSR1L 
0x3B06	0x0E01      	MOVLW       hi_addr(FARG_check_coll_aste)
0x3B08	0x6EE2      	MOVWF       FSR1L+1 
L_move_aste172:
0x3B0A	0xFFE6CFEE  	MOVFF       POSTINC0, POSTINC1
0x3B0E	0x0600      	DECF        R0, 1 
0x3B10	0xE1FC      	BNZ         L_move_aste172
0x3B12	0x0101      	MOVLB       1
0x3B14	0x0E01      	MOVLW       1
0x3B16	0x6FE1      	MOVWF       FARG_check_coll_num, 1
0x3B18	0xF008EC0B  	CALL        _check_coll, 0
;glcd.c,484 :: 		}
L_move_aste170:
;glcd.c,485 :: 		}
0x3B1C	0xD07B      	BRA         L_move_aste173
L_move_aste167:
;glcd.c,486 :: 		else if(turno_player == 2){
0x3B1E	0x0100      	MOVLB       0
0x3B20	0x51F4      	MOVF        _turno_player, 0, 1
0x3B22	0x0A02      	XORLW       2
0x3B24	0xA4D8      	BTFSS       STATUS, 2 
0x3B26	0xD076      	BRA         L_move_aste174
;glcd.c,487 :: 		if((asteD1[i].y >= jugador[0].y) &&(asteD1[i].y < jugador[0].y + 4)){
0x3B28	0x0E03      	MOVLW       3
0x3B2A	0x6E00      	MOVWF       R0 
0x3B2C	0x0E00      	MOVLW       0
0x3B2E	0x6E01      	MOVWF       R1 
0x3B30	0xF004C1D3  	MOVFF       move_aste_i_L0, R4
0x3B34	0x0E00      	MOVLW       0
0x3B36	0x6E05      	MOVWF       R5 
0x3B38	0xF001EC42  	CALL        _Mul_16X16_U, 0
0x3B3C	0x0E83      	MOVLW       _asteD1
0x3B3E	0x2600      	ADDWF       R0, 1 
0x3B40	0x0E01      	MOVLW       hi_addr(_asteD1)
0x3B42	0x2201      	ADDWFC      R1, 1 
0x3B44	0x0E01      	MOVLW       1
0x3B46	0x2400      	ADDWF       R0, 0 
0x3B48	0x6EE9      	MOVWF       FSR0L 
0x3B4A	0x0E00      	MOVLW       0
0x3B4C	0x2001      	ADDWFC      R1, 0 
0x3B4E	0x6EEA      	MOVWF       FSR0L+1 
0x3B50	0xF001CFEE  	MOVFF       POSTINC0, R1
0x3B54	0x0E80      	MOVLW       128
0x3B56	0xBE01      	BTFSC       R1, 7 
0x3B58	0x0E7F      	MOVLW       127
0x3B5A	0x6E00      	MOVWF       R0 
0x3B5C	0x0E80      	MOVLW       128
0x3B5E	0x5C00      	SUBWF       R0, 0 
0x3B60	0xE103      	BNZ         L__move_aste545
0x3B62	0x0101      	MOVLB       1
0x3B64	0x51A8      	MOVF        _jugador+1, 0, 1
0x3B66	0x5C01      	SUBWF       R1, 0 
L__move_aste545:
0x3B68	0xE355      	BNC         L_move_aste177
0x3B6A	0x0101      	MOVLB       1
0x3B6C	0x0E03      	MOVLW       3
0x3B6E	0x6E00      	MOVWF       R0 
0x3B70	0x0E00      	MOVLW       0
0x3B72	0x6E01      	MOVWF       R1 
0x3B74	0xF004C1D3  	MOVFF       move_aste_i_L0, R4
0x3B78	0x0E00      	MOVLW       0
0x3B7A	0x6E05      	MOVWF       R5 
0x3B7C	0xF001EC42  	CALL        _Mul_16X16_U, 0
0x3B80	0x0E83      	MOVLW       _asteD1
0x3B82	0x2600      	ADDWF       R0, 1 
0x3B84	0x0E01      	MOVLW       hi_addr(_asteD1)
0x3B86	0x2201      	ADDWFC      R1, 1 
0x3B88	0x0E01      	MOVLW       1
0x3B8A	0x2400      	ADDWF       R0, 0 
0x3B8C	0x6EE9      	MOVWF       FSR0L 
0x3B8E	0x0E00      	MOVLW       0
0x3B90	0x2001      	ADDWFC      R1, 0 
0x3B92	0x6EEA      	MOVWF       FSR0L+1 
0x3B94	0xF003CFEE  	MOVFF       POSTINC0, R3
0x3B98	0x0E04      	MOVLW       4
0x3B9A	0x25A8      	ADDWF       _jugador+1, 0, 1
0x3B9C	0x6E01      	MOVWF       R1 
0x3B9E	0x6A02      	CLRF        R2 
0x3BA0	0x0E00      	MOVLW       0
0x3BA2	0x2202      	ADDWFC      R2, 1 
0x3BA4	0x0E80      	MOVLW       128
0x3BA6	0xBE03      	BTFSC       R3, 7 
0x3BA8	0x0E7F      	MOVLW       127
0x3BAA	0x6E00      	MOVWF       R0 
0x3BAC	0x0E80      	MOVLW       128
0x3BAE	0x1802      	XORWF       R2, 0 
0x3BB0	0x5C00      	SUBWF       R0, 0 
0x3BB2	0xE102      	BNZ         L__move_aste546
0x3BB4	0x5001      	MOVF        R1, 0 
0x3BB6	0x5C03      	SUBWF       R3, 0 
L__move_aste546:
0x3BB8	0xE22D      	BC          L_move_aste177
L__move_aste472:
;glcd.c,488 :: 		check_coll(jugador[0], asteD1[i], 1);
0x3BBA	0x0E04      	MOVLW       4
0x3BBC	0x6E00      	MOVWF       R0 
0x3BBE	0x0EDA      	MOVLW       FARG_check_coll_nave
0x3BC0	0x6EE1      	MOVWF       FSR1L 
0x3BC2	0x0E01      	MOVLW       hi_addr(FARG_check_coll_nave)
0x3BC4	0x6EE2      	MOVWF       FSR1L+1 
0x3BC6	0x0EA7      	MOVLW       _jugador
0x3BC8	0x6EE9      	MOVWF       FSR0L 
0x3BCA	0x0E01      	MOVLW       hi_addr(_jugador)
0x3BCC	0x6EEA      	MOVWF       FSR0L+1 
L_move_aste178:
0x3BCE	0xFFE6CFEE  	MOVFF       POSTINC0, POSTINC1
0x3BD2	0x0600      	DECF        R0, 1 
0x3BD4	0xE1FC      	BNZ         L_move_aste178
0x3BD6	0x0E03      	MOVLW       3
0x3BD8	0x6E00      	MOVWF       R0 
0x3BDA	0x0E00      	MOVLW       0
0x3BDC	0x6E01      	MOVWF       R1 
0x3BDE	0xF004C1D3  	MOVFF       move_aste_i_L0, R4
0x3BE2	0x0E00      	MOVLW       0
0x3BE4	0x6E05      	MOVWF       R5 
0x3BE6	0xF001EC42  	CALL        _Mul_16X16_U, 0
0x3BEA	0x0E83      	MOVLW       _asteD1
0x3BEC	0x2400      	ADDWF       R0, 0 
0x3BEE	0x6EE9      	MOVWF       FSR0L 
0x3BF0	0x0E01      	MOVLW       hi_addr(_asteD1)
0x3BF2	0x2001      	ADDWFC      R1, 0 
0x3BF4	0x6EEA      	MOVWF       FSR0L+1 
0x3BF6	0x0E03      	MOVLW       3
0x3BF8	0x6E00      	MOVWF       R0 
0x3BFA	0x0EDE      	MOVLW       FARG_check_coll_aste
0x3BFC	0x6EE1      	MOVWF       FSR1L 
0x3BFE	0x0E01      	MOVLW       hi_addr(FARG_check_coll_aste)
0x3C00	0x6EE2      	MOVWF       FSR1L+1 
L_move_aste179:
0x3C02	0xFFE6CFEE  	MOVFF       POSTINC0, POSTINC1
0x3C06	0x0600      	DECF        R0, 1 
0x3C08	0xE1FC      	BNZ         L_move_aste179
0x3C0A	0x0101      	MOVLB       1
0x3C0C	0x0E01      	MOVLW       1
0x3C0E	0x6FE1      	MOVWF       FARG_check_coll_num, 1
0x3C10	0xF008EC0B  	CALL        _check_coll, 0
;glcd.c,489 :: 		}
L_move_aste177:
;glcd.c,490 :: 		}
L_move_aste174:
L_move_aste173:
;glcd.c,475 :: 		for(i = 0; i <4; i++){
0x3C14	0x0101      	MOVLB       1
0x3C16	0x2BD3      	INCF        move_aste_i_L0, 1, 1
;glcd.c,491 :: 		}
0x3C18	0xD69E      	BRA         L_move_aste163
L_move_aste164:
;glcd.c,492 :: 		for(i = 0; i <3; i++){
0x3C1A	0x6BD3      	CLRF        move_aste_i_L0, 1
L_move_aste180:
0x3C1C	0x0E03      	MOVLW       3
0x3C1E	0x5DD3      	SUBWF       move_aste_i_L0, 0, 1
0x3C20	0xB0D8      	BTFSC       STATUS, 0 
0x3C22	0xD15E      	BRA         L_move_aste181
;glcd.c,493 :: 		asteD2[i].old_x = asteD2[i].x;
0x3C24	0x0E03      	MOVLW       3
0x3C26	0x6E00      	MOVWF       R0 
0x3C28	0x0E00      	MOVLW       0
0x3C2A	0x6E01      	MOVWF       R1 
0x3C2C	0xF004C1D3  	MOVFF       move_aste_i_L0, R4
0x3C30	0x0E00      	MOVLW       0
0x3C32	0x6E05      	MOVWF       R5 
0x3C34	0xF001EC42  	CALL        _Mul_16X16_U, 0
0x3C38	0x0E56      	MOVLW       _asteD2
0x3C3A	0x2600      	ADDWF       R0, 1 
0x3C3C	0x0E01      	MOVLW       hi_addr(_asteD2)
0x3C3E	0x2201      	ADDWFC      R1, 1 
0x3C40	0x0E02      	MOVLW       2
0x3C42	0x2400      	ADDWF       R0, 0 
0x3C44	0x6EE1      	MOVWF       FSR1L 
0x3C46	0x0E00      	MOVLW       0
0x3C48	0x2001      	ADDWFC      R1, 0 
0x3C4A	0x6EE2      	MOVWF       FSR1L+1 
0x3C4C	0xFFE9C000  	MOVFF       R0, FSR0L
0x3C50	0xFFEAC001  	MOVFF       R1, FSR0H
0x3C54	0xF000CFEE  	MOVFF       POSTINC0, R0
0x3C58	0xFFE6C000  	MOVFF       R0, POSTINC1
;glcd.c,494 :: 		asteD2[i].x += 1;
0x3C5C	0x0E03      	MOVLW       3
0x3C5E	0x6E00      	MOVWF       R0 
0x3C60	0x0E00      	MOVLW       0
0x3C62	0x6E01      	MOVWF       R1 
0x3C64	0xF004C1D3  	MOVFF       move_aste_i_L0, R4
0x3C68	0x0E00      	MOVLW       0
0x3C6A	0x6E05      	MOVWF       R5 
0x3C6C	0xF001EC42  	CALL        _Mul_16X16_U, 0
0x3C70	0x0E56      	MOVLW       _asteD2
0x3C72	0x2400      	ADDWF       R0, 0 
0x3C74	0x6E02      	MOVWF       R2 
0x3C76	0x0E01      	MOVLW       hi_addr(_asteD2)
0x3C78	0x2001      	ADDWFC      R1, 0 
0x3C7A	0x6E03      	MOVWF       R3 
0x3C7C	0xFFE9C002  	MOVFF       R2, FSR0L
0x3C80	0xFFEAC003  	MOVFF       R3, FSR0H
0x3C84	0xF000CFEE  	MOVFF       POSTINC0, R0
0x3C88	0x2A00      	INCF        R0, 1 
0x3C8A	0xFFE1C002  	MOVFF       R2, FSR1L
0x3C8E	0xFFE2C003  	MOVFF       R3, FSR1H
0x3C92	0xFFE6C000  	MOVFF       R0, POSTINC1
;glcd.c,495 :: 		if(asteD2[i].x > 126){
0x3C96	0x0E03      	MOVLW       3
0x3C98	0x6E00      	MOVWF       R0 
0x3C9A	0x0E00      	MOVLW       0
0x3C9C	0x6E01      	MOVWF       R1 
0x3C9E	0xF004C1D3  	MOVFF       move_aste_i_L0, R4
0x3CA2	0x0E00      	MOVLW       0
0x3CA4	0x6E05      	MOVWF       R5 
0x3CA6	0xF001EC42  	CALL        _Mul_16X16_U, 0
0x3CAA	0x0E56      	MOVLW       _asteD2
0x3CAC	0x2400      	ADDWF       R0, 0 
0x3CAE	0x6EE9      	MOVWF       FSR0L 
0x3CB0	0x0E01      	MOVLW       hi_addr(_asteD2)
0x3CB2	0x2001      	ADDWFC      R1, 0 
0x3CB4	0x6EEA      	MOVWF       FSR0L+1 
0x3CB6	0xF001CFEE  	MOVFF       POSTINC0, R1
0x3CBA	0x0E80      	MOVLW       128
0x3CBC	0x0A7E      	XORLW       126
0x3CBE	0x6E00      	MOVWF       R0 
0x3CC0	0x0E80      	MOVLW       128
0x3CC2	0x1801      	XORWF       R1, 0 
0x3CC4	0x5C00      	SUBWF       R0, 0 
0x3CC6	0xE212      	BC          L_move_aste183
;glcd.c,496 :: 		asteD2[i].x = 2;
0x3CC8	0x0E03      	MOVLW       3
0x3CCA	0x6E00      	MOVWF       R0 
0x3CCC	0x0E00      	MOVLW       0
0x3CCE	0x6E01      	MOVWF       R1 
0x3CD0	0xF004C1D3  	MOVFF       move_aste_i_L0, R4
0x3CD4	0x0E00      	MOVLW       0
0x3CD6	0x6E05      	MOVWF       R5 
0x3CD8	0xF001EC42  	CALL        _Mul_16X16_U, 0
0x3CDC	0x0E56      	MOVLW       _asteD2
0x3CDE	0x2400      	ADDWF       R0, 0 
0x3CE0	0x6EE1      	MOVWF       FSR1L 
0x3CE2	0x0E01      	MOVLW       hi_addr(_asteD2)
0x3CE4	0x2001      	ADDWFC      R1, 0 
0x3CE6	0x6EE2      	MOVWF       FSR1L+1 
0x3CE8	0x0E02      	MOVLW       2
0x3CEA	0x6EE6      	MOVWF       POSTINC1 
;glcd.c,497 :: 		}
L_move_aste183:
;glcd.c,498 :: 		if(turno_player == 1){
0x3CEC	0x0100      	MOVLB       0
0x3CEE	0x51F4      	MOVF        _turno_player, 0, 1
0x3CF0	0x0A01      	XORLW       1
0x3CF2	0xA4D8      	BTFSS       STATUS, 2 
0x3CF4	0xD077      	BRA         L_move_aste184
;glcd.c,499 :: 		if((asteD2[i].y >= jugador[1].y) &&(asteD2[i].y < jugador[1].y + 4)){
0x3CF6	0x0E03      	MOVLW       3
0x3CF8	0x6E00      	MOVWF       R0 
0x3CFA	0x0E00      	MOVLW       0
0x3CFC	0x6E01      	MOVWF       R1 
0x3CFE	0xF004C1D3  	MOVFF       move_aste_i_L0, R4
0x3D02	0x0E00      	MOVLW       0
0x3D04	0x6E05      	MOVWF       R5 
0x3D06	0xF001EC42  	CALL        _Mul_16X16_U, 0
0x3D0A	0x0E56      	MOVLW       _asteD2
0x3D0C	0x2600      	ADDWF       R0, 1 
0x3D0E	0x0E01      	MOVLW       hi_addr(_asteD2)
0x3D10	0x2201      	ADDWFC      R1, 1 
0x3D12	0x0E01      	MOVLW       1
0x3D14	0x2400      	ADDWF       R0, 0 
0x3D16	0x6EE9      	MOVWF       FSR0L 
0x3D18	0x0E00      	MOVLW       0
0x3D1A	0x2001      	ADDWFC      R1, 0 
0x3D1C	0x6EEA      	MOVWF       FSR0L+1 
0x3D1E	0xF001CFEE  	MOVFF       POSTINC0, R1
0x3D22	0x0E80      	MOVLW       128
0x3D24	0xBE01      	BTFSC       R1, 7 
0x3D26	0x0E7F      	MOVLW       127
0x3D28	0x6E00      	MOVWF       R0 
0x3D2A	0x0E80      	MOVLW       128
0x3D2C	0x5C00      	SUBWF       R0, 0 
0x3D2E	0xE103      	BNZ         L__move_aste547
0x3D30	0x0101      	MOVLB       1
0x3D32	0x51AC      	MOVF        _jugador+5, 0, 1
0x3D34	0x5C01      	SUBWF       R1, 0 
L__move_aste547:
0x3D36	0xE355      	BNC         L_move_aste187
0x3D38	0x0101      	MOVLB       1
0x3D3A	0x0E03      	MOVLW       3
0x3D3C	0x6E00      	MOVWF       R0 
0x3D3E	0x0E00      	MOVLW       0
0x3D40	0x6E01      	MOVWF       R1 
0x3D42	0xF004C1D3  	MOVFF       move_aste_i_L0, R4
0x3D46	0x0E00      	MOVLW       0
0x3D48	0x6E05      	MOVWF       R5 
0x3D4A	0xF001EC42  	CALL        _Mul_16X16_U, 0
0x3D4E	0x0E56      	MOVLW       _asteD2
0x3D50	0x2600      	ADDWF       R0, 1 
0x3D52	0x0E01      	MOVLW       hi_addr(_asteD2)
0x3D54	0x2201      	ADDWFC      R1, 1 
0x3D56	0x0E01      	MOVLW       1
0x3D58	0x2400      	ADDWF       R0, 0 
0x3D5A	0x6EE9      	MOVWF       FSR0L 
0x3D5C	0x0E00      	MOVLW       0
0x3D5E	0x2001      	ADDWFC      R1, 0 
0x3D60	0x6EEA      	MOVWF       FSR0L+1 
0x3D62	0xF003CFEE  	MOVFF       POSTINC0, R3
0x3D66	0x0E04      	MOVLW       4
0x3D68	0x25AC      	ADDWF       _jugador+5, 0, 1
0x3D6A	0x6E01      	MOVWF       R1 
0x3D6C	0x6A02      	CLRF        R2 
0x3D6E	0x0E00      	MOVLW       0
0x3D70	0x2202      	ADDWFC      R2, 1 
0x3D72	0x0E80      	MOVLW       128
0x3D74	0xBE03      	BTFSC       R3, 7 
0x3D76	0x0E7F      	MOVLW       127
0x3D78	0x6E00      	MOVWF       R0 
0x3D7A	0x0E80      	MOVLW       128
0x3D7C	0x1802      	XORWF       R2, 0 
0x3D7E	0x5C00      	SUBWF       R0, 0 
0x3D80	0xE102      	BNZ         L__move_aste548
0x3D82	0x5001      	MOVF        R1, 0 
0x3D84	0x5C03      	SUBWF       R3, 0 
L__move_aste548:
0x3D86	0xE22D      	BC          L_move_aste187
L__move_aste471:
;glcd.c,500 :: 		check_coll(jugador[1], asteD2[i], 1);
0x3D88	0x0E04      	MOVLW       4
0x3D8A	0x6E00      	MOVWF       R0 
0x3D8C	0x0EDA      	MOVLW       FARG_check_coll_nave
0x3D8E	0x6EE1      	MOVWF       FSR1L 
0x3D90	0x0E01      	MOVLW       hi_addr(FARG_check_coll_nave)
0x3D92	0x6EE2      	MOVWF       FSR1L+1 
0x3D94	0x0EAB      	MOVLW       _jugador+4
0x3D96	0x6EE9      	MOVWF       FSR0L 
0x3D98	0x0E01      	MOVLW       hi_addr(_jugador+4)
0x3D9A	0x6EEA      	MOVWF       FSR0L+1 
L_move_aste188:
0x3D9C	0xFFE6CFEE  	MOVFF       POSTINC0, POSTINC1
0x3DA0	0x0600      	DECF        R0, 1 
0x3DA2	0xE1FC      	BNZ         L_move_aste188
0x3DA4	0x0E03      	MOVLW       3
0x3DA6	0x6E00      	MOVWF       R0 
0x3DA8	0x0E00      	MOVLW       0
0x3DAA	0x6E01      	MOVWF       R1 
0x3DAC	0xF004C1D3  	MOVFF       move_aste_i_L0, R4
0x3DB0	0x0E00      	MOVLW       0
0x3DB2	0x6E05      	MOVWF       R5 
0x3DB4	0xF001EC42  	CALL        _Mul_16X16_U, 0
0x3DB8	0x0E56      	MOVLW       _asteD2
0x3DBA	0x2400      	ADDWF       R0, 0 
0x3DBC	0x6EE9      	MOVWF       FSR0L 
0x3DBE	0x0E01      	MOVLW       hi_addr(_asteD2)
0x3DC0	0x2001      	ADDWFC      R1, 0 
0x3DC2	0x6EEA      	MOVWF       FSR0L+1 
0x3DC4	0x0E03      	MOVLW       3
0x3DC6	0x6E00      	MOVWF       R0 
0x3DC8	0x0EDE      	MOVLW       FARG_check_coll_aste
0x3DCA	0x6EE1      	MOVWF       FSR1L 
0x3DCC	0x0E01      	MOVLW       hi_addr(FARG_check_coll_aste)
0x3DCE	0x6EE2      	MOVWF       FSR1L+1 
L_move_aste189:
0x3DD0	0xFFE6CFEE  	MOVFF       POSTINC0, POSTINC1
0x3DD4	0x0600      	DECF        R0, 1 
0x3DD6	0xE1FC      	BNZ         L_move_aste189
0x3DD8	0x0101      	MOVLB       1
0x3DDA	0x0E01      	MOVLW       1
0x3DDC	0x6FE1      	MOVWF       FARG_check_coll_num, 1
0x3DDE	0xF008EC0B  	CALL        _check_coll, 0
;glcd.c,501 :: 		}
L_move_aste187:
;glcd.c,502 :: 		}
0x3DE2	0xD07B      	BRA         L_move_aste190
L_move_aste184:
;glcd.c,503 :: 		else if(turno_player == 2){
0x3DE4	0x0100      	MOVLB       0
0x3DE6	0x51F4      	MOVF        _turno_player, 0, 1
0x3DE8	0x0A02      	XORLW       2
0x3DEA	0xA4D8      	BTFSS       STATUS, 2 
0x3DEC	0xD076      	BRA         L_move_aste191
;glcd.c,504 :: 		if((asteD2[i].y >= jugador[0].y) &&(asteD2[i].y < jugador[0].y + 4)){
0x3DEE	0x0E03      	MOVLW       3
0x3DF0	0x6E00      	MOVWF       R0 
0x3DF2	0x0E00      	MOVLW       0
0x3DF4	0x6E01      	MOVWF       R1 
0x3DF6	0xF004C1D3  	MOVFF       move_aste_i_L0, R4
0x3DFA	0x0E00      	MOVLW       0
0x3DFC	0x6E05      	MOVWF       R5 
0x3DFE	0xF001EC42  	CALL        _Mul_16X16_U, 0
0x3E02	0x0E56      	MOVLW       _asteD2
0x3E04	0x2600      	ADDWF       R0, 1 
0x3E06	0x0E01      	MOVLW       hi_addr(_asteD2)
0x3E08	0x2201      	ADDWFC      R1, 1 
0x3E0A	0x0E01      	MOVLW       1
0x3E0C	0x2400      	ADDWF       R0, 0 
0x3E0E	0x6EE9      	MOVWF       FSR0L 
0x3E10	0x0E00      	MOVLW       0
0x3E12	0x2001      	ADDWFC      R1, 0 
0x3E14	0x6EEA      	MOVWF       FSR0L+1 
0x3E16	0xF001CFEE  	MOVFF       POSTINC0, R1
0x3E1A	0x0E80      	MOVLW       128
0x3E1C	0xBE01      	BTFSC       R1, 7 
0x3E1E	0x0E7F      	MOVLW       127
0x3E20	0x6E00      	MOVWF       R0 
0x3E22	0x0E80      	MOVLW       128
0x3E24	0x5C00      	SUBWF       R0, 0 
0x3E26	0xE103      	BNZ         L__move_aste549
0x3E28	0x0101      	MOVLB       1
0x3E2A	0x51A8      	MOVF        _jugador+1, 0, 1
0x3E2C	0x5C01      	SUBWF       R1, 0 
L__move_aste549:
0x3E2E	0xE355      	BNC         L_move_aste194
0x3E30	0x0101      	MOVLB       1
0x3E32	0x0E03      	MOVLW       3
0x3E34	0x6E00      	MOVWF       R0 
0x3E36	0x0E00      	MOVLW       0
0x3E38	0x6E01      	MOVWF       R1 
0x3E3A	0xF004C1D3  	MOVFF       move_aste_i_L0, R4
0x3E3E	0x0E00      	MOVLW       0
0x3E40	0x6E05      	MOVWF       R5 
0x3E42	0xF001EC42  	CALL        _Mul_16X16_U, 0
0x3E46	0x0E56      	MOVLW       _asteD2
0x3E48	0x2600      	ADDWF       R0, 1 
0x3E4A	0x0E01      	MOVLW       hi_addr(_asteD2)
0x3E4C	0x2201      	ADDWFC      R1, 1 
0x3E4E	0x0E01      	MOVLW       1
0x3E50	0x2400      	ADDWF       R0, 0 
0x3E52	0x6EE9      	MOVWF       FSR0L 
0x3E54	0x0E00      	MOVLW       0
0x3E56	0x2001      	ADDWFC      R1, 0 
0x3E58	0x6EEA      	MOVWF       FSR0L+1 
0x3E5A	0xF003CFEE  	MOVFF       POSTINC0, R3
0x3E5E	0x0E04      	MOVLW       4
0x3E60	0x25A8      	ADDWF       _jugador+1, 0, 1
0x3E62	0x6E01      	MOVWF       R1 
0x3E64	0x6A02      	CLRF        R2 
0x3E66	0x0E00      	MOVLW       0
0x3E68	0x2202      	ADDWFC      R2, 1 
0x3E6A	0x0E80      	MOVLW       128
0x3E6C	0xBE03      	BTFSC       R3, 7 
0x3E6E	0x0E7F      	MOVLW       127
0x3E70	0x6E00      	MOVWF       R0 
0x3E72	0x0E80      	MOVLW       128
0x3E74	0x1802      	XORWF       R2, 0 
0x3E76	0x5C00      	SUBWF       R0, 0 
0x3E78	0xE102      	BNZ         L__move_aste550
0x3E7A	0x5001      	MOVF        R1, 0 
0x3E7C	0x5C03      	SUBWF       R3, 0 
L__move_aste550:
0x3E7E	0xE22D      	BC          L_move_aste194
L__move_aste470:
;glcd.c,505 :: 		check_coll(jugador[0], asteD2[i], 1);
0x3E80	0x0E04      	MOVLW       4
0x3E82	0x6E00      	MOVWF       R0 
0x3E84	0x0EDA      	MOVLW       FARG_check_coll_nave
0x3E86	0x6EE1      	MOVWF       FSR1L 
0x3E88	0x0E01      	MOVLW       hi_addr(FARG_check_coll_nave)
0x3E8A	0x6EE2      	MOVWF       FSR1L+1 
0x3E8C	0x0EA7      	MOVLW       _jugador
0x3E8E	0x6EE9      	MOVWF       FSR0L 
0x3E90	0x0E01      	MOVLW       hi_addr(_jugador)
0x3E92	0x6EEA      	MOVWF       FSR0L+1 
L_move_aste195:
0x3E94	0xFFE6CFEE  	MOVFF       POSTINC0, POSTINC1
0x3E98	0x0600      	DECF        R0, 1 
0x3E9A	0xE1FC      	BNZ         L_move_aste195
0x3E9C	0x0E03      	MOVLW       3
0x3E9E	0x6E00      	MOVWF       R0 
0x3EA0	0x0E00      	MOVLW       0
0x3EA2	0x6E01      	MOVWF       R1 
0x3EA4	0xF004C1D3  	MOVFF       move_aste_i_L0, R4
0x3EA8	0x0E00      	MOVLW       0
0x3EAA	0x6E05      	MOVWF       R5 
0x3EAC	0xF001EC42  	CALL        _Mul_16X16_U, 0
0x3EB0	0x0E56      	MOVLW       _asteD2
0x3EB2	0x2400      	ADDWF       R0, 0 
0x3EB4	0x6EE9      	MOVWF       FSR0L 
0x3EB6	0x0E01      	MOVLW       hi_addr(_asteD2)
0x3EB8	0x2001      	ADDWFC      R1, 0 
0x3EBA	0x6EEA      	MOVWF       FSR0L+1 
0x3EBC	0x0E03      	MOVLW       3
0x3EBE	0x6E00      	MOVWF       R0 
0x3EC0	0x0EDE      	MOVLW       FARG_check_coll_aste
0x3EC2	0x6EE1      	MOVWF       FSR1L 
0x3EC4	0x0E01      	MOVLW       hi_addr(FARG_check_coll_aste)
0x3EC6	0x6EE2      	MOVWF       FSR1L+1 
L_move_aste196:
0x3EC8	0xFFE6CFEE  	MOVFF       POSTINC0, POSTINC1
0x3ECC	0x0600      	DECF        R0, 1 
0x3ECE	0xE1FC      	BNZ         L_move_aste196
0x3ED0	0x0101      	MOVLB       1
0x3ED2	0x0E01      	MOVLW       1
0x3ED4	0x6FE1      	MOVWF       FARG_check_coll_num, 1
0x3ED6	0xF008EC0B  	CALL        _check_coll, 0
;glcd.c,506 :: 		}
L_move_aste194:
;glcd.c,507 :: 		}
L_move_aste191:
L_move_aste190:
;glcd.c,492 :: 		for(i = 0; i <3; i++){
0x3EDA	0x0101      	MOVLB       1
0x3EDC	0x2BD3      	INCF        move_aste_i_L0, 1, 1
;glcd.c,508 :: 		}
0x3EDE	0xD69E      	BRA         L_move_aste180
L_move_aste181:
;glcd.c,510 :: 		for(i = 0; i <4; i++){
0x3EE0	0x6BD3      	CLRF        move_aste_i_L0, 1
L_move_aste197:
0x3EE2	0x0E04      	MOVLW       4
0x3EE4	0x5DD3      	SUBWF       move_aste_i_L0, 0, 1
0x3EE6	0xB0D8      	BTFSC       STATUS, 0 
0x3EE8	0xD15E      	BRA         L_move_aste198
;glcd.c,511 :: 		asteD4[i].old_x = asteD4[i].x;
0x3EEA	0x0E03      	MOVLW       3
0x3EEC	0x6E00      	MOVWF       R0 
0x3EEE	0x0E00      	MOVLW       0
0x3EF0	0x6E01      	MOVWF       R1 
0x3EF2	0xF004C1D3  	MOVFF       move_aste_i_L0, R4
0x3EF6	0x0E00      	MOVLW       0
0x3EF8	0x6E05      	MOVWF       R5 
0x3EFA	0xF001EC42  	CALL        _Mul_16X16_U, 0
0x3EFE	0x0E6B      	MOVLW       _asteD4
0x3F00	0x2600      	ADDWF       R0, 1 
0x3F02	0x0E01      	MOVLW       hi_addr(_asteD4)
0x3F04	0x2201      	ADDWFC      R1, 1 
0x3F06	0x0E02      	MOVLW       2
0x3F08	0x2400      	ADDWF       R0, 0 
0x3F0A	0x6EE1      	MOVWF       FSR1L 
0x3F0C	0x0E00      	MOVLW       0
0x3F0E	0x2001      	ADDWFC      R1, 0 
0x3F10	0x6EE2      	MOVWF       FSR1L+1 
0x3F12	0xFFE9C000  	MOVFF       R0, FSR0L
0x3F16	0xFFEAC001  	MOVFF       R1, FSR0H
0x3F1A	0xF000CFEE  	MOVFF       POSTINC0, R0
0x3F1E	0xFFE6C000  	MOVFF       R0, POSTINC1
;glcd.c,512 :: 		asteD4[i].x += 1;
0x3F22	0x0E03      	MOVLW       3
0x3F24	0x6E00      	MOVWF       R0 
0x3F26	0x0E00      	MOVLW       0
0x3F28	0x6E01      	MOVWF       R1 
0x3F2A	0xF004C1D3  	MOVFF       move_aste_i_L0, R4
0x3F2E	0x0E00      	MOVLW       0
0x3F30	0x6E05      	MOVWF       R5 
0x3F32	0xF001EC42  	CALL        _Mul_16X16_U, 0
0x3F36	0x0E6B      	MOVLW       _asteD4
0x3F38	0x2400      	ADDWF       R0, 0 
0x3F3A	0x6E02      	MOVWF       R2 
0x3F3C	0x0E01      	MOVLW       hi_addr(_asteD4)
0x3F3E	0x2001      	ADDWFC      R1, 0 
0x3F40	0x6E03      	MOVWF       R3 
0x3F42	0xFFE9C002  	MOVFF       R2, FSR0L
0x3F46	0xFFEAC003  	MOVFF       R3, FSR0H
0x3F4A	0xF000CFEE  	MOVFF       POSTINC0, R0
0x3F4E	0x2A00      	INCF        R0, 1 
0x3F50	0xFFE1C002  	MOVFF       R2, FSR1L
0x3F54	0xFFE2C003  	MOVFF       R3, FSR1H
0x3F58	0xFFE6C000  	MOVFF       R0, POSTINC1
;glcd.c,513 :: 		if(asteD4[i].x > 126){
0x3F5C	0x0E03      	MOVLW       3
0x3F5E	0x6E00      	MOVWF       R0 
0x3F60	0x0E00      	MOVLW       0
0x3F62	0x6E01      	MOVWF       R1 
0x3F64	0xF004C1D3  	MOVFF       move_aste_i_L0, R4
0x3F68	0x0E00      	MOVLW       0
0x3F6A	0x6E05      	MOVWF       R5 
0x3F6C	0xF001EC42  	CALL        _Mul_16X16_U, 0
0x3F70	0x0E6B      	MOVLW       _asteD4
0x3F72	0x2400      	ADDWF       R0, 0 
0x3F74	0x6EE9      	MOVWF       FSR0L 
0x3F76	0x0E01      	MOVLW       hi_addr(_asteD4)
0x3F78	0x2001      	ADDWFC      R1, 0 
0x3F7A	0x6EEA      	MOVWF       FSR0L+1 
0x3F7C	0xF001CFEE  	MOVFF       POSTINC0, R1
0x3F80	0x0E80      	MOVLW       128
0x3F82	0x0A7E      	XORLW       126
0x3F84	0x6E00      	MOVWF       R0 
0x3F86	0x0E80      	MOVLW       128
0x3F88	0x1801      	XORWF       R1, 0 
0x3F8A	0x5C00      	SUBWF       R0, 0 
0x3F8C	0xE212      	BC          L_move_aste200
;glcd.c,514 :: 		asteD4[i].x = 2;
0x3F8E	0x0E03      	MOVLW       3
0x3F90	0x6E00      	MOVWF       R0 
0x3F92	0x0E00      	MOVLW       0
0x3F94	0x6E01      	MOVWF       R1 
0x3F96	0xF004C1D3  	MOVFF       move_aste_i_L0, R4
0x3F9A	0x0E00      	MOVLW       0
0x3F9C	0x6E05      	MOVWF       R5 
0x3F9E	0xF001EC42  	CALL        _Mul_16X16_U, 0
0x3FA2	0x0E6B      	MOVLW       _asteD4
0x3FA4	0x2400      	ADDWF       R0, 0 
0x3FA6	0x6EE1      	MOVWF       FSR1L 
0x3FA8	0x0E01      	MOVLW       hi_addr(_asteD4)
0x3FAA	0x2001      	ADDWFC      R1, 0 
0x3FAC	0x6EE2      	MOVWF       FSR1L+1 
0x3FAE	0x0E02      	MOVLW       2
0x3FB0	0x6EE6      	MOVWF       POSTINC1 
;glcd.c,515 :: 		}
L_move_aste200:
;glcd.c,516 :: 		if(turno_player == 1){
0x3FB2	0x0100      	MOVLB       0
0x3FB4	0x51F4      	MOVF        _turno_player, 0, 1
0x3FB6	0x0A01      	XORLW       1
0x3FB8	0xA4D8      	BTFSS       STATUS, 2 
0x3FBA	0xD077      	BRA         L_move_aste201
;glcd.c,517 :: 		if((asteD4[i].y >= jugador[1].y) &&(asteD4[i].y < jugador[1].y + 4)){
0x3FBC	0x0E03      	MOVLW       3
0x3FBE	0x6E00      	MOVWF       R0 
0x3FC0	0x0E00      	MOVLW       0
0x3FC2	0x6E01      	MOVWF       R1 
0x3FC4	0xF004C1D3  	MOVFF       move_aste_i_L0, R4
0x3FC8	0x0E00      	MOVLW       0
0x3FCA	0x6E05      	MOVWF       R5 
0x3FCC	0xF001EC42  	CALL        _Mul_16X16_U, 0
0x3FD0	0x0E6B      	MOVLW       _asteD4
0x3FD2	0x2600      	ADDWF       R0, 1 
0x3FD4	0x0E01      	MOVLW       hi_addr(_asteD4)
0x3FD6	0x2201      	ADDWFC      R1, 1 
0x3FD8	0x0E01      	MOVLW       1
0x3FDA	0x2400      	ADDWF       R0, 0 
0x3FDC	0x6EE9      	MOVWF       FSR0L 
0x3FDE	0x0E00      	MOVLW       0
0x3FE0	0x2001      	ADDWFC      R1, 0 
0x3FE2	0x6EEA      	MOVWF       FSR0L+1 
0x3FE4	0xF001CFEE  	MOVFF       POSTINC0, R1
0x3FE8	0x0E80      	MOVLW       128
0x3FEA	0xBE01      	BTFSC       R1, 7 
0x3FEC	0x0E7F      	MOVLW       127
0x3FEE	0x6E00      	MOVWF       R0 
0x3FF0	0x0E80      	MOVLW       128
0x3FF2	0x5C00      	SUBWF       R0, 0 
0x3FF4	0xE103      	BNZ         L__move_aste551
0x3FF6	0x0101      	MOVLB       1
0x3FF8	0x51AC      	MOVF        _jugador+5, 0, 1
0x3FFA	0x5C01      	SUBWF       R1, 0 
L__move_aste551:
0x3FFC	0xE355      	BNC         L_move_aste204
0x3FFE	0x0101      	MOVLB       1
0x4000	0x0E03      	MOVLW       3
0x4002	0x6E00      	MOVWF       R0 
0x4004	0x0E00      	MOVLW       0
0x4006	0x6E01      	MOVWF       R1 
0x4008	0xF004C1D3  	MOVFF       move_aste_i_L0, R4
0x400C	0x0E00      	MOVLW       0
0x400E	0x6E05      	MOVWF       R5 
0x4010	0xF001EC42  	CALL        _Mul_16X16_U, 0
0x4014	0x0E6B      	MOVLW       _asteD4
0x4016	0x2600      	ADDWF       R0, 1 
0x4018	0x0E01      	MOVLW       hi_addr(_asteD4)
0x401A	0x2201      	ADDWFC      R1, 1 
0x401C	0x0E01      	MOVLW       1
0x401E	0x2400      	ADDWF       R0, 0 
0x4020	0x6EE9      	MOVWF       FSR0L 
0x4022	0x0E00      	MOVLW       0
0x4024	0x2001      	ADDWFC      R1, 0 
0x4026	0x6EEA      	MOVWF       FSR0L+1 
0x4028	0xF003CFEE  	MOVFF       POSTINC0, R3
0x402C	0x0E04      	MOVLW       4
0x402E	0x25AC      	ADDWF       _jugador+5, 0, 1
0x4030	0x6E01      	MOVWF       R1 
0x4032	0x6A02      	CLRF        R2 
0x4034	0x0E00      	MOVLW       0
0x4036	0x2202      	ADDWFC      R2, 1 
0x4038	0x0E80      	MOVLW       128
0x403A	0xBE03      	BTFSC       R3, 7 
0x403C	0x0E7F      	MOVLW       127
0x403E	0x6E00      	MOVWF       R0 
0x4040	0x0E80      	MOVLW       128
0x4042	0x1802      	XORWF       R2, 0 
0x4044	0x5C00      	SUBWF       R0, 0 
0x4046	0xE102      	BNZ         L__move_aste552
0x4048	0x5001      	MOVF        R1, 0 
0x404A	0x5C03      	SUBWF       R3, 0 
L__move_aste552:
0x404C	0xE22D      	BC          L_move_aste204
L__move_aste469:
;glcd.c,518 :: 		check_coll(jugador[1], asteD4[i], 1);
0x404E	0x0E04      	MOVLW       4
0x4050	0x6E00      	MOVWF       R0 
0x4052	0x0EDA      	MOVLW       FARG_check_coll_nave
0x4054	0x6EE1      	MOVWF       FSR1L 
0x4056	0x0E01      	MOVLW       hi_addr(FARG_check_coll_nave)
0x4058	0x6EE2      	MOVWF       FSR1L+1 
0x405A	0x0EAB      	MOVLW       _jugador+4
0x405C	0x6EE9      	MOVWF       FSR0L 
0x405E	0x0E01      	MOVLW       hi_addr(_jugador+4)
0x4060	0x6EEA      	MOVWF       FSR0L+1 
L_move_aste205:
0x4062	0xFFE6CFEE  	MOVFF       POSTINC0, POSTINC1
0x4066	0x0600      	DECF        R0, 1 
0x4068	0xE1FC      	BNZ         L_move_aste205
0x406A	0x0E03      	MOVLW       3
0x406C	0x6E00      	MOVWF       R0 
0x406E	0x0E00      	MOVLW       0
0x4070	0x6E01      	MOVWF       R1 
0x4072	0xF004C1D3  	MOVFF       move_aste_i_L0, R4
0x4076	0x0E00      	MOVLW       0
0x4078	0x6E05      	MOVWF       R5 
0x407A	0xF001EC42  	CALL        _Mul_16X16_U, 0
0x407E	0x0E6B      	MOVLW       _asteD4
0x4080	0x2400      	ADDWF       R0, 0 
0x4082	0x6EE9      	MOVWF       FSR0L 
0x4084	0x0E01      	MOVLW       hi_addr(_asteD4)
0x4086	0x2001      	ADDWFC      R1, 0 
0x4088	0x6EEA      	MOVWF       FSR0L+1 
0x408A	0x0E03      	MOVLW       3
0x408C	0x6E00      	MOVWF       R0 
0x408E	0x0EDE      	MOVLW       FARG_check_coll_aste
0x4090	0x6EE1      	MOVWF       FSR1L 
0x4092	0x0E01      	MOVLW       hi_addr(FARG_check_coll_aste)
0x4094	0x6EE2      	MOVWF       FSR1L+1 
L_move_aste206:
0x4096	0xFFE6CFEE  	MOVFF       POSTINC0, POSTINC1
0x409A	0x0600      	DECF        R0, 1 
0x409C	0xE1FC      	BNZ         L_move_aste206
0x409E	0x0101      	MOVLB       1
0x40A0	0x0E01      	MOVLW       1
0x40A2	0x6FE1      	MOVWF       FARG_check_coll_num, 1
0x40A4	0xF008EC0B  	CALL        _check_coll, 0
;glcd.c,519 :: 		}
L_move_aste204:
;glcd.c,520 :: 		}
0x40A8	0xD07B      	BRA         L_move_aste207
L_move_aste201:
;glcd.c,521 :: 		else if(turno_player == 2){
0x40AA	0x0100      	MOVLB       0
0x40AC	0x51F4      	MOVF        _turno_player, 0, 1
0x40AE	0x0A02      	XORLW       2
0x40B0	0xA4D8      	BTFSS       STATUS, 2 
0x40B2	0xD076      	BRA         L_move_aste208
;glcd.c,522 :: 		if((asteD4[i].y >= jugador[0].y) &&(asteD4[i].y < jugador[0].y + 4)){
0x40B4	0x0E03      	MOVLW       3
0x40B6	0x6E00      	MOVWF       R0 
0x40B8	0x0E00      	MOVLW       0
0x40BA	0x6E01      	MOVWF       R1 
0x40BC	0xF004C1D3  	MOVFF       move_aste_i_L0, R4
0x40C0	0x0E00      	MOVLW       0
0x40C2	0x6E05      	MOVWF       R5 
0x40C4	0xF001EC42  	CALL        _Mul_16X16_U, 0
0x40C8	0x0E6B      	MOVLW       _asteD4
0x40CA	0x2600      	ADDWF       R0, 1 
0x40CC	0x0E01      	MOVLW       hi_addr(_asteD4)
0x40CE	0x2201      	ADDWFC      R1, 1 
0x40D0	0x0E01      	MOVLW       1
0x40D2	0x2400      	ADDWF       R0, 0 
0x40D4	0x6EE9      	MOVWF       FSR0L 
0x40D6	0x0E00      	MOVLW       0
0x40D8	0x2001      	ADDWFC      R1, 0 
0x40DA	0x6EEA      	MOVWF       FSR0L+1 
0x40DC	0xF001CFEE  	MOVFF       POSTINC0, R1
0x40E0	0x0E80      	MOVLW       128
0x40E2	0xBE01      	BTFSC       R1, 7 
0x40E4	0x0E7F      	MOVLW       127
0x40E6	0x6E00      	MOVWF       R0 
0x40E8	0x0E80      	MOVLW       128
0x40EA	0x5C00      	SUBWF       R0, 0 
0x40EC	0xE103      	BNZ         L__move_aste553
0x40EE	0x0101      	MOVLB       1
0x40F0	0x51A8      	MOVF        _jugador+1, 0, 1
0x40F2	0x5C01      	SUBWF       R1, 0 
L__move_aste553:
0x40F4	0xE355      	BNC         L_move_aste211
0x40F6	0x0101      	MOVLB       1
0x40F8	0x0E03      	MOVLW       3
0x40FA	0x6E00      	MOVWF       R0 
0x40FC	0x0E00      	MOVLW       0
0x40FE	0x6E01      	MOVWF       R1 
0x4100	0xF004C1D3  	MOVFF       move_aste_i_L0, R4
0x4104	0x0E00      	MOVLW       0
0x4106	0x6E05      	MOVWF       R5 
0x4108	0xF001EC42  	CALL        _Mul_16X16_U, 0
0x410C	0x0E6B      	MOVLW       _asteD4
0x410E	0x2600      	ADDWF       R0, 1 
0x4110	0x0E01      	MOVLW       hi_addr(_asteD4)
0x4112	0x2201      	ADDWFC      R1, 1 
0x4114	0x0E01      	MOVLW       1
0x4116	0x2400      	ADDWF       R0, 0 
0x4118	0x6EE9      	MOVWF       FSR0L 
0x411A	0x0E00      	MOVLW       0
0x411C	0x2001      	ADDWFC      R1, 0 
0x411E	0x6EEA      	MOVWF       FSR0L+1 
0x4120	0xF003CFEE  	MOVFF       POSTINC0, R3
0x4124	0x0E04      	MOVLW       4
0x4126	0x25A8      	ADDWF       _jugador+1, 0, 1
0x4128	0x6E01      	MOVWF       R1 
0x412A	0x6A02      	CLRF        R2 
0x412C	0x0E00      	MOVLW       0
0x412E	0x2202      	ADDWFC      R2, 1 
0x4130	0x0E80      	MOVLW       128
0x4132	0xBE03      	BTFSC       R3, 7 
0x4134	0x0E7F      	MOVLW       127
0x4136	0x6E00      	MOVWF       R0 
0x4138	0x0E80      	MOVLW       128
0x413A	0x1802      	XORWF       R2, 0 
0x413C	0x5C00      	SUBWF       R0, 0 
0x413E	0xE102      	BNZ         L__move_aste554
0x4140	0x5001      	MOVF        R1, 0 
0x4142	0x5C03      	SUBWF       R3, 0 
L__move_aste554:
0x4144	0xE22D      	BC          L_move_aste211
L__move_aste468:
;glcd.c,523 :: 		check_coll(jugador[0], asteD4[i], 1);
0x4146	0x0E04      	MOVLW       4
0x4148	0x6E00      	MOVWF       R0 
0x414A	0x0EDA      	MOVLW       FARG_check_coll_nave
0x414C	0x6EE1      	MOVWF       FSR1L 
0x414E	0x0E01      	MOVLW       hi_addr(FARG_check_coll_nave)
0x4150	0x6EE2      	MOVWF       FSR1L+1 
0x4152	0x0EA7      	MOVLW       _jugador
0x4154	0x6EE9      	MOVWF       FSR0L 
0x4156	0x0E01      	MOVLW       hi_addr(_jugador)
0x4158	0x6EEA      	MOVWF       FSR0L+1 
L_move_aste212:
0x415A	0xFFE6CFEE  	MOVFF       POSTINC0, POSTINC1
0x415E	0x0600      	DECF        R0, 1 
0x4160	0xE1FC      	BNZ         L_move_aste212
0x4162	0x0E03      	MOVLW       3
0x4164	0x6E00      	MOVWF       R0 
0x4166	0x0E00      	MOVLW       0
0x4168	0x6E01      	MOVWF       R1 
0x416A	0xF004C1D3  	MOVFF       move_aste_i_L0, R4
0x416E	0x0E00      	MOVLW       0
0x4170	0x6E05      	MOVWF       R5 
0x4172	0xF001EC42  	CALL        _Mul_16X16_U, 0
0x4176	0x0E6B      	MOVLW       _asteD4
0x4178	0x2400      	ADDWF       R0, 0 
0x417A	0x6EE9      	MOVWF       FSR0L 
0x417C	0x0E01      	MOVLW       hi_addr(_asteD4)
0x417E	0x2001      	ADDWFC      R1, 0 
0x4180	0x6EEA      	MOVWF       FSR0L+1 
0x4182	0x0E03      	MOVLW       3
0x4184	0x6E00      	MOVWF       R0 
0x4186	0x0EDE      	MOVLW       FARG_check_coll_aste
0x4188	0x6EE1      	MOVWF       FSR1L 
0x418A	0x0E01      	MOVLW       hi_addr(FARG_check_coll_aste)
0x418C	0x6EE2      	MOVWF       FSR1L+1 
L_move_aste213:
0x418E	0xFFE6CFEE  	MOVFF       POSTINC0, POSTINC1
0x4192	0x0600      	DECF        R0, 1 
0x4194	0xE1FC      	BNZ         L_move_aste213
0x4196	0x0101      	MOVLB       1
0x4198	0x0E01      	MOVLW       1
0x419A	0x6FE1      	MOVWF       FARG_check_coll_num, 1
0x419C	0xF008EC0B  	CALL        _check_coll, 0
;glcd.c,524 :: 		}
L_move_aste211:
;glcd.c,525 :: 		}
L_move_aste208:
L_move_aste207:
;glcd.c,510 :: 		for(i = 0; i <4; i++){
0x41A0	0x0101      	MOVLB       1
0x41A2	0x2BD3      	INCF        move_aste_i_L0, 1, 1
;glcd.c,526 :: 		}
0x41A4	0xD69E      	BRA         L_move_aste197
L_move_aste198:
;glcd.c,527 :: 		for(i = 0; i <3; i++){
0x41A6	0x6BD3      	CLRF        move_aste_i_L0, 1
L_move_aste214:
0x41A8	0x0E03      	MOVLW       3
0x41AA	0x5DD3      	SUBWF       move_aste_i_L0, 0, 1
0x41AC	0xB0D8      	BTFSC       STATUS, 0 
0x41AE	0xD15E      	BRA         L_move_aste215
;glcd.c,528 :: 		asteD5[i].old_x = asteD5[i].x;
0x41B0	0x0E03      	MOVLW       3
0x41B2	0x6E00      	MOVWF       R0 
0x41B4	0x0E00      	MOVLW       0
0x41B6	0x6E01      	MOVWF       R1 
0x41B8	0xF004C1D3  	MOVFF       move_aste_i_L0, R4
0x41BC	0x0E00      	MOVLW       0
0x41BE	0x6E05      	MOVWF       R5 
0x41C0	0xF001EC42  	CALL        _Mul_16X16_U, 0
0x41C4	0x0EAF      	MOVLW       _asteD5
0x41C6	0x2600      	ADDWF       R0, 1 
0x41C8	0x0E01      	MOVLW       hi_addr(_asteD5)
0x41CA	0x2201      	ADDWFC      R1, 1 
0x41CC	0x0E02      	MOVLW       2
0x41CE	0x2400      	ADDWF       R0, 0 
0x41D0	0x6EE1      	MOVWF       FSR1L 
0x41D2	0x0E00      	MOVLW       0
0x41D4	0x2001      	ADDWFC      R1, 0 
0x41D6	0x6EE2      	MOVWF       FSR1L+1 
0x41D8	0xFFE9C000  	MOVFF       R0, FSR0L
0x41DC	0xFFEAC001  	MOVFF       R1, FSR0H
0x41E0	0xF000CFEE  	MOVFF       POSTINC0, R0
0x41E4	0xFFE6C000  	MOVFF       R0, POSTINC1
;glcd.c,529 :: 		asteD5[i].x += 1;
0x41E8	0x0E03      	MOVLW       3
0x41EA	0x6E00      	MOVWF       R0 
0x41EC	0x0E00      	MOVLW       0
0x41EE	0x6E01      	MOVWF       R1 
0x41F0	0xF004C1D3  	MOVFF       move_aste_i_L0, R4
0x41F4	0x0E00      	MOVLW       0
0x41F6	0x6E05      	MOVWF       R5 
0x41F8	0xF001EC42  	CALL        _Mul_16X16_U, 0
0x41FC	0x0EAF      	MOVLW       _asteD5
0x41FE	0x2400      	ADDWF       R0, 0 
0x4200	0x6E02      	MOVWF       R2 
0x4202	0x0E01      	MOVLW       hi_addr(_asteD5)
0x4204	0x2001      	ADDWFC      R1, 0 
0x4206	0x6E03      	MOVWF       R3 
0x4208	0xFFE9C002  	MOVFF       R2, FSR0L
0x420C	0xFFEAC003  	MOVFF       R3, FSR0H
0x4210	0xF000CFEE  	MOVFF       POSTINC0, R0
0x4214	0x2A00      	INCF        R0, 1 
0x4216	0xFFE1C002  	MOVFF       R2, FSR1L
0x421A	0xFFE2C003  	MOVFF       R3, FSR1H
0x421E	0xFFE6C000  	MOVFF       R0, POSTINC1
;glcd.c,530 :: 		if(asteD5[i].x > 126){
0x4222	0x0E03      	MOVLW       3
0x4224	0x6E00      	MOVWF       R0 
0x4226	0x0E00      	MOVLW       0
0x4228	0x6E01      	MOVWF       R1 
0x422A	0xF004C1D3  	MOVFF       move_aste_i_L0, R4
0x422E	0x0E00      	MOVLW       0
0x4230	0x6E05      	MOVWF       R5 
0x4232	0xF001EC42  	CALL        _Mul_16X16_U, 0
0x4236	0x0EAF      	MOVLW       _asteD5
0x4238	0x2400      	ADDWF       R0, 0 
0x423A	0x6EE9      	MOVWF       FSR0L 
0x423C	0x0E01      	MOVLW       hi_addr(_asteD5)
0x423E	0x2001      	ADDWFC      R1, 0 
0x4240	0x6EEA      	MOVWF       FSR0L+1 
0x4242	0xF001CFEE  	MOVFF       POSTINC0, R1
0x4246	0x0E80      	MOVLW       128
0x4248	0x0A7E      	XORLW       126
0x424A	0x6E00      	MOVWF       R0 
0x424C	0x0E80      	MOVLW       128
0x424E	0x1801      	XORWF       R1, 0 
0x4250	0x5C00      	SUBWF       R0, 0 
0x4252	0xE212      	BC          L_move_aste217
;glcd.c,531 :: 		asteD5[i].x = 2;
0x4254	0x0E03      	MOVLW       3
0x4256	0x6E00      	MOVWF       R0 
0x4258	0x0E00      	MOVLW       0
0x425A	0x6E01      	MOVWF       R1 
0x425C	0xF004C1D3  	MOVFF       move_aste_i_L0, R4
0x4260	0x0E00      	MOVLW       0
0x4262	0x6E05      	MOVWF       R5 
0x4264	0xF001EC42  	CALL        _Mul_16X16_U, 0
0x4268	0x0EAF      	MOVLW       _asteD5
0x426A	0x2400      	ADDWF       R0, 0 
0x426C	0x6EE1      	MOVWF       FSR1L 
0x426E	0x0E01      	MOVLW       hi_addr(_asteD5)
0x4270	0x2001      	ADDWFC      R1, 0 
0x4272	0x6EE2      	MOVWF       FSR1L+1 
0x4274	0x0E02      	MOVLW       2
0x4276	0x6EE6      	MOVWF       POSTINC1 
;glcd.c,532 :: 		}
L_move_aste217:
;glcd.c,533 :: 		if(turno_player == 1){
0x4278	0x0100      	MOVLB       0
0x427A	0x51F4      	MOVF        _turno_player, 0, 1
0x427C	0x0A01      	XORLW       1
0x427E	0xA4D8      	BTFSS       STATUS, 2 
0x4280	0xD077      	BRA         L_move_aste218
;glcd.c,534 :: 		if((asteD5[i].y >= jugador[1].y) &&(asteD5[i].y < jugador[1].y + 4)){
0x4282	0x0E03      	MOVLW       3
0x4284	0x6E00      	MOVWF       R0 
0x4286	0x0E00      	MOVLW       0
0x4288	0x6E01      	MOVWF       R1 
0x428A	0xF004C1D3  	MOVFF       move_aste_i_L0, R4
0x428E	0x0E00      	MOVLW       0
0x4290	0x6E05      	MOVWF       R5 
0x4292	0xF001EC42  	CALL        _Mul_16X16_U, 0
0x4296	0x0EAF      	MOVLW       _asteD5
0x4298	0x2600      	ADDWF       R0, 1 
0x429A	0x0E01      	MOVLW       hi_addr(_asteD5)
0x429C	0x2201      	ADDWFC      R1, 1 
0x429E	0x0E01      	MOVLW       1
0x42A0	0x2400      	ADDWF       R0, 0 
0x42A2	0x6EE9      	MOVWF       FSR0L 
0x42A4	0x0E00      	MOVLW       0
0x42A6	0x2001      	ADDWFC      R1, 0 
0x42A8	0x6EEA      	MOVWF       FSR0L+1 
0x42AA	0xF001CFEE  	MOVFF       POSTINC0, R1
0x42AE	0x0E80      	MOVLW       128
0x42B0	0xBE01      	BTFSC       R1, 7 
0x42B2	0x0E7F      	MOVLW       127
0x42B4	0x6E00      	MOVWF       R0 
0x42B6	0x0E80      	MOVLW       128
0x42B8	0x5C00      	SUBWF       R0, 0 
0x42BA	0xE103      	BNZ         L__move_aste555
0x42BC	0x0101      	MOVLB       1
0x42BE	0x51AC      	MOVF        _jugador+5, 0, 1
0x42C0	0x5C01      	SUBWF       R1, 0 
L__move_aste555:
0x42C2	0xE355      	BNC         L_move_aste221
0x42C4	0x0101      	MOVLB       1
0x42C6	0x0E03      	MOVLW       3
0x42C8	0x6E00      	MOVWF       R0 
0x42CA	0x0E00      	MOVLW       0
0x42CC	0x6E01      	MOVWF       R1 
0x42CE	0xF004C1D3  	MOVFF       move_aste_i_L0, R4
0x42D2	0x0E00      	MOVLW       0
0x42D4	0x6E05      	MOVWF       R5 
0x42D6	0xF001EC42  	CALL        _Mul_16X16_U, 0
0x42DA	0x0EAF      	MOVLW       _asteD5
0x42DC	0x2600      	ADDWF       R0, 1 
0x42DE	0x0E01      	MOVLW       hi_addr(_asteD5)
0x42E0	0x2201      	ADDWFC      R1, 1 
0x42E2	0x0E01      	MOVLW       1
0x42E4	0x2400      	ADDWF       R0, 0 
0x42E6	0x6EE9      	MOVWF       FSR0L 
0x42E8	0x0E00      	MOVLW       0
0x42EA	0x2001      	ADDWFC      R1, 0 
0x42EC	0x6EEA      	MOVWF       FSR0L+1 
0x42EE	0xF003CFEE  	MOVFF       POSTINC0, R3
0x42F2	0x0E04      	MOVLW       4
0x42F4	0x25AC      	ADDWF       _jugador+5, 0, 1
0x42F6	0x6E01      	MOVWF       R1 
0x42F8	0x6A02      	CLRF        R2 
0x42FA	0x0E00      	MOVLW       0
0x42FC	0x2202      	ADDWFC      R2, 1 
0x42FE	0x0E80      	MOVLW       128
0x4300	0xBE03      	BTFSC       R3, 7 
0x4302	0x0E7F      	MOVLW       127
0x4304	0x6E00      	MOVWF       R0 
0x4306	0x0E80      	MOVLW       128
0x4308	0x1802      	XORWF       R2, 0 
0x430A	0x5C00      	SUBWF       R0, 0 
0x430C	0xE102      	BNZ         L__move_aste556
0x430E	0x5001      	MOVF        R1, 0 
0x4310	0x5C03      	SUBWF       R3, 0 
L__move_aste556:
0x4312	0xE22D      	BC          L_move_aste221
L__move_aste467:
;glcd.c,535 :: 		check_coll(jugador[1], asteD5[i], 1);
0x4314	0x0E04      	MOVLW       4
0x4316	0x6E00      	MOVWF       R0 
0x4318	0x0EDA      	MOVLW       FARG_check_coll_nave
0x431A	0x6EE1      	MOVWF       FSR1L 
0x431C	0x0E01      	MOVLW       hi_addr(FARG_check_coll_nave)
0x431E	0x6EE2      	MOVWF       FSR1L+1 
0x4320	0x0EAB      	MOVLW       _jugador+4
0x4322	0x6EE9      	MOVWF       FSR0L 
0x4324	0x0E01      	MOVLW       hi_addr(_jugador+4)
0x4326	0x6EEA      	MOVWF       FSR0L+1 
L_move_aste222:
0x4328	0xFFE6CFEE  	MOVFF       POSTINC0, POSTINC1
0x432C	0x0600      	DECF        R0, 1 
0x432E	0xE1FC      	BNZ         L_move_aste222
0x4330	0x0E03      	MOVLW       3
0x4332	0x6E00      	MOVWF       R0 
0x4334	0x0E00      	MOVLW       0
0x4336	0x6E01      	MOVWF       R1 
0x4338	0xF004C1D3  	MOVFF       move_aste_i_L0, R4
0x433C	0x0E00      	MOVLW       0
0x433E	0x6E05      	MOVWF       R5 
0x4340	0xF001EC42  	CALL        _Mul_16X16_U, 0
0x4344	0x0EAF      	MOVLW       _asteD5
0x4346	0x2400      	ADDWF       R0, 0 
0x4348	0x6EE9      	MOVWF       FSR0L 
0x434A	0x0E01      	MOVLW       hi_addr(_asteD5)
0x434C	0x2001      	ADDWFC      R1, 0 
0x434E	0x6EEA      	MOVWF       FSR0L+1 
0x4350	0x0E03      	MOVLW       3
0x4352	0x6E00      	MOVWF       R0 
0x4354	0x0EDE      	MOVLW       FARG_check_coll_aste
0x4356	0x6EE1      	MOVWF       FSR1L 
0x4358	0x0E01      	MOVLW       hi_addr(FARG_check_coll_aste)
0x435A	0x6EE2      	MOVWF       FSR1L+1 
L_move_aste223:
0x435C	0xFFE6CFEE  	MOVFF       POSTINC0, POSTINC1
0x4360	0x0600      	DECF        R0, 1 
0x4362	0xE1FC      	BNZ         L_move_aste223
0x4364	0x0101      	MOVLB       1
0x4366	0x0E01      	MOVLW       1
0x4368	0x6FE1      	MOVWF       FARG_check_coll_num, 1
0x436A	0xF008EC0B  	CALL        _check_coll, 0
;glcd.c,536 :: 		}
L_move_aste221:
;glcd.c,537 :: 		}
0x436E	0xD07B      	BRA         L_move_aste224
L_move_aste218:
;glcd.c,538 :: 		else if(turno_player == 2){
0x4370	0x0100      	MOVLB       0
0x4372	0x51F4      	MOVF        _turno_player, 0, 1
0x4374	0x0A02      	XORLW       2
0x4376	0xA4D8      	BTFSS       STATUS, 2 
0x4378	0xD076      	BRA         L_move_aste225
;glcd.c,539 :: 		if((asteD5[i].y >= jugador[0].y) &&(asteD5[i].y < jugador[0].y + 4)){
0x437A	0x0E03      	MOVLW       3
0x437C	0x6E00      	MOVWF       R0 
0x437E	0x0E00      	MOVLW       0
0x4380	0x6E01      	MOVWF       R1 
0x4382	0xF004C1D3  	MOVFF       move_aste_i_L0, R4
0x4386	0x0E00      	MOVLW       0
0x4388	0x6E05      	MOVWF       R5 
0x438A	0xF001EC42  	CALL        _Mul_16X16_U, 0
0x438E	0x0EAF      	MOVLW       _asteD5
0x4390	0x2600      	ADDWF       R0, 1 
0x4392	0x0E01      	MOVLW       hi_addr(_asteD5)
0x4394	0x2201      	ADDWFC      R1, 1 
0x4396	0x0E01      	MOVLW       1
0x4398	0x2400      	ADDWF       R0, 0 
0x439A	0x6EE9      	MOVWF       FSR0L 
0x439C	0x0E00      	MOVLW       0
0x439E	0x2001      	ADDWFC      R1, 0 
0x43A0	0x6EEA      	MOVWF       FSR0L+1 
0x43A2	0xF001CFEE  	MOVFF       POSTINC0, R1
0x43A6	0x0E80      	MOVLW       128
0x43A8	0xBE01      	BTFSC       R1, 7 
0x43AA	0x0E7F      	MOVLW       127
0x43AC	0x6E00      	MOVWF       R0 
0x43AE	0x0E80      	MOVLW       128
0x43B0	0x5C00      	SUBWF       R0, 0 
0x43B2	0xE103      	BNZ         L__move_aste557
0x43B4	0x0101      	MOVLB       1
0x43B6	0x51A8      	MOVF        _jugador+1, 0, 1
0x43B8	0x5C01      	SUBWF       R1, 0 
L__move_aste557:
0x43BA	0xE355      	BNC         L_move_aste228
0x43BC	0x0101      	MOVLB       1
0x43BE	0x0E03      	MOVLW       3
0x43C0	0x6E00      	MOVWF       R0 
0x43C2	0x0E00      	MOVLW       0
0x43C4	0x6E01      	MOVWF       R1 
0x43C6	0xF004C1D3  	MOVFF       move_aste_i_L0, R4
0x43CA	0x0E00      	MOVLW       0
0x43CC	0x6E05      	MOVWF       R5 
0x43CE	0xF001EC42  	CALL        _Mul_16X16_U, 0
0x43D2	0x0EAF      	MOVLW       _asteD5
0x43D4	0x2600      	ADDWF       R0, 1 
0x43D6	0x0E01      	MOVLW       hi_addr(_asteD5)
0x43D8	0x2201      	ADDWFC      R1, 1 
0x43DA	0x0E01      	MOVLW       1
0x43DC	0x2400      	ADDWF       R0, 0 
0x43DE	0x6EE9      	MOVWF       FSR0L 
0x43E0	0x0E00      	MOVLW       0
0x43E2	0x2001      	ADDWFC      R1, 0 
0x43E4	0x6EEA      	MOVWF       FSR0L+1 
0x43E6	0xF003CFEE  	MOVFF       POSTINC0, R3
0x43EA	0x0E04      	MOVLW       4
0x43EC	0x25A8      	ADDWF       _jugador+1, 0, 1
0x43EE	0x6E01      	MOVWF       R1 
0x43F0	0x6A02      	CLRF        R2 
0x43F2	0x0E00      	MOVLW       0
0x43F4	0x2202      	ADDWFC      R2, 1 
0x43F6	0x0E80      	MOVLW       128
0x43F8	0xBE03      	BTFSC       R3, 7 
0x43FA	0x0E7F      	MOVLW       127
0x43FC	0x6E00      	MOVWF       R0 
0x43FE	0x0E80      	MOVLW       128
0x4400	0x1802      	XORWF       R2, 0 
0x4402	0x5C00      	SUBWF       R0, 0 
0x4404	0xE102      	BNZ         L__move_aste558
0x4406	0x5001      	MOVF        R1, 0 
0x4408	0x5C03      	SUBWF       R3, 0 
L__move_aste558:
0x440A	0xE22D      	BC          L_move_aste228
L__move_aste466:
;glcd.c,540 :: 		check_coll(jugador[0], asteD5[i], 1);
0x440C	0x0E04      	MOVLW       4
0x440E	0x6E00      	MOVWF       R0 
0x4410	0x0EDA      	MOVLW       FARG_check_coll_nave
0x4412	0x6EE1      	MOVWF       FSR1L 
0x4414	0x0E01      	MOVLW       hi_addr(FARG_check_coll_nave)
0x4416	0x6EE2      	MOVWF       FSR1L+1 
0x4418	0x0EA7      	MOVLW       _jugador
0x441A	0x6EE9      	MOVWF       FSR0L 
0x441C	0x0E01      	MOVLW       hi_addr(_jugador)
0x441E	0x6EEA      	MOVWF       FSR0L+1 
L_move_aste229:
0x4420	0xFFE6CFEE  	MOVFF       POSTINC0, POSTINC1
0x4424	0x0600      	DECF        R0, 1 
0x4426	0xE1FC      	BNZ         L_move_aste229
0x4428	0x0E03      	MOVLW       3
0x442A	0x6E00      	MOVWF       R0 
0x442C	0x0E00      	MOVLW       0
0x442E	0x6E01      	MOVWF       R1 
0x4430	0xF004C1D3  	MOVFF       move_aste_i_L0, R4
0x4434	0x0E00      	MOVLW       0
0x4436	0x6E05      	MOVWF       R5 
0x4438	0xF001EC42  	CALL        _Mul_16X16_U, 0
0x443C	0x0EAF      	MOVLW       _asteD5
0x443E	0x2400      	ADDWF       R0, 0 
0x4440	0x6EE9      	MOVWF       FSR0L 
0x4442	0x0E01      	MOVLW       hi_addr(_asteD5)
0x4444	0x2001      	ADDWFC      R1, 0 
0x4446	0x6EEA      	MOVWF       FSR0L+1 
0x4448	0x0E03      	MOVLW       3
0x444A	0x6E00      	MOVWF       R0 
0x444C	0x0EDE      	MOVLW       FARG_check_coll_aste
0x444E	0x6EE1      	MOVWF       FSR1L 
0x4450	0x0E01      	MOVLW       hi_addr(FARG_check_coll_aste)
0x4452	0x6EE2      	MOVWF       FSR1L+1 
L_move_aste230:
0x4454	0xFFE6CFEE  	MOVFF       POSTINC0, POSTINC1
0x4458	0x0600      	DECF        R0, 1 
0x445A	0xE1FC      	BNZ         L_move_aste230
0x445C	0x0101      	MOVLB       1
0x445E	0x0E01      	MOVLW       1
0x4460	0x6FE1      	MOVWF       FARG_check_coll_num, 1
0x4462	0xF008EC0B  	CALL        _check_coll, 0
;glcd.c,541 :: 		}
L_move_aste228:
;glcd.c,542 :: 		}
L_move_aste225:
L_move_aste224:
;glcd.c,527 :: 		for(i = 0; i <3; i++){
0x4466	0x0101      	MOVLB       1
0x4468	0x2BD3      	INCF        move_aste_i_L0, 1, 1
;glcd.c,543 :: 		}
0x446A	0xD69E      	BRA         L_move_aste214
L_move_aste215:
;glcd.c,544 :: 		for(i = 0; i <4; i++){
0x446C	0x6BD3      	CLRF        move_aste_i_L0, 1
L_move_aste231:
0x446E	0x0E04      	MOVLW       4
0x4470	0x5DD3      	SUBWF       move_aste_i_L0, 0, 1
0x4472	0xB0D8      	BTFSC       STATUS, 0 
0x4474	0xD15E      	BRA         L_move_aste232
;glcd.c,545 :: 		asteD6[i].old_x = asteD6[i].x;
0x4476	0x0E03      	MOVLW       3
0x4478	0x6E00      	MOVWF       R0 
0x447A	0x0E00      	MOVLW       0
0x447C	0x6E01      	MOVWF       R1 
0x447E	0xF004C1D3  	MOVFF       move_aste_i_L0, R4
0x4482	0x0E00      	MOVLW       0
0x4484	0x6E05      	MOVWF       R5 
0x4486	0xF001EC42  	CALL        _Mul_16X16_U, 0
0x448A	0x0EB8      	MOVLW       _asteD6
0x448C	0x2600      	ADDWF       R0, 1 
0x448E	0x0E01      	MOVLW       hi_addr(_asteD6)
0x4490	0x2201      	ADDWFC      R1, 1 
0x4492	0x0E02      	MOVLW       2
0x4494	0x2400      	ADDWF       R0, 0 
0x4496	0x6EE1      	MOVWF       FSR1L 
0x4498	0x0E00      	MOVLW       0
0x449A	0x2001      	ADDWFC      R1, 0 
0x449C	0x6EE2      	MOVWF       FSR1L+1 
0x449E	0xFFE9C000  	MOVFF       R0, FSR0L
0x44A2	0xFFEAC001  	MOVFF       R1, FSR0H
0x44A6	0xF000CFEE  	MOVFF       POSTINC0, R0
0x44AA	0xFFE6C000  	MOVFF       R0, POSTINC1
;glcd.c,546 :: 		asteD6[i].x += 1;
0x44AE	0x0E03      	MOVLW       3
0x44B0	0x6E00      	MOVWF       R0 
0x44B2	0x0E00      	MOVLW       0
0x44B4	0x6E01      	MOVWF       R1 
0x44B6	0xF004C1D3  	MOVFF       move_aste_i_L0, R4
0x44BA	0x0E00      	MOVLW       0
0x44BC	0x6E05      	MOVWF       R5 
0x44BE	0xF001EC42  	CALL        _Mul_16X16_U, 0
0x44C2	0x0EB8      	MOVLW       _asteD6
0x44C4	0x2400      	ADDWF       R0, 0 
0x44C6	0x6E02      	MOVWF       R2 
0x44C8	0x0E01      	MOVLW       hi_addr(_asteD6)
0x44CA	0x2001      	ADDWFC      R1, 0 
0x44CC	0x6E03      	MOVWF       R3 
0x44CE	0xFFE9C002  	MOVFF       R2, FSR0L
0x44D2	0xFFEAC003  	MOVFF       R3, FSR0H
0x44D6	0xF000CFEE  	MOVFF       POSTINC0, R0
0x44DA	0x2A00      	INCF        R0, 1 
0x44DC	0xFFE1C002  	MOVFF       R2, FSR1L
0x44E0	0xFFE2C003  	MOVFF       R3, FSR1H
0x44E4	0xFFE6C000  	MOVFF       R0, POSTINC1
;glcd.c,547 :: 		if(asteD6[i].x > 126){
0x44E8	0x0E03      	MOVLW       3
0x44EA	0x6E00      	MOVWF       R0 
0x44EC	0x0E00      	MOVLW       0
0x44EE	0x6E01      	MOVWF       R1 
0x44F0	0xF004C1D3  	MOVFF       move_aste_i_L0, R4
0x44F4	0x0E00      	MOVLW       0
0x44F6	0x6E05      	MOVWF       R5 
0x44F8	0xF001EC42  	CALL        _Mul_16X16_U, 0
0x44FC	0x0EB8      	MOVLW       _asteD6
0x44FE	0x2400      	ADDWF       R0, 0 
0x4500	0x6EE9      	MOVWF       FSR0L 
0x4502	0x0E01      	MOVLW       hi_addr(_asteD6)
0x4504	0x2001      	ADDWFC      R1, 0 
0x4506	0x6EEA      	MOVWF       FSR0L+1 
0x4508	0xF001CFEE  	MOVFF       POSTINC0, R1
0x450C	0x0E80      	MOVLW       128
0x450E	0x0A7E      	XORLW       126
0x4510	0x6E00      	MOVWF       R0 
0x4512	0x0E80      	MOVLW       128
0x4514	0x1801      	XORWF       R1, 0 
0x4516	0x5C00      	SUBWF       R0, 0 
0x4518	0xE212      	BC          L_move_aste234
;glcd.c,548 :: 		asteD6[i].x = 2;
0x451A	0x0E03      	MOVLW       3
0x451C	0x6E00      	MOVWF       R0 
0x451E	0x0E00      	MOVLW       0
0x4520	0x6E01      	MOVWF       R1 
0x4522	0xF004C1D3  	MOVFF       move_aste_i_L0, R4
0x4526	0x0E00      	MOVLW       0
0x4528	0x6E05      	MOVWF       R5 
0x452A	0xF001EC42  	CALL        _Mul_16X16_U, 0
0x452E	0x0EB8      	MOVLW       _asteD6
0x4530	0x2400      	ADDWF       R0, 0 
0x4532	0x6EE1      	MOVWF       FSR1L 
0x4534	0x0E01      	MOVLW       hi_addr(_asteD6)
0x4536	0x2001      	ADDWFC      R1, 0 
0x4538	0x6EE2      	MOVWF       FSR1L+1 
0x453A	0x0E02      	MOVLW       2
0x453C	0x6EE6      	MOVWF       POSTINC1 
;glcd.c,549 :: 		}
L_move_aste234:
;glcd.c,550 :: 		if(turno_player == 1){
0x453E	0x0100      	MOVLB       0
0x4540	0x51F4      	MOVF        _turno_player, 0, 1
0x4542	0x0A01      	XORLW       1
0x4544	0xA4D8      	BTFSS       STATUS, 2 
0x4546	0xD077      	BRA         L_move_aste235
;glcd.c,551 :: 		if((asteD6[i].y >= jugador[1].y) &&(asteD6[i].y < jugador[1].y + 4)){
0x4548	0x0E03      	MOVLW       3
0x454A	0x6E00      	MOVWF       R0 
0x454C	0x0E00      	MOVLW       0
0x454E	0x6E01      	MOVWF       R1 
0x4550	0xF004C1D3  	MOVFF       move_aste_i_L0, R4
0x4554	0x0E00      	MOVLW       0
0x4556	0x6E05      	MOVWF       R5 
0x4558	0xF001EC42  	CALL        _Mul_16X16_U, 0
0x455C	0x0EB8      	MOVLW       _asteD6
0x455E	0x2600      	ADDWF       R0, 1 
0x4560	0x0E01      	MOVLW       hi_addr(_asteD6)
0x4562	0x2201      	ADDWFC      R1, 1 
0x4564	0x0E01      	MOVLW       1
0x4566	0x2400      	ADDWF       R0, 0 
0x4568	0x6EE9      	MOVWF       FSR0L 
0x456A	0x0E00      	MOVLW       0
0x456C	0x2001      	ADDWFC      R1, 0 
0x456E	0x6EEA      	MOVWF       FSR0L+1 
0x4570	0xF001CFEE  	MOVFF       POSTINC0, R1
0x4574	0x0E80      	MOVLW       128
0x4576	0xBE01      	BTFSC       R1, 7 
0x4578	0x0E7F      	MOVLW       127
0x457A	0x6E00      	MOVWF       R0 
0x457C	0x0E80      	MOVLW       128
0x457E	0x5C00      	SUBWF       R0, 0 
0x4580	0xE103      	BNZ         L__move_aste559
0x4582	0x0101      	MOVLB       1
0x4584	0x51AC      	MOVF        _jugador+5, 0, 1
0x4586	0x5C01      	SUBWF       R1, 0 
L__move_aste559:
0x4588	0xE355      	BNC         L_move_aste238
0x458A	0x0101      	MOVLB       1
0x458C	0x0E03      	MOVLW       3
0x458E	0x6E00      	MOVWF       R0 
0x4590	0x0E00      	MOVLW       0
0x4592	0x6E01      	MOVWF       R1 
0x4594	0xF004C1D3  	MOVFF       move_aste_i_L0, R4
0x4598	0x0E00      	MOVLW       0
0x459A	0x6E05      	MOVWF       R5 
0x459C	0xF001EC42  	CALL        _Mul_16X16_U, 0
0x45A0	0x0EB8      	MOVLW       _asteD6
0x45A2	0x2600      	ADDWF       R0, 1 
0x45A4	0x0E01      	MOVLW       hi_addr(_asteD6)
0x45A6	0x2201      	ADDWFC      R1, 1 
0x45A8	0x0E01      	MOVLW       1
0x45AA	0x2400      	ADDWF       R0, 0 
0x45AC	0x6EE9      	MOVWF       FSR0L 
0x45AE	0x0E00      	MOVLW       0
0x45B0	0x2001      	ADDWFC      R1, 0 
0x45B2	0x6EEA      	MOVWF       FSR0L+1 
0x45B4	0xF003CFEE  	MOVFF       POSTINC0, R3
0x45B8	0x0E04      	MOVLW       4
0x45BA	0x25AC      	ADDWF       _jugador+5, 0, 1
0x45BC	0x6E01      	MOVWF       R1 
0x45BE	0x6A02      	CLRF        R2 
0x45C0	0x0E00      	MOVLW       0
0x45C2	0x2202      	ADDWFC      R2, 1 
0x45C4	0x0E80      	MOVLW       128
0x45C6	0xBE03      	BTFSC       R3, 7 
0x45C8	0x0E7F      	MOVLW       127
0x45CA	0x6E00      	MOVWF       R0 
0x45CC	0x0E80      	MOVLW       128
0x45CE	0x1802      	XORWF       R2, 0 
0x45D0	0x5C00      	SUBWF       R0, 0 
0x45D2	0xE102      	BNZ         L__move_aste560
0x45D4	0x5001      	MOVF        R1, 0 
0x45D6	0x5C03      	SUBWF       R3, 0 
L__move_aste560:
0x45D8	0xE22D      	BC          L_move_aste238
L__move_aste465:
;glcd.c,552 :: 		check_coll(jugador[1], asteD6[i], 1);
0x45DA	0x0E04      	MOVLW       4
0x45DC	0x6E00      	MOVWF       R0 
0x45DE	0x0EDA      	MOVLW       FARG_check_coll_nave
0x45E0	0x6EE1      	MOVWF       FSR1L 
0x45E2	0x0E01      	MOVLW       hi_addr(FARG_check_coll_nave)
0x45E4	0x6EE2      	MOVWF       FSR1L+1 
0x45E6	0x0EAB      	MOVLW       _jugador+4
0x45E8	0x6EE9      	MOVWF       FSR0L 
0x45EA	0x0E01      	MOVLW       hi_addr(_jugador+4)
0x45EC	0x6EEA      	MOVWF       FSR0L+1 
L_move_aste239:
0x45EE	0xFFE6CFEE  	MOVFF       POSTINC0, POSTINC1
0x45F2	0x0600      	DECF        R0, 1 
0x45F4	0xE1FC      	BNZ         L_move_aste239
0x45F6	0x0E03      	MOVLW       3
0x45F8	0x6E00      	MOVWF       R0 
0x45FA	0x0E00      	MOVLW       0
0x45FC	0x6E01      	MOVWF       R1 
0x45FE	0xF004C1D3  	MOVFF       move_aste_i_L0, R4
0x4602	0x0E00      	MOVLW       0
0x4604	0x6E05      	MOVWF       R5 
0x4606	0xF001EC42  	CALL        _Mul_16X16_U, 0
0x460A	0x0EB8      	MOVLW       _asteD6
0x460C	0x2400      	ADDWF       R0, 0 
0x460E	0x6EE9      	MOVWF       FSR0L 
0x4610	0x0E01      	MOVLW       hi_addr(_asteD6)
0x4612	0x2001      	ADDWFC      R1, 0 
0x4614	0x6EEA      	MOVWF       FSR0L+1 
0x4616	0x0E03      	MOVLW       3
0x4618	0x6E00      	MOVWF       R0 
0x461A	0x0EDE      	MOVLW       FARG_check_coll_aste
0x461C	0x6EE1      	MOVWF       FSR1L 
0x461E	0x0E01      	MOVLW       hi_addr(FARG_check_coll_aste)
0x4620	0x6EE2      	MOVWF       FSR1L+1 
L_move_aste240:
0x4622	0xFFE6CFEE  	MOVFF       POSTINC0, POSTINC1
0x4626	0x0600      	DECF        R0, 1 
0x4628	0xE1FC      	BNZ         L_move_aste240
0x462A	0x0101      	MOVLB       1
0x462C	0x0E01      	MOVLW       1
0x462E	0x6FE1      	MOVWF       FARG_check_coll_num, 1
0x4630	0xF008EC0B  	CALL        _check_coll, 0
;glcd.c,553 :: 		}
L_move_aste238:
;glcd.c,554 :: 		}
0x4634	0xD07B      	BRA         L_move_aste241
L_move_aste235:
;glcd.c,555 :: 		else if(turno_player == 2){
0x4636	0x0100      	MOVLB       0
0x4638	0x51F4      	MOVF        _turno_player, 0, 1
0x463A	0x0A02      	XORLW       2
0x463C	0xA4D8      	BTFSS       STATUS, 2 
0x463E	0xD076      	BRA         L_move_aste242
;glcd.c,556 :: 		if((asteD6[i].y >= jugador[0].y) &&(asteD6[i].y < jugador[0].y + 4)){
0x4640	0x0E03      	MOVLW       3
0x4642	0x6E00      	MOVWF       R0 
0x4644	0x0E00      	MOVLW       0
0x4646	0x6E01      	MOVWF       R1 
0x4648	0xF004C1D3  	MOVFF       move_aste_i_L0, R4
0x464C	0x0E00      	MOVLW       0
0x464E	0x6E05      	MOVWF       R5 
0x4650	0xF001EC42  	CALL        _Mul_16X16_U, 0
0x4654	0x0EB8      	MOVLW       _asteD6
0x4656	0x2600      	ADDWF       R0, 1 
0x4658	0x0E01      	MOVLW       hi_addr(_asteD6)
0x465A	0x2201      	ADDWFC      R1, 1 
0x465C	0x0E01      	MOVLW       1
0x465E	0x2400      	ADDWF       R0, 0 
0x4660	0x6EE9      	MOVWF       FSR0L 
0x4662	0x0E00      	MOVLW       0
0x4664	0x2001      	ADDWFC      R1, 0 
0x4666	0x6EEA      	MOVWF       FSR0L+1 
0x4668	0xF001CFEE  	MOVFF       POSTINC0, R1
0x466C	0x0E80      	MOVLW       128
0x466E	0xBE01      	BTFSC       R1, 7 
0x4670	0x0E7F      	MOVLW       127
0x4672	0x6E00      	MOVWF       R0 
0x4674	0x0E80      	MOVLW       128
0x4676	0x5C00      	SUBWF       R0, 0 
0x4678	0xE103      	BNZ         L__move_aste561
0x467A	0x0101      	MOVLB       1
0x467C	0x51A8      	MOVF        _jugador+1, 0, 1
0x467E	0x5C01      	SUBWF       R1, 0 
L__move_aste561:
0x4680	0xE355      	BNC         L_move_aste245
0x4682	0x0101      	MOVLB       1
0x4684	0x0E03      	MOVLW       3
0x4686	0x6E00      	MOVWF       R0 
0x4688	0x0E00      	MOVLW       0
0x468A	0x6E01      	MOVWF       R1 
0x468C	0xF004C1D3  	MOVFF       move_aste_i_L0, R4
0x4690	0x0E00      	MOVLW       0
0x4692	0x6E05      	MOVWF       R5 
0x4694	0xF001EC42  	CALL        _Mul_16X16_U, 0
0x4698	0x0EB8      	MOVLW       _asteD6
0x469A	0x2600      	ADDWF       R0, 1 
0x469C	0x0E01      	MOVLW       hi_addr(_asteD6)
0x469E	0x2201      	ADDWFC      R1, 1 
0x46A0	0x0E01      	MOVLW       1
0x46A2	0x2400      	ADDWF       R0, 0 
0x46A4	0x6EE9      	MOVWF       FSR0L 
0x46A6	0x0E00      	MOVLW       0
0x46A8	0x2001      	ADDWFC      R1, 0 
0x46AA	0x6EEA      	MOVWF       FSR0L+1 
0x46AC	0xF003CFEE  	MOVFF       POSTINC0, R3
0x46B0	0x0E04      	MOVLW       4
0x46B2	0x25A8      	ADDWF       _jugador+1, 0, 1
0x46B4	0x6E01      	MOVWF       R1 
0x46B6	0x6A02      	CLRF        R2 
0x46B8	0x0E00      	MOVLW       0
0x46BA	0x2202      	ADDWFC      R2, 1 
0x46BC	0x0E80      	MOVLW       128
0x46BE	0xBE03      	BTFSC       R3, 7 
0x46C0	0x0E7F      	MOVLW       127
0x46C2	0x6E00      	MOVWF       R0 
0x46C4	0x0E80      	MOVLW       128
0x46C6	0x1802      	XORWF       R2, 0 
0x46C8	0x5C00      	SUBWF       R0, 0 
0x46CA	0xE102      	BNZ         L__move_aste562
0x46CC	0x5001      	MOVF        R1, 0 
0x46CE	0x5C03      	SUBWF       R3, 0 
L__move_aste562:
0x46D0	0xE22D      	BC          L_move_aste245
L__move_aste464:
;glcd.c,557 :: 		check_coll(jugador[0], asteD6[i], 1);
0x46D2	0x0E04      	MOVLW       4
0x46D4	0x6E00      	MOVWF       R0 
0x46D6	0x0EDA      	MOVLW       FARG_check_coll_nave
0x46D8	0x6EE1      	MOVWF       FSR1L 
0x46DA	0x0E01      	MOVLW       hi_addr(FARG_check_coll_nave)
0x46DC	0x6EE2      	MOVWF       FSR1L+1 
0x46DE	0x0EA7      	MOVLW       _jugador
0x46E0	0x6EE9      	MOVWF       FSR0L 
0x46E2	0x0E01      	MOVLW       hi_addr(_jugador)
0x46E4	0x6EEA      	MOVWF       FSR0L+1 
L_move_aste246:
0x46E6	0xFFE6CFEE  	MOVFF       POSTINC0, POSTINC1
0x46EA	0x0600      	DECF        R0, 1 
0x46EC	0xE1FC      	BNZ         L_move_aste246
0x46EE	0x0E03      	MOVLW       3
0x46F0	0x6E00      	MOVWF       R0 
0x46F2	0x0E00      	MOVLW       0
0x46F4	0x6E01      	MOVWF       R1 
0x46F6	0xF004C1D3  	MOVFF       move_aste_i_L0, R4
0x46FA	0x0E00      	MOVLW       0
0x46FC	0x6E05      	MOVWF       R5 
0x46FE	0xF001EC42  	CALL        _Mul_16X16_U, 0
0x4702	0x0EB8      	MOVLW       _asteD6
0x4704	0x2400      	ADDWF       R0, 0 
0x4706	0x6EE9      	MOVWF       FSR0L 
0x4708	0x0E01      	MOVLW       hi_addr(_asteD6)
0x470A	0x2001      	ADDWFC      R1, 0 
0x470C	0x6EEA      	MOVWF       FSR0L+1 
0x470E	0x0E03      	MOVLW       3
0x4710	0x6E00      	MOVWF       R0 
0x4712	0x0EDE      	MOVLW       FARG_check_coll_aste
0x4714	0x6EE1      	MOVWF       FSR1L 
0x4716	0x0E01      	MOVLW       hi_addr(FARG_check_coll_aste)
0x4718	0x6EE2      	MOVWF       FSR1L+1 
L_move_aste247:
0x471A	0xFFE6CFEE  	MOVFF       POSTINC0, POSTINC1
0x471E	0x0600      	DECF        R0, 1 
0x4720	0xE1FC      	BNZ         L_move_aste247
0x4722	0x0101      	MOVLB       1
0x4724	0x0E01      	MOVLW       1
0x4726	0x6FE1      	MOVWF       FARG_check_coll_num, 1
0x4728	0xF008EC0B  	CALL        _check_coll, 0
;glcd.c,558 :: 		}
L_move_aste245:
;glcd.c,559 :: 		}
L_move_aste242:
L_move_aste241:
;glcd.c,544 :: 		for(i = 0; i <4; i++){
0x472C	0x0101      	MOVLB       1
0x472E	0x2BD3      	INCF        move_aste_i_L0, 1, 1
;glcd.c,560 :: 		}
0x4730	0xD69E      	BRA         L_move_aste231
L_move_aste232:
;glcd.c,561 :: 		}
L_move_aste77:
;glcd.c,562 :: 		}
L_end_move_aste:
0x4732	0x0012      	RETURN      0
; end of _move_aste
_ADC_Read:
;__Lib_ADC_A_D.c,51 :: 		
;__Lib_ADC_A_D.c,54 :: 		
0x4734	0x6AC2      	CLRF        ADCON0 
;__Lib_ADC_A_D.c,55 :: 		
0x4736	0x0100      	MOVLB       0
0x4738	0x1DE6      	COMF        _vref_mask, 0, 1
0x473A	0x6E00      	MOVWF       R0 
0x473C	0x5000      	MOVF        R0, 0 
0x473E	0x16C1      	ANDWF       ADCON1, 1 
;__Lib_ADC_A_D.c,56 :: 		
0x4740	0x0E07      	MOVLW       7
0x4742	0x12C0      	IORWF       ADCON2, 1 
;__Lib_ADC_A_D.c,57 :: 		
0x4744	0x8EC0      	BSF         ADCON2, 7 
;__Lib_ADC_A_D.c,58 :: 		
0x4746	0xF000C1D3  	MOVFF       FARG_ADC_Read_channel, R0
0x474A	0x3600      	RLCF        R0, 1 
0x474C	0x9000      	BCF         R0, 0 
0x474E	0x3600      	RLCF        R0, 1 
0x4750	0x9000      	BCF         R0, 0 
0x4752	0x5000      	MOVF        R0, 0 
0x4754	0x12C2      	IORWF       ADCON0, 1 
;__Lib_ADC_A_D.c,59 :: 		
0x4756	0x80C2      	BSF         ADCON0, 0 
;__Lib_ADC_A_D.c,60 :: 		
0x4758	0xF008EC91  	CALL        _Delay_22us, 0
;__Lib_ADC_A_D.c,61 :: 		
0x475C	0x82C2      	BSF         ADCON0, 1 
;__Lib_ADC_A_D.c,62 :: 		
L_ADC_Read2:
0x475E	0xA2C2      	BTFSS       ADCON0, 1 
0x4760	0xD001      	BRA         L_ADC_Read3
;__Lib_ADC_A_D.c,63 :: 		
0x4762	0xD7FD      	BRA         L_ADC_Read2
L_ADC_Read3:
;__Lib_ADC_A_D.c,64 :: 		
0x4764	0xF001CFC4  	MOVFF       ADRESH, R1
0x4768	0x6A00      	CLRF        R0 
;__Lib_ADC_A_D.c,65 :: 		
0x476A	0x50C3      	MOVF        ADRESL, 0 
0x476C	0x1200      	IORWF       R0, 1 
0x476E	0x0E00      	MOVLW       0
0x4770	0x1201      	IORWF       R1, 1 
;__Lib_ADC_A_D.c,66 :: 		
0x4772	0x90C2      	BCF         ADCON0, 0 
;__Lib_ADC_A_D.c,68 :: 		
;__Lib_ADC_A_D.c,69 :: 		
L_end_ADC_Read:
0x4774	0x0012      	RETURN      0
; end of _ADC_Read
_port_space:
;glcd.c,61 :: 		void port_space(){          // Para mostrar la portada principal
;glcd.c,62 :: 		Glcd_Image(space);
0x4776	0x0E4F      	MOVLW       _space
0x4778	0x0101      	MOVLB       1
0x477A	0x6FDA      	MOVWF       FARG_Glcd_Image_image, 1
0x477C	0x0E5D      	MOVLW       hi_addr(_space)
0x477E	0x6FDB      	MOVWF       FARG_Glcd_Image_image+1, 1
0x4780	0x0E00      	MOVLW       higher_addr(_space)
0x4782	0x6FDC      	MOVWF       FARG_Glcd_Image_image+2, 1
0x4784	0xF008EC97  	CALL        _Glcd_Image, 0
;glcd.c,63 :: 		Glcd_Write_Text("One player", 35, 4,1);
0x4788	0x0EE9      	MOVLW       ?lstr1_glcd
0x478A	0x6FDA      	MOVWF       FARG_Glcd_Write_Text_text, 1
0x478C	0x0E00      	MOVLW       hi_addr(?lstr1_glcd)
0x478E	0x6FDB      	MOVWF       FARG_Glcd_Write_Text_text+1, 1
0x4790	0x0E23      	MOVLW       35
0x4792	0x6FDC      	MOVWF       FARG_Glcd_Write_Text_x_pos, 1
0x4794	0x0E04      	MOVLW       4
0x4796	0x6FDD      	MOVWF       FARG_Glcd_Write_Text_page_num, 1
0x4798	0x0E01      	MOVLW       1
0x479A	0x6FDE      	MOVWF       FARG_Glcd_Write_Text_color, 1
0x479C	0xF008ECE8  	CALL        _Glcd_Write_Text, 0
;glcd.c,64 :: 		Glcd_Write_Text("Two players", 32, 6,1);
0x47A0	0x0EFE      	MOVLW       ?lstr2_glcd
0x47A2	0x6FDA      	MOVWF       FARG_Glcd_Write_Text_text, 1
0x47A4	0x0E00      	MOVLW       hi_addr(?lstr2_glcd)
0x47A6	0x6FDB      	MOVWF       FARG_Glcd_Write_Text_text+1, 1
0x47A8	0x0E20      	MOVLW       32
0x47AA	0x6FDC      	MOVWF       FARG_Glcd_Write_Text_x_pos, 1
0x47AC	0x0E06      	MOVLW       6
0x47AE	0x6FDD      	MOVWF       FARG_Glcd_Write_Text_page_num, 1
0x47B0	0x0E01      	MOVLW       1
0x47B2	0x6FDE      	MOVWF       FARG_Glcd_Write_Text_color, 1
0x47B4	0xF008ECE8  	CALL        _Glcd_Write_Text, 0
;glcd.c,65 :: 		}
L_end_port_space:
0x47B8	0x0012      	RETURN      0
; end of _port_space
_send_pack_data:
;glcd.c,755 :: 		void send_pack_data(char *serial_dir){
;glcd.c,756 :: 		while (UART1_Tx_Idle()!= 1);
L_send_pack_data375:
0x47BA	0xF006EC89  	CALL        _UART1_Tx_Idle, 0
0x47BE	0x5000      	MOVF        R0, 0 
0x47C0	0x0A01      	XORLW       1
0x47C2	0xE001      	BZ          L_send_pack_data376
0x47C4	0xD7FA      	BRA         L_send_pack_data375
L_send_pack_data376:
;glcd.c,757 :: 		UART1_Write_Text(serial_dir);
0x47C6	0xF1DAC1D3  	MOVFF       FARG_send_pack_data_serial_dir, FARG_UART1_Write_Text_uart_text
0x47CA	0xF1DBC1D4  	MOVFF       FARG_send_pack_data_serial_dir+1, FARG_UART1_Write_Text_uart_text+1
0x47CE	0xF008EC77  	CALL        _UART1_Write_Text, 0
;glcd.c,758 :: 		}
L_end_send_pack_data:
0x47D2	0x0012      	RETURN      0
; end of _send_pack_data
_init_counts:
;glcd.c,760 :: 		void init_counts(){
;glcd.c,761 :: 		count = 0;
0x47D4	0x0101      	MOVLB       1
0x47D6	0x6B0C      	CLRF        _count, 1
;glcd.c,762 :: 		count1 = 0;
0x47D8	0x0100      	MOVLB       0
0x47DA	0x6BE7      	CLRF        _count1, 1
;glcd.c,763 :: 		lineTime = 0;
0x47DC	0x6BE8      	CLRF        _lineTime, 1
;glcd.c,764 :: 		timeCount = 0;
0x47DE	0x6BFD      	CLRF        _timeCount, 1
;glcd.c,765 :: 		score[0] = 0;
0x47E0	0x6BF5      	CLRF        _score, 1
;glcd.c,766 :: 		score[1] = 0;
0x47E2	0x6BF6      	CLRF        _score+1, 1
;glcd.c,767 :: 		turno_player = 0;
0x47E4	0x6BF4      	CLRF        _turno_player, 1
;glcd.c,769 :: 		}
L_end_init_counts:
0x47E6	0x0012      	RETURN      0
; end of _init_counts
_game_over:
;glcd.c,67 :: 		void game_over(){
;glcd.c,68 :: 		Glcd_Image(GameOver);
0x47E8	0x0E4F      	MOVLW       _GameOver
0x47EA	0x0101      	MOVLB       1
0x47EC	0x6FDA      	MOVWF       FARG_Glcd_Image_image, 1
0x47EE	0x0E59      	MOVLW       hi_addr(_GameOver)
0x47F0	0x6FDB      	MOVWF       FARG_Glcd_Image_image+1, 1
0x47F2	0x0E00      	MOVLW       higher_addr(_GameOver)
0x47F4	0x6FDC      	MOVWF       FARG_Glcd_Image_image+2, 1
0x47F6	0xF008EC97  	CALL        _Glcd_Image, 0
;glcd.c,69 :: 		}
L_end_game_over:
0x47FA	0x0012      	RETURN      0
; end of _game_over
_draw_lineTime:
;glcd.c,564 :: 		void draw_lineTime(){
;glcd.c,565 :: 		unsigned short i = lineTime;
0x47FC	0xF1D3C0E8  	MOVFF       _lineTime, draw_lineTime_i_L0
;glcd.c,566 :: 		for(i ; i<64; i++){
L_draw_lineTime248:
0x4800	0x0E40      	MOVLW       64
0x4802	0x0101      	MOVLB       1
0x4804	0x5DD3      	SUBWF       draw_lineTime_i_L0, 0, 1
0x4806	0xE20C      	BC          L_draw_lineTime249
;glcd.c,567 :: 		Glcd_Dot(64, i, 1);
0x4808	0x0E40      	MOVLW       64
0x480A	0x0102      	MOVLB       2
0x480C	0x6F0B      	MOVWF       FARG_Glcd_Dot_x_pos, 1
0x480E	0xF20CC1D3  	MOVFF       draw_lineTime_i_L0, FARG_Glcd_Dot_y_pos
0x4812	0x0E01      	MOVLW       1
0x4814	0x6F0D      	MOVWF       FARG_Glcd_Dot_color, 1
0x4816	0xF000EC73  	CALL        _Glcd_Dot, 0
;glcd.c,566 :: 		for(i ; i<64; i++){
0x481A	0x0101      	MOVLB       1
0x481C	0x2BD3      	INCF        draw_lineTime_i_L0, 1, 1
;glcd.c,568 :: 		}
0x481E	0xD7F0      	BRA         L_draw_lineTime248
L_draw_lineTime249:
;glcd.c,569 :: 		}
L_end_draw_lineTime:
0x4820	0x0012      	RETURN      0
; end of _draw_lineTime
_init_aste:
;glcd.c,99 :: 		void init_aste(){
;glcd.c,100 :: 		aste1[0].x = 16;
0x4822	0x0E10      	MOVLW       16
0x4824	0x0101      	MOVLB       1
0x4826	0x6F77      	MOVWF       _aste1, 1
;glcd.c,101 :: 		aste1[0].y = 2;
0x4828	0x0E02      	MOVLW       2
0x482A	0x6F78      	MOVWF       _aste1+1, 1
;glcd.c,102 :: 		aste1[1].x = 48;
0x482C	0x0E30      	MOVLW       48
0x482E	0x6F7A      	MOVWF       _aste1+3, 1
;glcd.c,103 :: 		aste1[1].y = 2;
0x4830	0x0E02      	MOVLW       2
0x4832	0x6F7B      	MOVWF       _aste1+4, 1
;glcd.c,104 :: 		aste1[2].x = 89;
0x4834	0x0E59      	MOVLW       89
0x4836	0x6F7D      	MOVWF       _aste1+6, 1
;glcd.c,105 :: 		aste1[2].y = 2;
0x4838	0x0E02      	MOVLW       2
0x483A	0x6F7E      	MOVWF       _aste1+7, 1
;glcd.c,106 :: 		aste1[3].x = 124;
0x483C	0x0E7C      	MOVLW       124
0x483E	0x6F80      	MOVWF       _aste1+9, 1
;glcd.c,107 :: 		aste1[3].y = 2;
0x4840	0x0E02      	MOVLW       2
0x4842	0x6F81      	MOVWF       _aste1+10, 1
;glcd.c,109 :: 		aste2[0].x = 13;
0x4844	0x0E0D      	MOVLW       13
0x4846	0x6F8F      	MOVWF       _aste2, 1
;glcd.c,110 :: 		aste2[0].y = 12;
0x4848	0x0E0C      	MOVLW       12
0x484A	0x6F90      	MOVWF       _aste2+1, 1
;glcd.c,111 :: 		aste2[1].x = 48;
0x484C	0x0E30      	MOVLW       48
0x484E	0x6F92      	MOVWF       _aste2+3, 1
;glcd.c,112 :: 		aste2[1].y = 12;
0x4850	0x0E0C      	MOVLW       12
0x4852	0x6F93      	MOVWF       _aste2+4, 1
;glcd.c,113 :: 		aste2[2].x = 78;
0x4854	0x0E4E      	MOVLW       78
0x4856	0x6F95      	MOVWF       _aste2+6, 1
;glcd.c,114 :: 		aste2[2].y = 12;
0x4858	0x0E0C      	MOVLW       12
0x485A	0x6F96      	MOVWF       _aste2+7, 1
;glcd.c,115 :: 		aste2[3].x = 111;
0x485C	0x0E6F      	MOVLW       111
0x485E	0x6F98      	MOVWF       _aste2+9, 1
;glcd.c,116 :: 		aste2[3].y = 12;
0x4860	0x0E0C      	MOVLW       12
0x4862	0x6F99      	MOVWF       _aste2+10, 1
;glcd.c,118 :: 		aste3[0].x = 22;
0x4864	0x0E16      	MOVLW       22
0x4866	0x6F5F      	MOVWF       _aste3, 1
;glcd.c,119 :: 		aste3[0].y = 21;
0x4868	0x0E15      	MOVLW       21
0x486A	0x6F60      	MOVWF       _aste3+1, 1
;glcd.c,120 :: 		aste3[1].x = 62;
0x486C	0x0E3E      	MOVLW       62
0x486E	0x6F62      	MOVWF       _aste3+3, 1
;glcd.c,121 :: 		aste3[1].y = 21;
0x4870	0x0E15      	MOVLW       21
0x4872	0x6F63      	MOVWF       _aste3+4, 1
;glcd.c,122 :: 		aste3[2].x = 92;
0x4874	0x0E5C      	MOVLW       92
0x4876	0x6F65      	MOVWF       _aste3+6, 1
;glcd.c,123 :: 		aste3[2].y = 21;
0x4878	0x0E15      	MOVLW       21
0x487A	0x6F66      	MOVWF       _aste3+7, 1
;glcd.c,124 :: 		aste3[3].x = 126;
0x487C	0x0E7E      	MOVLW       126
0x487E	0x6F68      	MOVWF       _aste3+9, 1
;glcd.c,125 :: 		aste3[3].y = 21;
0x4880	0x0E15      	MOVLW       21
0x4882	0x6F69      	MOVWF       _aste3+10, 1
;glcd.c,127 :: 		aste5[0].x = 17;
0x4884	0x0E11      	MOVLW       17
0x4886	0x6F9B      	MOVWF       _aste5, 1
;glcd.c,128 :: 		aste5[0].y = 35;
0x4888	0x0E23      	MOVLW       35
0x488A	0x6F9C      	MOVWF       _aste5+1, 1
;glcd.c,129 :: 		aste5[1].x = 61;
0x488C	0x0E3D      	MOVLW       61
0x488E	0x6F9E      	MOVWF       _aste5+3, 1
;glcd.c,130 :: 		aste5[1].y = 35;
0x4890	0x0E23      	MOVLW       35
0x4892	0x6F9F      	MOVWF       _aste5+4, 1
;glcd.c,131 :: 		aste5[2].x = 94;
0x4894	0x0E5E      	MOVLW       94
0x4896	0x6FA1      	MOVWF       _aste5+6, 1
;glcd.c,132 :: 		aste5[2].y = 35;
0x4898	0x0E23      	MOVLW       35
0x489A	0x6FA2      	MOVWF       _aste5+7, 1
;glcd.c,133 :: 		aste5[3].x = 118;
0x489C	0x0E76      	MOVLW       118
0x489E	0x6FA4      	MOVWF       _aste5+9, 1
;glcd.c,134 :: 		aste5[3].y = 35;
0x48A0	0x0E23      	MOVLW       35
0x48A2	0x6FA5      	MOVWF       _aste5+10, 1
;glcd.c,136 :: 		aste7[0].x = 7;
0x48A4	0x0E07      	MOVLW       7
0x48A6	0x6FC4      	MOVWF       _aste7, 1
;glcd.c,137 :: 		aste7[0].y = 56;
0x48A8	0x0E38      	MOVLW       56
0x48AA	0x6FC5      	MOVWF       _aste7+1, 1
;glcd.c,138 :: 		aste7[1].x = 41;
0x48AC	0x0E29      	MOVLW       41
0x48AE	0x6FC7      	MOVWF       _aste7+3, 1
;glcd.c,139 :: 		aste7[1].y = 56;
0x48B0	0x0E38      	MOVLW       56
0x48B2	0x6FC8      	MOVWF       _aste7+4, 1
;glcd.c,140 :: 		aste7[2].x = 74;
0x48B4	0x0E4A      	MOVLW       74
0x48B6	0x6FCA      	MOVWF       _aste7+6, 1
;glcd.c,141 :: 		aste7[2].y = 56;
0x48B8	0x0E38      	MOVLW       56
0x48BA	0x6FCB      	MOVWF       _aste7+7, 1
;glcd.c,142 :: 		aste7[3].x = 107;
0x48BC	0x0E6B      	MOVLW       107
0x48BE	0x6FCD      	MOVWF       _aste7+9, 1
;glcd.c,143 :: 		aste7[3].y = 56;
0x48C0	0x0E38      	MOVLW       56
0x48C2	0x6FCE      	MOVWF       _aste7+10, 1
;glcd.c,146 :: 		asteD1[3].x = 27;
0x48C4	0x0E1B      	MOVLW       27
0x48C6	0x6F8C      	MOVWF       _asteD1+9, 1
;glcd.c,147 :: 		asteD1[3].y = 6;
0x48C8	0x0E06      	MOVLW       6
0x48CA	0x6F8D      	MOVWF       _asteD1+10, 1
;glcd.c,148 :: 		asteD1[2].x = 63;
0x48CC	0x0E3F      	MOVLW       63
0x48CE	0x6F89      	MOVWF       _asteD1+6, 1
;glcd.c,149 :: 		asteD1[2].y = 6;
0x48D0	0x0E06      	MOVLW       6
0x48D2	0x6F8A      	MOVWF       _asteD1+7, 1
;glcd.c,150 :: 		asteD1[1].x = 100;
0x48D4	0x0E64      	MOVLW       100
0x48D6	0x6F86      	MOVWF       _asteD1+3, 1
;glcd.c,151 :: 		asteD1[1].y = 6;
0x48D8	0x0E06      	MOVLW       6
0x48DA	0x6F87      	MOVWF       _asteD1+4, 1
;glcd.c,152 :: 		asteD1[0].x = 123;
0x48DC	0x0E7B      	MOVLW       123
0x48DE	0x6F83      	MOVWF       _asteD1, 1
;glcd.c,153 :: 		asteD1[0].y = 6;
0x48E0	0x0E06      	MOVLW       6
0x48E2	0x6F84      	MOVWF       _asteD1+1, 1
;glcd.c,155 :: 		asteD2[2].x = 37;
0x48E4	0x0E25      	MOVLW       37
0x48E6	0x6F5C      	MOVWF       _asteD2+6, 1
;glcd.c,156 :: 		asteD2[2].y = 16;
0x48E8	0x0E10      	MOVLW       16
0x48EA	0x6F5D      	MOVWF       _asteD2+7, 1
;glcd.c,157 :: 		asteD2[1].x = 84;
0x48EC	0x0E54      	MOVLW       84
0x48EE	0x6F59      	MOVWF       _asteD2+3, 1
;glcd.c,158 :: 		asteD2[1].y = 16;
0x48F0	0x0E10      	MOVLW       16
0x48F2	0x6F5A      	MOVWF       _asteD2+4, 1
;glcd.c,159 :: 		asteD2[0].x = 126;
0x48F4	0x0E7E      	MOVLW       126
0x48F6	0x6F56      	MOVWF       _asteD2, 1
;glcd.c,160 :: 		asteD2[0].y = 16;
0x48F8	0x0E10      	MOVLW       16
0x48FA	0x6F57      	MOVWF       _asteD2+1, 1
;glcd.c,162 :: 		asteD4[3].x = 19;
0x48FC	0x0E13      	MOVLW       19
0x48FE	0x6F74      	MOVWF       _asteD4+9, 1
;glcd.c,163 :: 		asteD4[3].y = 28;
0x4900	0x0E1C      	MOVLW       28
0x4902	0x6F75      	MOVWF       _asteD4+10, 1
;glcd.c,164 :: 		asteD4[2].x = 49;
0x4904	0x0E31      	MOVLW       49
0x4906	0x6F71      	MOVWF       _asteD4+6, 1
;glcd.c,165 :: 		asteD4[2].y = 28;
0x4908	0x0E1C      	MOVLW       28
0x490A	0x6F72      	MOVWF       _asteD4+7, 1
;glcd.c,166 :: 		asteD4[1].x = 83;
0x490C	0x0E53      	MOVLW       83
0x490E	0x6F6E      	MOVWF       _asteD4+3, 1
;glcd.c,167 :: 		asteD4[1].y = 28;
0x4910	0x0E1C      	MOVLW       28
0x4912	0x6F6F      	MOVWF       _asteD4+4, 1
;glcd.c,168 :: 		asteD4[0].x = 119;
0x4914	0x0E77      	MOVLW       119
0x4916	0x6F6B      	MOVWF       _asteD4, 1
;glcd.c,169 :: 		asteD4[0].y = 28;
0x4918	0x0E1C      	MOVLW       28
0x491A	0x6F6C      	MOVWF       _asteD4+1, 1
;glcd.c,171 :: 		asteD5[2].x = 16;
0x491C	0x0E10      	MOVLW       16
0x491E	0x6FB5      	MOVWF       _asteD5+6, 1
;glcd.c,172 :: 		asteD5[2].y = 40;
0x4920	0x0E28      	MOVLW       40
0x4922	0x6FB6      	MOVWF       _asteD5+7, 1
;glcd.c,173 :: 		asteD5[1].x = 72;
0x4924	0x0E48      	MOVLW       72
0x4926	0x6FB2      	MOVWF       _asteD5+3, 1
;glcd.c,174 :: 		asteD5[1].y = 40;
0x4928	0x0E28      	MOVLW       40
0x492A	0x6FB3      	MOVWF       _asteD5+4, 1
;glcd.c,175 :: 		asteD5[0].x = 121;
0x492C	0x0E79      	MOVLW       121
0x492E	0x6FAF      	MOVWF       _asteD5, 1
;glcd.c,176 :: 		asteD5[0].y = 40;
0x4930	0x0E28      	MOVLW       40
0x4932	0x6FB0      	MOVWF       _asteD5+1, 1
;glcd.c,178 :: 		asteD6[3].x = 29;
0x4934	0x0E1D      	MOVLW       29
0x4936	0x6FC1      	MOVWF       _asteD6+9, 1
;glcd.c,179 :: 		asteD6[3].y = 49;
0x4938	0x0E31      	MOVLW       49
0x493A	0x6FC2      	MOVWF       _asteD6+10, 1
;glcd.c,180 :: 		asteD6[2].x = 60;
0x493C	0x0E3C      	MOVLW       60
0x493E	0x6FBE      	MOVWF       _asteD6+6, 1
;glcd.c,181 :: 		asteD6[2].y = 49;
0x4940	0x0E31      	MOVLW       49
0x4942	0x6FBF      	MOVWF       _asteD6+7, 1
;glcd.c,182 :: 		asteD6[1].x = 90;
0x4944	0x0E5A      	MOVLW       90
0x4946	0x6FBB      	MOVWF       _asteD6+3, 1
;glcd.c,183 :: 		asteD6[1].y = 49;
0x4948	0x0E31      	MOVLW       49
0x494A	0x6FBC      	MOVWF       _asteD6+4, 1
;glcd.c,184 :: 		asteD6[0].x = 120;
0x494C	0x0E78      	MOVLW       120
0x494E	0x6FB8      	MOVWF       _asteD6, 1
;glcd.c,185 :: 		asteD6[0].y = 49;
0x4950	0x0E31      	MOVLW       49
0x4952	0x6FB9      	MOVWF       _asteD6+1, 1
;glcd.c,187 :: 		draw_aste();
0x4954	0xF009EC83  	CALL        _draw_aste, 0
;glcd.c,188 :: 		}
L_end_init_aste:
0x4958	0x0012      	RETURN      0
; end of _init_aste
_main:
0x495A	0xF032EC15  	CALL        25642, 0
;glcd.c,771 :: 		void main() {
;glcd.c,772 :: 		char E_M = '3';
0x495E	0x0E33      	MOVLW       51
0x4960	0x0101      	MOVLB       1
0x4962	0x6FD0      	MOVWF       main_E_M_L0, 1
0x4964	0x6BD1      	CLRF        main_Player_L0, 1
0x4966	0x6BD2      	CLRF        main_count_op_L0, 1
;glcd.c,776 :: 		Glcd_Init();         // Para inicialzar el modulo glcd
0x4968	0xF00DECFC  	CALL        _Glcd_Init, 0
;glcd.c,777 :: 		Glcd_Fill(0x00);        // Para limpiar la pantalla
0x496C	0x6BD3      	CLRF        FARG_Glcd_Fill_pattern, 1
0x496E	0xF00EEC72  	CALL        _Glcd_Fill, 0
;glcd.c,781 :: 		PORTC = 0;      //Ponemos todo el puerto C en 0
0x4972	0x6A82      	CLRF        PORTC 
;glcd.c,782 :: 		TRISC.F0 = 1;   //Se declara como una entrada
0x4974	0x8094      	BSF         TRISC, 0 
;glcd.c,783 :: 		TRISC.F1 = 1;
0x4976	0x8294      	BSF         TRISC, 1 
;glcd.c,787 :: 		UART1_Init(9600); // baudios a 9600
0x4978	0x86B8      	BSF         BAUDCON, 3, 0
0x497A	0x6AB0      	CLRF        SPBRGH 
0x497C	0x0ECF      	MOVLW       207
0x497E	0x6EAF      	MOVWF       SPBRG 
0x4980	0x84AC      	BSF         TXSTA, 2, 0
0x4982	0xF00EEC46  	CALL        _UART1_Init, 0
;glcd.c,788 :: 		Delay_ms(200);    // Esperamos a que se estabilice el modulo uart
0x4986	0x0E03      	MOVLW       3
0x4988	0x6E0B      	MOVWF       R11, 0
0x498A	0x0E08      	MOVLW       8
0x498C	0x6E0C      	MOVWF       R12, 0
0x498E	0x0E77      	MOVLW       119
0x4990	0x6E0D      	MOVWF       R13, 0
L_main377:
0x4992	0x2E0D      	DECFSZ      R13, 1, 0
0x4994	0xD7FE      	BRA         L_main377
0x4996	0x2E0C      	DECFSZ      R12, 1, 0
0x4998	0xD7FC      	BRA         L_main377
0x499A	0x2E0B      	DECFSZ      R11, 1, 0
0x499C	0xD7FA      	BRA         L_main377
;glcd.c,791 :: 		ADC_Init();
0x499E	0xF00EEC32  	CALL        _ADC_Init, 0
;glcd.c,793 :: 		first_CoverP();
0x49A2	0xF00EECA2  	CALL        _first_CoverP, 0
;glcd.c,794 :: 		Glcd_Fill(0x00);
0x49A6	0x6BD3      	CLRF        FARG_Glcd_Fill_pattern, 1
0x49A8	0xF00EEC72  	CALL        _Glcd_Fill, 0
;glcd.c,796 :: 		while(1){
L_main378:
;glcd.c,797 :: 		switch(estado){
0x49AC	0xD2E9      	BRA         L_main380
;glcd.c,798 :: 		case 0:
L_main382:
;glcd.c,799 :: 		port_space();
0x49AE	0xDEE3      	RCALL       _port_space
;glcd.c,800 :: 		while(1){
L_main383:
0x49B0	0x0101      	MOVLB       1
;glcd.c,801 :: 		y = ADC_Read(0);
0x49B2	0x6BD3      	CLRF        FARG_ADC_Read_channel, 1
0x49B4	0xDEBF      	RCALL       _ADC_Read
0x49B6	0xF04AC000  	MOVFF       R0, _y
0x49BA	0xF04BC001  	MOVFF       R1, _y+1
;glcd.c,802 :: 		if (y <= 100) {
0x49BE	0x0E00      	MOVLW       0
0x49C0	0x6E02      	MOVWF       R2 
0x49C2	0x5001      	MOVF        R1, 0 
0x49C4	0x5C02      	SUBWF       R2, 0 
0x49C6	0xE102      	BNZ         L__main615
0x49C8	0x5000      	MOVF        R0, 0 
0x49CA	0x0864      	SUBLW       100
L__main615:
0x49CC	0xE31D      	BNC         L_main385
;glcd.c,803 :: 		Glcd_Write_Text("One player", 35, 4,0);
0x49CE	0x0E4C      	MOVLW       ?lstr27_glcd
0x49D0	0x0101      	MOVLB       1
0x49D2	0x6FDA      	MOVWF       FARG_Glcd_Write_Text_text, 1
0x49D4	0x0E00      	MOVLW       hi_addr(?lstr27_glcd)
0x49D6	0x6FDB      	MOVWF       FARG_Glcd_Write_Text_text+1, 1
0x49D8	0x0E23      	MOVLW       35
0x49DA	0x6FDC      	MOVWF       FARG_Glcd_Write_Text_x_pos, 1
0x49DC	0x0E04      	MOVLW       4
0x49DE	0x6FDD      	MOVWF       FARG_Glcd_Write_Text_page_num, 1
0x49E0	0x6BDE      	CLRF        FARG_Glcd_Write_Text_color, 1
0x49E2	0xF008ECE8  	CALL        _Glcd_Write_Text, 0
;glcd.c,804 :: 		estado = 1;
0x49E6	0x0E01      	MOVLW       1
0x49E8	0x6E49      	MOVWF       _estado 
;glcd.c,805 :: 		Delay_ms(1000);
0x49EA	0x0E0B      	MOVLW       11
0x49EC	0x6E0B      	MOVWF       R11, 0
0x49EE	0x0E26      	MOVLW       38
0x49F0	0x6E0C      	MOVWF       R12, 0
0x49F2	0x0E5D      	MOVLW       93
0x49F4	0x6E0D      	MOVWF       R13, 0
L_main386:
0x49F6	0x2E0D      	DECFSZ      R13, 1, 0
0x49F8	0xD7FE      	BRA         L_main386
0x49FA	0x2E0C      	DECFSZ      R12, 1, 0
0x49FC	0xD7FC      	BRA         L_main386
0x49FE	0x2E0B      	DECFSZ      R11, 1, 0
0x4A00	0xD7FA      	BRA         L_main386
0x4A02	0x0000      	NOP
0x4A04	0x0000      	NOP
;glcd.c,806 :: 		break;
0x4A06	0xD024      	BRA         L_main384
;glcd.c,807 :: 		}
L_main385:
;glcd.c,808 :: 		if(y >= 600){
0x4A08	0x0E02      	MOVLW       2
0x4A0A	0x5C4B      	SUBWF       _y+1, 0 
0x4A0C	0xE102      	BNZ         L__main616
0x4A0E	0x0E58      	MOVLW       88
0x4A10	0x5C4A      	SUBWF       _y, 0 
L__main616:
0x4A12	0xE31D      	BNC         L_main387
;glcd.c,809 :: 		Glcd_Write_Text("Two players", 32, 6,0);
0x4A14	0x0101      	MOVLB       1
0x4A16	0x0E3D      	MOVLW       ?lstr28_glcd
0x4A18	0x6FDA      	MOVWF       FARG_Glcd_Write_Text_text, 1
0x4A1A	0x0E00      	MOVLW       hi_addr(?lstr28_glcd)
0x4A1C	0x6FDB      	MOVWF       FARG_Glcd_Write_Text_text+1, 1
0x4A1E	0x0E20      	MOVLW       32
0x4A20	0x6FDC      	MOVWF       FARG_Glcd_Write_Text_x_pos, 1
0x4A22	0x0E06      	MOVLW       6
0x4A24	0x6FDD      	MOVWF       FARG_Glcd_Write_Text_page_num, 1
0x4A26	0x6BDE      	CLRF        FARG_Glcd_Write_Text_color, 1
0x4A28	0xF008ECE8  	CALL        _Glcd_Write_Text, 0
;glcd.c,810 :: 		estado = 2;
0x4A2C	0x0E02      	MOVLW       2
0x4A2E	0x6E49      	MOVWF       _estado 
;glcd.c,811 :: 		Delay_ms(1000);
0x4A30	0x0E0B      	MOVLW       11
0x4A32	0x6E0B      	MOVWF       R11, 0
0x4A34	0x0E26      	MOVLW       38
0x4A36	0x6E0C      	MOVWF       R12, 0
0x4A38	0x0E5D      	MOVLW       93
0x4A3A	0x6E0D      	MOVWF       R13, 0
L_main388:
0x4A3C	0x2E0D      	DECFSZ      R13, 1, 0
0x4A3E	0xD7FE      	BRA         L_main388
0x4A40	0x2E0C      	DECFSZ      R12, 1, 0
0x4A42	0xD7FC      	BRA         L_main388
0x4A44	0x2E0B      	DECFSZ      R11, 1, 0
0x4A46	0xD7FA      	BRA         L_main388
0x4A48	0x0000      	NOP
0x4A4A	0x0000      	NOP
;glcd.c,812 :: 		break;
0x4A4C	0xD001      	BRA         L_main384
;glcd.c,813 :: 		}
L_main387:
;glcd.c,827 :: 		}
0x4A4E	0xD7B0      	BRA         L_main383
L_main384:
0x4A50	0x0101      	MOVLB       1
;glcd.c,828 :: 		Glcd_Fill(0x00);
0x4A52	0x6BD3      	CLRF        FARG_Glcd_Fill_pattern, 1
0x4A54	0xF00EEC72  	CALL        _Glcd_Fill, 0
;glcd.c,829 :: 		break;
0x4A58	0xD29F      	BRA         L_main381
;glcd.c,831 :: 		case 1:   // Caso single player
L_main389:
;glcd.c,832 :: 		init_counts();
0x4A5A	0xDEBC      	RCALL       _init_counts
;glcd.c,833 :: 		init();
0x4A5C	0xF006EC3C  	CALL        _init, 0
;glcd.c,834 :: 		init_aste();
0x4A60	0xDEE0      	RCALL       _init_aste
;glcd.c,835 :: 		draw_lineTime();
0x4A62	0xDECC      	RCALL       _draw_lineTime
;glcd.c,838 :: 		while(1){
L_main390:
0x4A64	0x0101      	MOVLB       1
;glcd.c,839 :: 		if (count > 3){
0x4A66	0x510C      	MOVF        _count, 0, 1
0x4A68	0x0803      	SUBLW       3
0x4A6A	0xA0D8      	BTFSS       STATUS, 0 
;glcd.c,840 :: 		count = 0;
0x4A6C	0x6B0C      	CLRF        _count, 1
;glcd.c,841 :: 		}
L_main392:
;glcd.c,842 :: 		if (timeCount >= 20){
0x4A6E	0x0E14      	MOVLW       20
0x4A70	0x0100      	MOVLB       0
0x4A72	0x5DFD      	SUBWF       _timeCount, 0, 1
0x4A74	0xE30B      	BNC         L_main393
;glcd.c,843 :: 		Glcd_Dot(64, lineTime, 0);
0x4A76	0x0E40      	MOVLW       64
0x4A78	0x0102      	MOVLB       2
0x4A7A	0x6F0B      	MOVWF       FARG_Glcd_Dot_x_pos, 1
0x4A7C	0xF20CC0E8  	MOVFF       _lineTime, FARG_Glcd_Dot_y_pos
0x4A80	0x6B0D      	CLRF        FARG_Glcd_Dot_color, 1
0x4A82	0xF000EC73  	CALL        _Glcd_Dot, 0
;glcd.c,844 :: 		timeCount = 0;
0x4A86	0x0100      	MOVLB       0
0x4A88	0x6BFD      	CLRF        _timeCount, 1
;glcd.c,845 :: 		lineTime += 1;
0x4A8A	0x2BE8      	INCF        _lineTime, 1, 1
;glcd.c,846 :: 		}
L_main393:
;glcd.c,847 :: 		if(count1 > 6){
0x4A8C	0x51E7      	MOVF        _count1, 0, 1
0x4A8E	0x0806      	SUBLW       6
0x4A90	0xA0D8      	BTFSS       STATUS, 0 
;glcd.c,848 :: 		count1 = 0;
0x4A92	0x6BE7      	CLRF        _count1, 1
;glcd.c,849 :: 		}
L_main394:
;glcd.c,850 :: 		if(lineTime == 63){ //se comprueba ganador cuando acabe el tiempo
0x4A94	0x51E8      	MOVF        _lineTime, 0, 1
0x4A96	0x0A3F      	XORLW       63
0x4A98	0xE156      	BNZ         L_main395
;glcd.c,851 :: 		Delay_ms(1000);
0x4A9A	0x0E0B      	MOVLW       11
0x4A9C	0x6E0B      	MOVWF       R11, 0
0x4A9E	0x0E26      	MOVLW       38
0x4AA0	0x6E0C      	MOVWF       R12, 0
0x4AA2	0x0E5D      	MOVLW       93
0x4AA4	0x6E0D      	MOVWF       R13, 0
L_main396:
0x4AA6	0x2E0D      	DECFSZ      R13, 1, 0
0x4AA8	0xD7FE      	BRA         L_main396
0x4AAA	0x2E0C      	DECFSZ      R12, 1, 0
0x4AAC	0xD7FC      	BRA         L_main396
0x4AAE	0x2E0B      	DECFSZ      R11, 1, 0
0x4AB0	0xD7FA      	BRA         L_main396
0x4AB2	0x0000      	NOP
0x4AB4	0x0000      	NOP
;glcd.c,852 :: 		if(score[0] >  score[1]){
0x4AB6	0x51F5      	MOVF        _score, 0, 1
0x4AB8	0x5DF6      	SUBWF       _score+1, 0, 1
0x4ABA	0xE21F      	BC          L_main397
;glcd.c,853 :: 		game_over();
0x4ABC	0xDE95      	RCALL       _game_over
;glcd.c,854 :: 		Glcd_Write_Text("PC WIN !!", 43, 4,1);
0x4ABE	0x0E20      	MOVLW       ?lstr29_glcd
0x4AC0	0x6FDA      	MOVWF       FARG_Glcd_Write_Text_text, 1
0x4AC2	0x0E00      	MOVLW       hi_addr(?lstr29_glcd)
0x4AC4	0x6FDB      	MOVWF       FARG_Glcd_Write_Text_text+1, 1
0x4AC6	0x0E2B      	MOVLW       43
0x4AC8	0x6FDC      	MOVWF       FARG_Glcd_Write_Text_x_pos, 1
0x4ACA	0x0E04      	MOVLW       4
0x4ACC	0x6FDD      	MOVWF       FARG_Glcd_Write_Text_page_num, 1
0x4ACE	0x0E01      	MOVLW       1
0x4AD0	0x6FDE      	MOVWF       FARG_Glcd_Write_Text_color, 1
0x4AD2	0xF008ECE8  	CALL        _Glcd_Write_Text, 0
;glcd.c,855 :: 		Delay_ms(3000);
0x4AD6	0x0E1F      	MOVLW       31
0x4AD8	0x6E0B      	MOVWF       R11, 0
0x4ADA	0x0E71      	MOVLW       113
0x4ADC	0x6E0C      	MOVWF       R12, 0
0x4ADE	0x0E1E      	MOVLW       30
0x4AE0	0x6E0D      	MOVWF       R13, 0
L_main398:
0x4AE2	0x2E0D      	DECFSZ      R13, 1, 0
0x4AE4	0xD7FE      	BRA         L_main398
0x4AE6	0x2E0C      	DECFSZ      R12, 1, 0
0x4AE8	0xD7FC      	BRA         L_main398
0x4AEA	0x2E0B      	DECFSZ      R11, 1, 0
0x4AEC	0xD7FA      	BRA         L_main398
0x4AEE	0x0000      	NOP
;glcd.c,856 :: 		Glcd_Fill(0x00);
0x4AF0	0x6BD3      	CLRF        FARG_Glcd_Fill_pattern, 1
0x4AF2	0xF00EEC72  	CALL        _Glcd_Fill, 0
;glcd.c,857 :: 		estado = 0;
0x4AF6	0x6A49      	CLRF        _estado 
;glcd.c,858 :: 		break;
0x4AF8	0xD098      	BRA         L_main391
;glcd.c,859 :: 		}
L_main397:
;glcd.c,860 :: 		else if(score[1] > score[0]){
0x4AFA	0x0100      	MOVLB       0
0x4AFC	0x51F6      	MOVF        _score+1, 0, 1
0x4AFE	0x5DF5      	SUBWF       _score, 0, 1
0x4B00	0xE21F      	BC          L_main400
;glcd.c,861 :: 		game_over();
0x4B02	0xDE72      	RCALL       _game_over
;glcd.c,862 :: 		Glcd_Write_Text("Player WIN !!", 36, 4,1);
0x4B04	0x0E2A      	MOVLW       ?lstr30_glcd
0x4B06	0x6FDA      	MOVWF       FARG_Glcd_Write_Text_text, 1
0x4B08	0x0E00      	MOVLW       hi_addr(?lstr30_glcd)
0x4B0A	0x6FDB      	MOVWF       FARG_Glcd_Write_Text_text+1, 1
0x4B0C	0x0E24      	MOVLW       36
0x4B0E	0x6FDC      	MOVWF       FARG_Glcd_Write_Text_x_pos, 1
0x4B10	0x0E04      	MOVLW       4
0x4B12	0x6FDD      	MOVWF       FARG_Glcd_Write_Text_page_num, 1
0x4B14	0x0E01      	MOVLW       1
0x4B16	0x6FDE      	MOVWF       FARG_Glcd_Write_Text_color, 1
0x4B18	0xF008ECE8  	CALL        _Glcd_Write_Text, 0
;glcd.c,863 :: 		Delay_ms(3000);
0x4B1C	0x0E1F      	MOVLW       31
0x4B1E	0x6E0B      	MOVWF       R11, 0
0x4B20	0x0E71      	MOVLW       113
0x4B22	0x6E0C      	MOVWF       R12, 0
0x4B24	0x0E1E      	MOVLW       30
0x4B26	0x6E0D      	MOVWF       R13, 0
L_main401:
0x4B28	0x2E0D      	DECFSZ      R13, 1, 0
0x4B2A	0xD7FE      	BRA         L_main401
0x4B2C	0x2E0C      	DECFSZ      R12, 1, 0
0x4B2E	0xD7FC      	BRA         L_main401
0x4B30	0x2E0B      	DECFSZ      R11, 1, 0
0x4B32	0xD7FA      	BRA         L_main401
0x4B34	0x0000      	NOP
;glcd.c,864 :: 		Glcd_Fill(0x00);
0x4B36	0x6BD3      	CLRF        FARG_Glcd_Fill_pattern, 1
0x4B38	0xF00EEC72  	CALL        _Glcd_Fill, 0
;glcd.c,865 :: 		estado = 0;
0x4B3C	0x6A49      	CLRF        _estado 
;glcd.c,866 :: 		break;
0x4B3E	0xD075      	BRA         L_main391
;glcd.c,867 :: 		}
L_main400:
;glcd.c,869 :: 		lineTime = 0;
0x4B40	0x0100      	MOVLB       0
0x4B42	0x6BE8      	CLRF        _lineTime, 1
;glcd.c,870 :: 		draw_lineTime();
0x4B44	0xDE5B      	RCALL       _draw_lineTime
;glcd.c,872 :: 		}
L_main395:
;glcd.c,874 :: 		if(turno_player == 0){
0x4B46	0x0100      	MOVLB       0
0x4B48	0x51F4      	MOVF        _turno_player, 0, 1
0x4B4A	0x0A00      	XORLW       0
0x4B4C	0xE127      	BNZ         L_main403
;glcd.c,875 :: 		count_op = 0;
0x4B4E	0x0101      	MOVLB       1
0x4B50	0x6BD2      	CLRF        main_count_op_L0, 1
;glcd.c,876 :: 		while(1){
L_main404:
;glcd.c,877 :: 		y = ADC_Read(0);
0x4B52	0x6BD3      	CLRF        FARG_ADC_Read_channel, 1
0x4B54	0xDDEF      	RCALL       _ADC_Read
0x4B56	0xF04AC000  	MOVFF       R0, _y
0x4B5A	0xF04BC001  	MOVFF       R1, _y+1
;glcd.c,878 :: 		if( y<= 100 || y>=600){
0x4B5E	0x0E00      	MOVLW       0
0x4B60	0x6E02      	MOVWF       R2 
0x4B62	0x5001      	MOVF        R1, 0 
0x4B64	0x5C02      	SUBWF       R2, 0 
0x4B66	0xE102      	BNZ         L__main617
0x4B68	0x5000      	MOVF        R0, 0 
0x4B6A	0x0864      	SUBLW       100
L__main617:
0x4B6C	0xE207      	BC          L__main509
0x4B6E	0x0E02      	MOVLW       2
0x4B70	0x5C4B      	SUBWF       _y+1, 0 
0x4B72	0xE102      	BNZ         L__main618
0x4B74	0x0E58      	MOVLW       88
0x4B76	0x5C4A      	SUBWF       _y, 0 
L__main618:
0x4B78	0xE201      	BC          L__main509
0x4B7A	0xD004      	BRA         L_main408
L__main509:
0x4B7C	0x0100      	MOVLB       0
;glcd.c,879 :: 		turno_player = 1;
0x4B7E	0x0E01      	MOVLW       1
0x4B80	0x6FF4      	MOVWF       _turno_player, 1
;glcd.c,880 :: 		break;
0x4B82	0xD00B      	BRA         L_main405
;glcd.c,881 :: 		}
L_main408:
;glcd.c,886 :: 		if(count_op > 50){
0x4B84	0x0101      	MOVLB       1
0x4B86	0x51D2      	MOVF        main_count_op_L0, 0, 1
0x4B88	0x0832      	SUBLW       50
0x4B8A	0xE204      	BC          L_main409
;glcd.c,887 :: 		turno_player = 2;
0x4B8C	0x0E02      	MOVLW       2
0x4B8E	0x0100      	MOVLB       0
0x4B90	0x6FF4      	MOVWF       _turno_player, 1
;glcd.c,888 :: 		break;
0x4B92	0xD003      	BRA         L_main405
;glcd.c,889 :: 		}
L_main409:
;glcd.c,890 :: 		count_op ++;
0x4B94	0x0101      	MOVLB       1
0x4B96	0x2BD2      	INCF        main_count_op_L0, 1, 1
;glcd.c,891 :: 		}
0x4B98	0xD7DC      	BRA         L_main404
L_main405:
;glcd.c,892 :: 		}
0x4B9A	0xD039      	BRA         L_main410
L_main403:
;glcd.c,893 :: 		else if(turno_player == 1){
0x4B9C	0x0100      	MOVLB       0
0x4B9E	0x51F4      	MOVF        _turno_player, 0, 1
0x4BA0	0x0A01      	XORLW       1
0x4BA2	0xE12F      	BNZ         L_main411
;glcd.c,894 :: 		y = ADC_Read(0);
0x4BA4	0x0101      	MOVLB       1
0x4BA6	0x6BD3      	CLRF        FARG_ADC_Read_channel, 1
0x4BA8	0xDDC5      	RCALL       _ADC_Read
0x4BAA	0xF04AC000  	MOVFF       R0, _y
0x4BAE	0xF04BC001  	MOVFF       R1, _y+1
;glcd.c,895 :: 		if(y >= 600){   // Hacia abajo
0x4BB2	0x0E02      	MOVLW       2
0x4BB4	0x5C01      	SUBWF       R1, 0 
0x4BB6	0xE102      	BNZ         L__main619
0x4BB8	0x0E58      	MOVLW       88
0x4BBA	0x5C00      	SUBWF       R0, 0 
L__main619:
0x4BBC	0xE30C      	BNC         L_main412
;glcd.c,896 :: 		move_players(0,1);
0x4BBE	0x0101      	MOVLB       1
0x4BC0	0x6BDA      	CLRF        FARG_move_players_direc, 1
0x4BC2	0x0E01      	MOVLW       1
0x4BC4	0x6FDB      	MOVWF       FARG_move_players_player, 1
0x4BC6	0xF006EC8E  	CALL        _move_players, 0
;glcd.c,897 :: 		draw_player(jugador[1].x, jugador[1].y);
0x4BCA	0xF1FCC1AB  	MOVFF       _jugador+4, FARG_draw_player_x
0x4BCE	0xF1FDC1AC  	MOVFF       _jugador+5, FARG_draw_player_y
0x4BD2	0xF001ECC8  	CALL        _draw_player, 0
;glcd.c,898 :: 		}
L_main412:
;glcd.c,899 :: 		if(y <= 100){      // Hacia arriba
0x4BD6	0x0E00      	MOVLW       0
0x4BD8	0x6E00      	MOVWF       R0 
0x4BDA	0x504B      	MOVF        _y+1, 0 
0x4BDC	0x5C00      	SUBWF       R0, 0 
0x4BDE	0xE102      	BNZ         L__main620
0x4BE0	0x504A      	MOVF        _y, 0 
0x4BE2	0x0864      	SUBLW       100
L__main620:
0x4BE4	0xE30D      	BNC         L_main413
;glcd.c,900 :: 		move_players(1,1);
0x4BE6	0x0E01      	MOVLW       1
0x4BE8	0x0101      	MOVLB       1
0x4BEA	0x6FDA      	MOVWF       FARG_move_players_direc, 1
0x4BEC	0x0E01      	MOVLW       1
0x4BEE	0x6FDB      	MOVWF       FARG_move_players_player, 1
0x4BF0	0xF006EC8E  	CALL        _move_players, 0
;glcd.c,901 :: 		draw_player(jugador[1].x, jugador[1].y);
0x4BF4	0xF1FCC1AB  	MOVFF       _jugador+4, FARG_draw_player_x
0x4BF8	0xF1FDC1AC  	MOVFF       _jugador+5, FARG_draw_player_y
0x4BFC	0xF001ECC8  	CALL        _draw_player, 0
;glcd.c,902 :: 		}
L_main413:
;glcd.c,912 :: 		}
0x4C00	0xD006      	BRA         L_main414
L_main411:
;glcd.c,913 :: 		else if(turno_player == 2){
0x4C02	0x0100      	MOVLB       0
0x4C04	0x51F4      	MOVF        _turno_player, 0, 1
0x4C06	0x0A02      	XORLW       2
0x4C08	0xE102      	BNZ         L_main415
;glcd.c,914 :: 		IA_player();
0x4C0A	0xF00FEC18  	CALL        _IA_player, 0
;glcd.c,916 :: 		}
L_main415:
L_main414:
L_main410:
;glcd.c,917 :: 		move_aste();
0x4C0E	0xF015ECB5  	CALL        _move_aste, 0
;glcd.c,918 :: 		draw_aste();
0x4C12	0xF009EC83  	CALL        _draw_aste, 0
;glcd.c,920 :: 		draw_score_1();
0x4C16	0xF014EC5F  	CALL        _draw_score_1, 0
;glcd.c,921 :: 		draw_score_2();
0x4C1A	0xF015EC0A  	CALL        _draw_score_2, 0
;glcd.c,923 :: 		count ++;
0x4C1E	0x0101      	MOVLB       1
0x4C20	0x2B0C      	INCF        _count, 1, 1
;glcd.c,924 :: 		count1 ++;
0x4C22	0x0100      	MOVLB       0
0x4C24	0x2BE7      	INCF        _count1, 1, 1
;glcd.c,925 :: 		timeCount ++;
0x4C26	0x2BFD      	INCF        _timeCount, 1, 1
;glcd.c,927 :: 		}
0x4C28	0xD71D      	BRA         L_main390
L_main391:
;glcd.c,928 :: 		break;
0x4C2A	0xD1B6      	BRA         L_main381
;glcd.c,930 :: 		case 2:   // Caso multijugador
L_main416:
;glcd.c,931 :: 		init();
0x4C2C	0xF006EC3C  	CALL        _init, 0
;glcd.c,932 :: 		init_aste();
0x4C30	0xDDF8      	RCALL       _init_aste
;glcd.c,937 :: 		if(UART1_Data_Ready()==0){
0x4C32	0xF014EC5A  	CALL        _UART1_Data_Ready, 0
0x4C36	0x5000      	MOVF        R0, 0 
0x4C38	0x0A00      	XORLW       0
0x4C3A	0xE107      	BNZ         L_main417
;glcd.c,938 :: 		E_M = '1';
0x4C3C	0x0E31      	MOVLW       49
0x4C3E	0x6FD0      	MOVWF       main_E_M_L0, 1
;glcd.c,939 :: 		UART1_Write('2');
0x4C40	0x0E32      	MOVLW       50
0x4C42	0x6FE2      	MOVWF       FARG_UART1_Write_data_, 1
0x4C44	0xF006EC27  	CALL        _UART1_Write, 0
;glcd.c,940 :: 		}
0x4C48	0xD004      	BRA         L_main418
L_main417:
;glcd.c,942 :: 		E_M = UART1_Read();
0x4C4A	0xF00EECF1  	CALL        _UART1_Read, 0
0x4C4E	0xF1D0C000  	MOVFF       R0, main_E_M_L0
;glcd.c,943 :: 		}
L_main418:
;glcd.c,945 :: 		if(E_M == '2'){
0x4C52	0x0101      	MOVLB       1
0x4C54	0x51D0      	MOVF        main_E_M_L0, 0, 1
0x4C56	0x0A32      	XORLW       50
0x4C58	0xE118      	BNZ         L_main419
;glcd.c,946 :: 		Glcd_Write_Text("    ",0,0,1);
0x4C5A	0x0E38      	MOVLW       ?lstr31_glcd
0x4C5C	0x6FDA      	MOVWF       FARG_Glcd_Write_Text_text, 1
0x4C5E	0x0E00      	MOVLW       hi_addr(?lstr31_glcd)
0x4C60	0x6FDB      	MOVWF       FARG_Glcd_Write_Text_text+1, 1
0x4C62	0x6BDC      	CLRF        FARG_Glcd_Write_Text_x_pos, 1
0x4C64	0x6BDD      	CLRF        FARG_Glcd_Write_Text_page_num, 1
0x4C66	0x0E01      	MOVLW       1
0x4C68	0x6FDE      	MOVWF       FARG_Glcd_Write_Text_color, 1
0x4C6A	0xF008ECE8  	CALL        _Glcd_Write_Text, 0
;glcd.c,947 :: 		Glcd_Write_Text("P2",115,0,1);
0x4C6E	0x0EDB      	MOVLW       ?lstr32_glcd
0x4C70	0x6FDA      	MOVWF       FARG_Glcd_Write_Text_text, 1
0x4C72	0x0E00      	MOVLW       hi_addr(?lstr32_glcd)
0x4C74	0x6FDB      	MOVWF       FARG_Glcd_Write_Text_text+1, 1
0x4C76	0x0E73      	MOVLW       115
0x4C78	0x6FDC      	MOVWF       FARG_Glcd_Write_Text_x_pos, 1
0x4C7A	0x6BDD      	CLRF        FARG_Glcd_Write_Text_page_num, 1
0x4C7C	0x0E01      	MOVLW       1
0x4C7E	0x6FDE      	MOVWF       FARG_Glcd_Write_Text_color, 1
0x4C80	0xF008ECE8  	CALL        _Glcd_Write_Text, 0
;glcd.c,948 :: 		Player = 2;
0x4C84	0x0E02      	MOVLW       2
0x4C86	0x6FD1      	MOVWF       main_Player_L0, 1
;glcd.c,949 :: 		}
0x4C88	0xD016      	BRA         L_main420
L_main419:
;glcd.c,951 :: 		Glcd_Write_Text("    ",0,0,1);
0x4C8A	0x0EDE      	MOVLW       ?lstr33_glcd
0x4C8C	0x6FDA      	MOVWF       FARG_Glcd_Write_Text_text, 1
0x4C8E	0x0E00      	MOVLW       hi_addr(?lstr33_glcd)
0x4C90	0x6FDB      	MOVWF       FARG_Glcd_Write_Text_text+1, 1
0x4C92	0x6BDC      	CLRF        FARG_Glcd_Write_Text_x_pos, 1
0x4C94	0x6BDD      	CLRF        FARG_Glcd_Write_Text_page_num, 1
0x4C96	0x0E01      	MOVLW       1
0x4C98	0x6FDE      	MOVWF       FARG_Glcd_Write_Text_color, 1
0x4C9A	0xF008ECE8  	CALL        _Glcd_Write_Text, 0
;glcd.c,952 :: 		Glcd_Write_Text("P1",0,0,1);
0x4C9E	0x0EE3      	MOVLW       ?lstr34_glcd
0x4CA0	0x6FDA      	MOVWF       FARG_Glcd_Write_Text_text, 1
0x4CA2	0x0E00      	MOVLW       hi_addr(?lstr34_glcd)
0x4CA4	0x6FDB      	MOVWF       FARG_Glcd_Write_Text_text+1, 1
0x4CA6	0x6BDC      	CLRF        FARG_Glcd_Write_Text_x_pos, 1
0x4CA8	0x6BDD      	CLRF        FARG_Glcd_Write_Text_page_num, 1
0x4CAA	0x0E01      	MOVLW       1
0x4CAC	0x6FDE      	MOVWF       FARG_Glcd_Write_Text_color, 1
0x4CAE	0xF008ECE8  	CALL        _Glcd_Write_Text, 0
;glcd.c,953 :: 		Player = 1;
0x4CB2	0x0E01      	MOVLW       1
0x4CB4	0x6FD1      	MOVWF       main_Player_L0, 1
;glcd.c,954 :: 		}
L_main420:
;glcd.c,958 :: 		flag_end = '0';
0x4CB6	0x0E30      	MOVLW       48
0x4CB8	0x6E1F      	MOVWF       _flag_end 
;glcd.c,959 :: 		lineTime = 0;
0x4CBA	0x0100      	MOVLB       0
0x4CBC	0x6BE8      	CLRF        _lineTime, 1
;glcd.c,960 :: 		turno_player = 0;
0x4CBE	0x6BF4      	CLRF        _turno_player, 1
;glcd.c,961 :: 		flag = 'S';
0x4CC0	0x0E53      	MOVLW       83
0x4CC2	0x6E15      	MOVWF       _flag 
;glcd.c,962 :: 		flagTime = 'S';
0x4CC4	0x0E53      	MOVLW       83
0x4CC6	0x6E16      	MOVWF       _flagTime 
;glcd.c,963 :: 		timeCount = 0;
0x4CC8	0x6BFD      	CLRF        _timeCount, 1
;glcd.c,964 :: 		score[0] = 0;
0x4CCA	0x6BF5      	CLRF        _score, 1
;glcd.c,965 :: 		score[1] = 0;
0x4CCC	0x6BF6      	CLRF        _score+1, 1
;glcd.c,966 :: 		count = 0;
0x4CCE	0x0101      	MOVLB       1
0x4CD0	0x6B0C      	CLRF        _count, 1
;glcd.c,968 :: 		if(Player == 1){   // Es el Maestro (Derecha)
0x4CD2	0x51D1      	MOVF        main_Player_L0, 0, 1
0x4CD4	0x0A01      	XORLW       1
0x4CD6	0xA4D8      	BTFSS       STATUS, 2 
0x4CD8	0xD152      	BRA         L_main421
;glcd.c,969 :: 		draw_lineTime();
0x4CDA	0xDD90      	RCALL       _draw_lineTime
;glcd.c,970 :: 		while(1){
L_main422:
0x4CDC	0x0101      	MOVLB       1
;glcd.c,971 :: 		if(count > 3){
0x4CDE	0x510C      	MOVF        _count, 0, 1
0x4CE0	0x0803      	SUBLW       3
0x4CE2	0xE203      	BC          L_main424
;glcd.c,972 :: 		count = 0;
0x4CE4	0x6B0C      	CLRF        _count, 1
;glcd.c,973 :: 		flag = 'C'; // Indica al esclavo que avancen asteroides.
0x4CE6	0x0E43      	MOVLW       67
0x4CE8	0x6E15      	MOVWF       _flag 
;glcd.c,974 :: 		}
L_main424:
;glcd.c,975 :: 		if (timeCount > 20){
0x4CEA	0x0100      	MOVLB       0
0x4CEC	0x51FD      	MOVF        _timeCount, 0, 1
0x4CEE	0x0814      	SUBLW       20
0x4CF0	0xE20D      	BC          L_main425
;glcd.c,976 :: 		Glcd_Dot(64, lineTime, 0);
0x4CF2	0x0E40      	MOVLW       64
0x4CF4	0x0102      	MOVLB       2
0x4CF6	0x6F0B      	MOVWF       FARG_Glcd_Dot_x_pos, 1
0x4CF8	0xF20CC0E8  	MOVFF       _lineTime, FARG_Glcd_Dot_y_pos
0x4CFC	0x6B0D      	CLRF        FARG_Glcd_Dot_color, 1
0x4CFE	0xF000EC73  	CALL        _Glcd_Dot, 0
;glcd.c,977 :: 		lineTime += 1;
0x4D02	0x0100      	MOVLB       0
0x4D04	0x2BE8      	INCF        _lineTime, 1, 1
;glcd.c,978 :: 		timeCount = 0;
0x4D06	0x6BFD      	CLRF        _timeCount, 1
;glcd.c,979 :: 		flagTime = 'C';
0x4D08	0x0E43      	MOVLW       67
0x4D0A	0x6E16      	MOVWF       _flagTime 
;glcd.c,980 :: 		}
L_main425:
;glcd.c,981 :: 		if(turno_player == 0){
0x4D0C	0x51F4      	MOVF        _turno_player, 0, 1
0x4D0E	0x0A00      	XORLW       0
0x4D10	0xE13C      	BNZ         L_main426
;glcd.c,982 :: 		y = ADC_Read(0);
0x4D12	0x0101      	MOVLB       1
0x4D14	0x6BD3      	CLRF        FARG_ADC_Read_channel, 1
0x4D16	0xDD0E      	RCALL       _ADC_Read
0x4D18	0xF04AC000  	MOVFF       R0, _y
0x4D1C	0xF04BC001  	MOVFF       R1, _y+1
;glcd.c,983 :: 		while(UART1_Data_Ready() == 0);// No avance hasta que haya algo que leer
L_main427:
0x4D20	0xF014EC5A  	CALL        _UART1_Data_Ready, 0
0x4D24	0x5000      	MOVF        R0, 0 
0x4D26	0x0A00      	XORLW       0
0x4D28	0xE101      	BNZ         L_main428
0x4D2A	0xD7FA      	BRA         L_main427
L_main428:
;glcd.c,985 :: 		if((UART1_Read() != '0') && (y>100 && y < 600)){
0x4D2C	0xF00EECF1  	CALL        _UART1_Read, 0
0x4D30	0x5000      	MOVF        R0, 0 
0x4D32	0x0A30      	XORLW       48
0x4D34	0xE012      	BZ          L_main433
0x4D36	0x0E00      	MOVLW       0
0x4D38	0x6E00      	MOVWF       R0 
0x4D3A	0x504B      	MOVF        _y+1, 0 
0x4D3C	0x5C00      	SUBWF       R0, 0 
0x4D3E	0xE102      	BNZ         L__main621
0x4D40	0x504A      	MOVF        _y, 0 
0x4D42	0x0864      	SUBLW       100
L__main621:
0x4D44	0xE20A      	BC          L_main433
0x4D46	0x0E02      	MOVLW       2
0x4D48	0x5C4B      	SUBWF       _y+1, 0 
0x4D4A	0xE102      	BNZ         L__main622
0x4D4C	0x0E58      	MOVLW       88
0x4D4E	0x5C4A      	SUBWF       _y, 0 
L__main622:
0x4D50	0xE204      	BC          L_main433
L__main508:
L__main507:
;glcd.c,986 :: 		turno_player = 2;
0x4D52	0x0E02      	MOVLW       2
0x4D54	0x0100      	MOVLB       0
0x4D56	0x6FF4      	MOVWF       _turno_player, 1
;glcd.c,987 :: 		}
0x4D58	0xD017      	BRA         L_main434
L_main433:
;glcd.c,988 :: 		else if((UART1_Read() == '0' && (y <= 100 || y>=600))){
0x4D5A	0xF00EECF1  	CALL        _UART1_Read, 0
0x4D5E	0x5000      	MOVF        R0, 0 
0x4D60	0x0A30      	XORLW       48
0x4D62	0xE112      	BNZ         L_main439
0x4D64	0x0E00      	MOVLW       0
0x4D66	0x6E00      	MOVWF       R0 
0x4D68	0x504B      	MOVF        _y+1, 0 
0x4D6A	0x5C00      	SUBWF       R0, 0 
0x4D6C	0xE102      	BNZ         L__main623
0x4D6E	0x504A      	MOVF        _y, 0 
0x4D70	0x0864      	SUBLW       100
L__main623:
0x4D72	0xE207      	BC          L__main506
0x4D74	0x0E02      	MOVLW       2
0x4D76	0x5C4B      	SUBWF       _y+1, 0 
0x4D78	0xE102      	BNZ         L__main624
0x4D7A	0x0E58      	MOVLW       88
0x4D7C	0x5C4A      	SUBWF       _y, 0 
L__main624:
0x4D7E	0xE201      	BC          L__main506
0x4D80	0xD003      	BRA         L_main439
L__main506:
L__main505:
;glcd.c,989 :: 		turno_player = 1;
0x4D82	0x0E01      	MOVLW       1
0x4D84	0x0100      	MOVLB       0
0x4D86	0x6FF4      	MOVWF       _turno_player, 1
;glcd.c,990 :: 		}
L_main439:
L_main434:
;glcd.c,998 :: 		}
0x4D88	0xD060      	BRA         L_main440
L_main426:
0x4D8A	0x0100      	MOVLB       0
;glcd.c,1000 :: 		else if(turno_player == 1){
0x4D8C	0x51F4      	MOVF        _turno_player, 0, 1
0x4D8E	0x0A01      	XORLW       1
0x4D90	0xE130      	BNZ         L_main441
;glcd.c,1001 :: 		y = ADC_Read(0);
0x4D92	0x0101      	MOVLB       1
0x4D94	0x6BD3      	CLRF        FARG_ADC_Read_channel, 1
0x4D96	0xDCCE      	RCALL       _ADC_Read
0x4D98	0xF04AC000  	MOVFF       R0, _y
0x4D9C	0xF04BC001  	MOVFF       R1, _y+1
;glcd.c,1002 :: 		if (y >= 600) { // Abajo
0x4DA0	0x0E02      	MOVLW       2
0x4DA2	0x5C01      	SUBWF       R1, 0 
0x4DA4	0xE102      	BNZ         L__main625
0x4DA6	0x0E58      	MOVLW       88
0x4DA8	0x5C00      	SUBWF       R0, 0 
L__main625:
0x4DAA	0xE30D      	BNC         L_main442
;glcd.c,1003 :: 		move_players(0,1);
0x4DAC	0x0101      	MOVLB       1
0x4DAE	0x6BDA      	CLRF        FARG_move_players_direc, 1
0x4DB0	0x0E01      	MOVLW       1
0x4DB2	0x6FDB      	MOVWF       FARG_move_players_player, 1
0x4DB4	0xF006EC8E  	CALL        _move_players, 0
;glcd.c,1004 :: 		draw_player(jugador[1].x, jugador[1].y);
0x4DB8	0xF1FCC1AB  	MOVFF       _jugador+4, FARG_draw_player_x
0x4DBC	0xF1FDC1AC  	MOVFF       _jugador+5, FARG_draw_player_y
0x4DC0	0xF001ECC8  	CALL        _draw_player, 0
;glcd.c,1005 :: 		}
0x4DC4	0xD015      	BRA         L_main443
L_main442:
;glcd.c,1006 :: 		else if(y <= 100){  // Arriba
0x4DC6	0x0E00      	MOVLW       0
0x4DC8	0x6E00      	MOVWF       R0 
0x4DCA	0x504B      	MOVF        _y+1, 0 
0x4DCC	0x5C00      	SUBWF       R0, 0 
0x4DCE	0xE102      	BNZ         L__main626
0x4DD0	0x504A      	MOVF        _y, 0 
0x4DD2	0x0864      	SUBLW       100
L__main626:
0x4DD4	0xE30D      	BNC         L_main444
;glcd.c,1007 :: 		move_players(1,1);
0x4DD6	0x0E01      	MOVLW       1
0x4DD8	0x0101      	MOVLB       1
0x4DDA	0x6FDA      	MOVWF       FARG_move_players_direc, 1
0x4DDC	0x0E01      	MOVLW       1
0x4DDE	0x6FDB      	MOVWF       FARG_move_players_player, 1
0x4DE0	0xF006EC8E  	CALL        _move_players, 0
;glcd.c,1008 :: 		draw_player(jugador[1].x, jugador[1].y);
0x4DE4	0xF1FCC1AB  	MOVFF       _jugador+4, FARG_draw_player_x
0x4DE8	0xF1FDC1AC  	MOVFF       _jugador+5, FARG_draw_player_y
0x4DEC	0xF001ECC8  	CALL        _draw_player, 0
;glcd.c,1009 :: 		}
L_main444:
L_main443:
;glcd.c,1019 :: 		}
0x4DF0	0xD02C      	BRA         L_main445
L_main441:
;glcd.c,1021 :: 		else if(turno_player == 2){
0x4DF2	0x0100      	MOVLB       0
0x4DF4	0x51F4      	MOVF        _turno_player, 0, 1
0x4DF6	0x0A02      	XORLW       2
0x4DF8	0xE128      	BNZ         L_main446
;glcd.c,1022 :: 		while(UART1_Data_Ready() == 0);// No avance hasta que haya algo que leer
L_main447:
0x4DFA	0xF014EC5A  	CALL        _UART1_Data_Ready, 0
0x4DFE	0x5000      	MOVF        R0, 0 
0x4E00	0x0A00      	XORLW       0
0x4E02	0xE101      	BNZ         L_main448
0x4E04	0xD7FA      	BRA         L_main447
L_main448:
;glcd.c,1023 :: 		if(UART1_Read() == '1'){  // Hacia abajo
0x4E06	0xF00EECF1  	CALL        _UART1_Read, 0
0x4E0A	0x5000      	MOVF        R0, 0 
0x4E0C	0x0A31      	XORLW       49
0x4E0E	0xE10C      	BNZ         L_main449
;glcd.c,1024 :: 		move_players(0,0);
0x4E10	0x0101      	MOVLB       1
0x4E12	0x6BDA      	CLRF        FARG_move_players_direc, 1
0x4E14	0x6BDB      	CLRF        FARG_move_players_player, 1
0x4E16	0xF006EC8E  	CALL        _move_players, 0
;glcd.c,1025 :: 		draw_player(jugador[0].x, jugador[0].y);
0x4E1A	0xF1FCC1A7  	MOVFF       _jugador, FARG_draw_player_x
0x4E1E	0xF1FDC1A8  	MOVFF       _jugador+1, FARG_draw_player_y
0x4E22	0xF001ECC8  	CALL        _draw_player, 0
;glcd.c,1026 :: 		}
0x4E26	0xD011      	BRA         L_main450
L_main449:
;glcd.c,1027 :: 		else if(UART1_Read() == '2'){  // Hacia arriba
0x4E28	0xF00EECF1  	CALL        _UART1_Read, 0
0x4E2C	0x5000      	MOVF        R0, 0 
0x4E2E	0x0A32      	XORLW       50
0x4E30	0xE10C      	BNZ         L_main451
;glcd.c,1028 :: 		move_players(1,0);
0x4E32	0x0E01      	MOVLW       1
0x4E34	0x0101      	MOVLB       1
0x4E36	0x6FDA      	MOVWF       FARG_move_players_direc, 1
0x4E38	0x6BDB      	CLRF        FARG_move_players_player, 1
0x4E3A	0xF006EC8E  	CALL        _move_players, 0
;glcd.c,1029 :: 		draw_player(jugador[0].x, jugador[0].y);
0x4E3E	0xF1FCC1A7  	MOVFF       _jugador, FARG_draw_player_x
0x4E42	0xF1FDC1A8  	MOVFF       _jugador+1, FARG_draw_player_y
0x4E46	0xF001ECC8  	CALL        _draw_player, 0
;glcd.c,1030 :: 		}
L_main451:
L_main450:
;glcd.c,1032 :: 		}
L_main446:
L_main445:
L_main440:
;glcd.c,1034 :: 		move_aste();
0x4E4A	0xF015ECB5  	CALL        _move_aste, 0
;glcd.c,1035 :: 		draw_aste();
0x4E4E	0xF009EC83  	CALL        _draw_aste, 0
;glcd.c,1037 :: 		if(lineTime == 63){
0x4E52	0x0100      	MOVLB       0
0x4E54	0x51E8      	MOVF        _lineTime, 0, 1
0x4E56	0x0A3F      	XORLW       63
0x4E58	0xE102      	BNZ         L_main452
;glcd.c,1038 :: 		flag_end = '1';
0x4E5A	0x0E31      	MOVLW       49
0x4E5C	0x6E1F      	MOVWF       _flag_end 
;glcd.c,1039 :: 		}
L_main452:
;glcd.c,1042 :: 		serial_pack_data();
0x4E5E	0xF00EECFA  	CALL        _serial_pack_data, 0
;glcd.c,1043 :: 		send_pack_data(serial_data);  // Aqui espera hasta que datos anteriores se leean
0x4E62	0x0E0F      	MOVLW       _serial_data
0x4E64	0x6FD3      	MOVWF       FARG_send_pack_data_serial_dir, 1
0x4E66	0x0E01      	MOVLW       hi_addr(_serial_data)
0x4E68	0x6FD4      	MOVWF       FARG_send_pack_data_serial_dir+1, 1
0x4E6A	0xDCA7      	RCALL       _send_pack_data
;glcd.c,1044 :: 		while (UART1_Tx_Idle()!=1);  // Ahora espera a que se recibaan los datos actuales
L_main453:
0x4E6C	0xF006EC89  	CALL        _UART1_Tx_Idle, 0
0x4E70	0x5000      	MOVF        R0, 0 
0x4E72	0x0A01      	XORLW       1
0x4E74	0xE001      	BZ          L_main454
0x4E76	0xD7FA      	BRA         L_main453
L_main454:
;glcd.c,1046 :: 		draw_score_1();
0x4E78	0xF014EC5F  	CALL        _draw_score_1, 0
;glcd.c,1047 :: 		draw_score_2();
0x4E7C	0xF015EC0A  	CALL        _draw_score_2, 0
;glcd.c,1049 :: 		if(lineTime == 63){ //se comprueba ganador cuando acabe el tiempo
0x4E80	0x0100      	MOVLB       0
0x4E82	0x51E8      	MOVF        _lineTime, 0, 1
0x4E84	0x0A3F      	XORLW       63
0x4E86	0xE172      	BNZ         L_main455
;glcd.c,1050 :: 		Delay_ms(1000);
0x4E88	0x0E0B      	MOVLW       11
0x4E8A	0x6E0B      	MOVWF       R11, 0
0x4E8C	0x0E26      	MOVLW       38
0x4E8E	0x6E0C      	MOVWF       R12, 0
0x4E90	0x0E5D      	MOVLW       93
0x4E92	0x6E0D      	MOVWF       R13, 0
L_main456:
0x4E94	0x2E0D      	DECFSZ      R13, 1, 0
0x4E96	0xD7FE      	BRA         L_main456
0x4E98	0x2E0C      	DECFSZ      R12, 1, 0
0x4E9A	0xD7FC      	BRA         L_main456
0x4E9C	0x2E0B      	DECFSZ      R11, 1, 0
0x4E9E	0xD7FA      	BRA         L_main456
0x4EA0	0x0000      	NOP
0x4EA2	0x0000      	NOP
;glcd.c,1051 :: 		if(score[0] >  score[1]){
0x4EA4	0x51F5      	MOVF        _score, 0, 1
0x4EA6	0x5DF6      	SUBWF       _score+1, 0, 1
0x4EA8	0xE21F      	BC          L_main457
;glcd.c,1052 :: 		game_over();
0x4EAA	0xDC9E      	RCALL       _game_over
;glcd.c,1053 :: 		Glcd_Write_Text("YOU LOSE !!", 43, 4,1);
0x4EAC	0x0ECF      	MOVLW       ?lstr35_glcd
0x4EAE	0x6FDA      	MOVWF       FARG_Glcd_Write_Text_text, 1
0x4EB0	0x0E00      	MOVLW       hi_addr(?lstr35_glcd)
0x4EB2	0x6FDB      	MOVWF       FARG_Glcd_Write_Text_text+1, 1
0x4EB4	0x0E2B      	MOVLW       43
0x4EB6	0x6FDC      	MOVWF       FARG_Glcd_Write_Text_x_pos, 1
0x4EB8	0x0E04      	MOVLW       4
0x4EBA	0x6FDD      	MOVWF       FARG_Glcd_Write_Text_page_num, 1
0x4EBC	0x0E01      	MOVLW       1
0x4EBE	0x6FDE      	MOVWF       FARG_Glcd_Write_Text_color, 1
0x4EC0	0xF008ECE8  	CALL        _Glcd_Write_Text, 0
;glcd.c,1054 :: 		Delay_ms(3000);
0x4EC4	0x0E1F      	MOVLW       31
0x4EC6	0x6E0B      	MOVWF       R11, 0
0x4EC8	0x0E71      	MOVLW       113
0x4ECA	0x6E0C      	MOVWF       R12, 0
0x4ECC	0x0E1E      	MOVLW       30
0x4ECE	0x6E0D      	MOVWF       R13, 0
L_main458:
0x4ED0	0x2E0D      	DECFSZ      R13, 1, 0
0x4ED2	0xD7FE      	BRA         L_main458
0x4ED4	0x2E0C      	DECFSZ      R12, 1, 0
0x4ED6	0xD7FC      	BRA         L_main458
0x4ED8	0x2E0B      	DECFSZ      R11, 1, 0
0x4EDA	0xD7FA      	BRA         L_main458
0x4EDC	0x0000      	NOP
;glcd.c,1055 :: 		Glcd_Fill(0x00);
0x4EDE	0x6BD3      	CLRF        FARG_Glcd_Fill_pattern, 1
0x4EE0	0xF00EEC72  	CALL        _Glcd_Fill, 0
;glcd.c,1056 :: 		estado = 0;
0x4EE4	0x6A49      	CLRF        _estado 
;glcd.c,1057 :: 		break;
0x4EE6	0xD04B      	BRA         L_main423
;glcd.c,1058 :: 		}
L_main457:
;glcd.c,1059 :: 		else if(score[1] > score[0]){
0x4EE8	0x0100      	MOVLB       0
0x4EEA	0x51F6      	MOVF        _score+1, 0, 1
0x4EEC	0x5DF5      	SUBWF       _score, 0, 1
0x4EEE	0xE21F      	BC          L_main460
;glcd.c,1060 :: 		game_over();
0x4EF0	0xDC7B      	RCALL       _game_over
;glcd.c,1061 :: 		Glcd_Write_Text("YOU WIN !!", 36, 4,1);
0x4EF2	0x0EBA      	MOVLW       ?lstr36_glcd
0x4EF4	0x6FDA      	MOVWF       FARG_Glcd_Write_Text_text, 1
0x4EF6	0x0E00      	MOVLW       hi_addr(?lstr36_glcd)
0x4EF8	0x6FDB      	MOVWF       FARG_Glcd_Write_Text_text+1, 1
0x4EFA	0x0E24      	MOVLW       36
0x4EFC	0x6FDC      	MOVWF       FARG_Glcd_Write_Text_x_pos, 1
0x4EFE	0x0E04      	MOVLW       4
0x4F00	0x6FDD      	MOVWF       FARG_Glcd_Write_Text_page_num, 1
0x4F02	0x0E01      	MOVLW       1
0x4F04	0x6FDE      	MOVWF       FARG_Glcd_Write_Text_color, 1
0x4F06	0xF008ECE8  	CALL        _Glcd_Write_Text, 0
;glcd.c,1062 :: 		Delay_ms(3000);
0x4F0A	0x0E1F      	MOVLW       31
0x4F0C	0x6E0B      	MOVWF       R11, 0
0x4F0E	0x0E71      	MOVLW       113
0x4F10	0x6E0C      	MOVWF       R12, 0
0x4F12	0x0E1E      	MOVLW       30
0x4F14	0x6E0D      	MOVWF       R13, 0
L_main461:
0x4F16	0x2E0D      	DECFSZ      R13, 1, 0
0x4F18	0xD7FE      	BRA         L_main461
0x4F1A	0x2E0C      	DECFSZ      R12, 1, 0
0x4F1C	0xD7FC      	BRA         L_main461
0x4F1E	0x2E0B      	DECFSZ      R11, 1, 0
0x4F20	0xD7FA      	BRA         L_main461
0x4F22	0x0000      	NOP
;glcd.c,1063 :: 		Glcd_Fill(0x00);
0x4F24	0x6BD3      	CLRF        FARG_Glcd_Fill_pattern, 1
0x4F26	0xF00EEC72  	CALL        _Glcd_Fill, 0
;glcd.c,1064 :: 		estado = 0;
0x4F2A	0x6A49      	CLRF        _estado 
;glcd.c,1065 :: 		break;
0x4F2C	0xD028      	BRA         L_main423
;glcd.c,1066 :: 		}
L_main460:
;glcd.c,1068 :: 		game_over();
0x4F2E	0xDC5C      	RCALL       _game_over
;glcd.c,1069 :: 		Glcd_Write_Text("EMPATE !!", 36, 4,1);
0x4F30	0x0EC5      	MOVLW       ?lstr37_glcd
0x4F32	0x6FDA      	MOVWF       FARG_Glcd_Write_Text_text, 1
0x4F34	0x0E00      	MOVLW       hi_addr(?lstr37_glcd)
0x4F36	0x6FDB      	MOVWF       FARG_Glcd_Write_Text_text+1, 1
0x4F38	0x0E24      	MOVLW       36
0x4F3A	0x6FDC      	MOVWF       FARG_Glcd_Write_Text_x_pos, 1
0x4F3C	0x0E04      	MOVLW       4
0x4F3E	0x6FDD      	MOVWF       FARG_Glcd_Write_Text_page_num, 1
0x4F40	0x0E01      	MOVLW       1
0x4F42	0x6FDE      	MOVWF       FARG_Glcd_Write_Text_color, 1
0x4F44	0xF008ECE8  	CALL        _Glcd_Write_Text, 0
;glcd.c,1070 :: 		Delay_ms(3000);
0x4F48	0x0E1F      	MOVLW       31
0x4F4A	0x6E0B      	MOVWF       R11, 0
0x4F4C	0x0E71      	MOVLW       113
0x4F4E	0x6E0C      	MOVWF       R12, 0
0x4F50	0x0E1E      	MOVLW       30
0x4F52	0x6E0D      	MOVWF       R13, 0
L_main463:
0x4F54	0x2E0D      	DECFSZ      R13, 1, 0
0x4F56	0xD7FE      	BRA         L_main463
0x4F58	0x2E0C      	DECFSZ      R12, 1, 0
0x4F5A	0xD7FC      	BRA         L_main463
0x4F5C	0x2E0B      	DECFSZ      R11, 1, 0
0x4F5E	0xD7FA      	BRA         L_main463
0x4F60	0x0000      	NOP
;glcd.c,1071 :: 		Glcd_Fill(0x00);
0x4F62	0x6BD3      	CLRF        FARG_Glcd_Fill_pattern, 1
0x4F64	0xF00EEC72  	CALL        _Glcd_Fill, 0
;glcd.c,1072 :: 		estado = 0;
0x4F68	0x6A49      	CLRF        _estado 
;glcd.c,1073 :: 		break;
0x4F6A	0xD009      	BRA         L_main423
;glcd.c,1076 :: 		}
L_main455:
0x4F6C	0x0101      	MOVLB       1
;glcd.c,1078 :: 		count ++;
0x4F6E	0x2B0C      	INCF        _count, 1, 1
;glcd.c,1079 :: 		timeCount ++;
0x4F70	0x0100      	MOVLB       0
0x4F72	0x2BFD      	INCF        _timeCount, 1, 1
;glcd.c,1080 :: 		flag = 'S';
0x4F74	0x0E53      	MOVLW       83
0x4F76	0x6E15      	MOVWF       _flag 
;glcd.c,1081 :: 		flagTime = 'S';
0x4F78	0x0E53      	MOVLW       83
0x4F7A	0x6E16      	MOVWF       _flagTime 
;glcd.c,1082 :: 		}
0x4F7C	0xD6AF      	BRA         L_main422
L_main423:
;glcd.c,1083 :: 		}
L_main421:
;glcd.c,1084 :: 		break;
0x4F7E	0xD00C      	BRA         L_main381
;glcd.c,1086 :: 		}
L_main380:
0x4F80	0x5049      	MOVF        _estado, 0 
0x4F82	0x0A00      	XORLW       0
0x4F84	0xB4D8      	BTFSC       STATUS, 2 
0x4F86	0xD513      	BRA         L_main382
0x4F88	0x5049      	MOVF        _estado, 0 
0x4F8A	0x0A01      	XORLW       1
0x4F8C	0xB4D8      	BTFSC       STATUS, 2 
0x4F8E	0xD565      	BRA         L_main389
0x4F90	0x5049      	MOVF        _estado, 0 
0x4F92	0x0A02      	XORLW       2
0x4F94	0xB4D8      	BTFSC       STATUS, 2 
0x4F96	0xD64A      	BRA         L_main416
L_main381:
;glcd.c,1087 :: 		}
0x4F98	0xD509      	BRA         L_main378
;glcd.c,1088 :: 		}
L_end_main:
0x4F9A	0xD7FF      	BRA         $+0
; end of _main
0x642A	0xF015EE10  	LFSR        1, 21
0x642E	0x0EFA      	MOVLW       250
0x6430	0x6E00      	MOVWF       R0 
0x6432	0x0E01      	MOVLW       1
0x6434	0x6E01      	MOVWF       R1 
0x6436	0x0E2F      	MOVLW       47
0x6438	0x6EF6      	MOVWF       TBLPTR 
0x643A	0x0E63      	MOVLW       99
0x643C	0x6EF7      	MOVWF       TBLPTRH 
0x643E	0x0E00      	MOVLW       0
0x6440	0x6EF8      	MOVWF       TBLPTRU 
0x6442	0xF00EEC2A  	CALL        7252, 0
0x6446	0x0012      	RETURN      0
;__Lib_GlcdFonts.c,1008 :: _Glcd_defaultFont
0x4F9C	0x0000 ;_Glcd_defaultFont+0
0x4F9E	0x0020 ;_Glcd_defaultFont+2
0x4FA0	0x007F ;_Glcd_defaultFont+4
0x4FA2	0x000B ;_Glcd_defaultFont+6
0x4FA4	0x8801 ;_Glcd_defaultFont+8
0x4FA6	0x0001 ;_Glcd_defaultFont+10
0x4FA8	0x9301 ;_Glcd_defaultFont+12
0x4FAA	0x0001 ;_Glcd_defaultFont+14
0x4FAC	0x9E03 ;_Glcd_defaultFont+16
0x4FAE	0x0001 ;_Glcd_defaultFont+18
0x4FB0	0xA907 ;_Glcd_defaultFont+20
0x4FB2	0x0001 ;_Glcd_defaultFont+22
0x4FB4	0xB405 ;_Glcd_defaultFont+24
0x4FB6	0x0001 ;_Glcd_defaultFont+26
0x4FB8	0xBF09 ;_Glcd_defaultFont+28
0x4FBA	0x0001 ;_Glcd_defaultFont+30
0x4FBC	0xD506 ;_Glcd_defaultFont+32
0x4FBE	0x0001 ;_Glcd_defaultFont+34
0x4FC0	0xE001 ;_Glcd_defaultFont+36
0x4FC2	0x0001 ;_Glcd_defaultFont+38
0x4FC4	0xEB03 ;_Glcd_defaultFont+40
0x4FC6	0x0001 ;_Glcd_defaultFont+42
0x4FC8	0xF602 ;_Glcd_defaultFont+44
0x4FCA	0x0001 ;_Glcd_defaultFont+46
0x4FCC	0x0105 ;_Glcd_defaultFont+48
0x4FCE	0x0002 ;_Glcd_defaultFont+50
0x4FD0	0x0C06 ;_Glcd_defaultFont+52
0x4FD2	0x0002 ;_Glcd_defaultFont+54
0x4FD4	0x1702 ;_Glcd_defaultFont+56
0x4FD6	0x0002 ;_Glcd_defaultFont+58
0x4FD8	0x2202 ;_Glcd_defaultFont+60
0x4FDA	0x0002 ;_Glcd_defaultFont+62
0x4FDC	0x2D02 ;_Glcd_defaultFont+64
0x4FDE	0x0002 ;_Glcd_defaultFont+66
0x4FE0	0x3803 ;_Glcd_defaultFont+68
0x4FE2	0x0002 ;_Glcd_defaultFont+70
0x4FE4	0x4304 ;_Glcd_defaultFont+72
0x4FE6	0x0002 ;_Glcd_defaultFont+74
0x4FE8	0x4E04 ;_Glcd_defaultFont+76
0x4FEA	0x0002 ;_Glcd_defaultFont+78
0x4FEC	0x5904 ;_Glcd_defaultFont+80
0x4FEE	0x0002 ;_Glcd_defaultFont+82
0x4FF0	0x6404 ;_Glcd_defaultFont+84
0x4FF2	0x0002 ;_Glcd_defaultFont+86
0x4FF4	0x6F05 ;_Glcd_defaultFont+88
0x4FF6	0x0002 ;_Glcd_defaultFont+90
0x4FF8	0x7A04 ;_Glcd_defaultFont+92
0x4FFA	0x0002 ;_Glcd_defaultFont+94
0x4FFC	0x8504 ;_Glcd_defaultFont+96
0x4FFE	0x0002 ;_Glcd_defaultFont+98
0x5000	0x9004 ;_Glcd_defaultFont+100
0x5002	0x0002 ;_Glcd_defaultFont+102
0x5004	0x9B04 ;_Glcd_defaultFont+104
0x5006	0x0002 ;_Glcd_defaultFont+106
0x5008	0xA604 ;_Glcd_defaultFont+108
0x500A	0x0002 ;_Glcd_defaultFont+110
0x500C	0xB102 ;_Glcd_defaultFont+112
0x500E	0x0002 ;_Glcd_defaultFont+114
0x5010	0xBC02 ;_Glcd_defaultFont+116
0x5012	0x0002 ;_Glcd_defaultFont+118
0x5014	0xC706 ;_Glcd_defaultFont+120
0x5016	0x0002 ;_Glcd_defaultFont+122
0x5018	0xD206 ;_Glcd_defaultFont+124
0x501A	0x0002 ;_Glcd_defaultFont+126
0x501C	0xDD06 ;_Glcd_defaultFont+128
0x501E	0x0002 ;_Glcd_defaultFont+130
0x5020	0xE804 ;_Glcd_defaultFont+132
0x5022	0x0002 ;_Glcd_defaultFont+134
0x5024	0xF307 ;_Glcd_defaultFont+136
0x5026	0x0002 ;_Glcd_defaultFont+138
0x5028	0xFE06 ;_Glcd_defaultFont+140
0x502A	0x0002 ;_Glcd_defaultFont+142
0x502C	0x0905 ;_Glcd_defaultFont+144
0x502E	0x0003 ;_Glcd_defaultFont+146
0x5030	0x1406 ;_Glcd_defaultFont+148
0x5032	0x0003 ;_Glcd_defaultFont+150
0x5034	0x1F06 ;_Glcd_defaultFont+152
0x5036	0x0003 ;_Glcd_defaultFont+154
0x5038	0x2A05 ;_Glcd_defaultFont+156
0x503A	0x0003 ;_Glcd_defaultFont+158
0x503C	0x3505 ;_Glcd_defaultFont+160
0x503E	0x0003 ;_Glcd_defaultFont+162
0x5040	0x4006 ;_Glcd_defaultFont+164
0x5042	0x0003 ;_Glcd_defaultFont+166
0x5044	0x4B06 ;_Glcd_defaultFont+168
0x5046	0x0003 ;_Glcd_defaultFont+170
0x5048	0x5603 ;_Glcd_defaultFont+172
0x504A	0x0003 ;_Glcd_defaultFont+174
0x504C	0x6103 ;_Glcd_defaultFont+176
0x504E	0x0003 ;_Glcd_defaultFont+178
0x5050	0x6C05 ;_Glcd_defaultFont+180
0x5052	0x0003 ;_Glcd_defaultFont+182
0x5054	0x7704 ;_Glcd_defaultFont+184
0x5056	0x0003 ;_Glcd_defaultFont+186
0x5058	0x8207 ;_Glcd_defaultFont+188
0x505A	0x0003 ;_Glcd_defaultFont+190
0x505C	0x8D06 ;_Glcd_defaultFont+192
0x505E	0x0003 ;_Glcd_defaultFont+194
0x5060	0x9807 ;_Glcd_defaultFont+196
0x5062	0x0003 ;_Glcd_defaultFont+198
0x5064	0xA305 ;_Glcd_defaultFont+200
0x5066	0x0003 ;_Glcd_defaultFont+202
0x5068	0xAE07 ;_Glcd_defaultFont+204
0x506A	0x0003 ;_Glcd_defaultFont+206
0x506C	0xB905 ;_Glcd_defaultFont+208
0x506E	0x0003 ;_Glcd_defaultFont+210
0x5070	0xC405 ;_Glcd_defaultFont+212
0x5072	0x0003 ;_Glcd_defaultFont+214
0x5074	0xCF05 ;_Glcd_defaultFont+216
0x5076	0x0003 ;_Glcd_defaultFont+218
0x5078	0xDA06 ;_Glcd_defaultFont+220
0x507A	0x0003 ;_Glcd_defaultFont+222
0x507C	0xE506 ;_Glcd_defaultFont+224
0x507E	0x0003 ;_Glcd_defaultFont+226
0x5080	0xF007 ;_Glcd_defaultFont+228
0x5082	0x0003 ;_Glcd_defaultFont+230
0x5084	0xFB04 ;_Glcd_defaultFont+232
0x5086	0x0003 ;_Glcd_defaultFont+234
0x5088	0x0605 ;_Glcd_defaultFont+236
0x508A	0x0004 ;_Glcd_defaultFont+238
0x508C	0x1104 ;_Glcd_defaultFont+240
0x508E	0x0004 ;_Glcd_defaultFont+242
0x5090	0x1C02 ;_Glcd_defaultFont+244
0x5092	0x0004 ;_Glcd_defaultFont+246
0x5094	0x2703 ;_Glcd_defaultFont+248
0x5096	0x0004 ;_Glcd_defaultFont+250
0x5098	0x3202 ;_Glcd_defaultFont+252
0x509A	0x0004 ;_Glcd_defaultFont+254
0x509C	0x3D05 ;_Glcd_defaultFont+256
0x509E	0x0004 ;_Glcd_defaultFont+258
0x50A0	0x4805 ;_Glcd_defaultFont+260
0x50A2	0x0004 ;_Glcd_defaultFont+262
0x50A4	0x5303 ;_Glcd_defaultFont+264
0x50A6	0x0004 ;_Glcd_defaultFont+266
0x50A8	0x5E04 ;_Glcd_defaultFont+268
0x50AA	0x0004 ;_Glcd_defaultFont+270
0x50AC	0x6904 ;_Glcd_defaultFont+272
0x50AE	0x0004 ;_Glcd_defaultFont+274
0x50B0	0x7403 ;_Glcd_defaultFont+276
0x50B2	0x0004 ;_Glcd_defaultFont+278
0x50B4	0x7F04 ;_Glcd_defaultFont+280
0x50B6	0x0004 ;_Glcd_defaultFont+282
0x50B8	0x8A04 ;_Glcd_defaultFont+284
0x50BA	0x0004 ;_Glcd_defaultFont+286
0x50BC	0x9503 ;_Glcd_defaultFont+288
0x50BE	0x0004 ;_Glcd_defaultFont+290
0x50C0	0xA004 ;_Glcd_defaultFont+292
0x50C2	0x0004 ;_Glcd_defaultFont+294
0x50C4	0xAB04 ;_Glcd_defaultFont+296
0x50C6	0x0004 ;_Glcd_defaultFont+298
0x50C8	0xB601 ;_Glcd_defaultFont+300
0x50CA	0x0004 ;_Glcd_defaultFont+302
0x50CC	0xC102 ;_Glcd_defaultFont+304
0x50CE	0x0004 ;_Glcd_defaultFont+306
0x50D0	0xCC04 ;_Glcd_defaultFont+308
0x50D2	0x0004 ;_Glcd_defaultFont+310
0x50D4	0xD701 ;_Glcd_defaultFont+312
0x50D6	0x0004 ;_Glcd_defaultFont+314
0x50D8	0xE207 ;_Glcd_defaultFont+316
0x50DA	0x0004 ;_Glcd_defaultFont+318
0x50DC	0xED04 ;_Glcd_defaultFont+320
0x50DE	0x0004 ;_Glcd_defaultFont+322
0x50E0	0xF804 ;_Glcd_defaultFont+324
0x50E2	0x0004 ;_Glcd_defaultFont+326
0x50E4	0x0304 ;_Glcd_defaultFont+328
0x50E6	0x0005 ;_Glcd_defaultFont+330
0x50E8	0x0E04 ;_Glcd_defaultFont+332
0x50EA	0x0005 ;_Glcd_defaultFont+334
0x50EC	0x1903 ;_Glcd_defaultFont+336
0x50EE	0x0005 ;_Glcd_defaultFont+338
0x50F0	0x2403 ;_Glcd_defaultFont+340
0x50F2	0x0005 ;_Glcd_defaultFont+342
0x50F4	0x2F02 ;_Glcd_defaultFont+344
0x50F6	0x0005 ;_Glcd_defaultFont+346
0x50F8	0x3A04 ;_Glcd_defaultFont+348
0x50FA	0x0005 ;_Glcd_defaultFont+350
0x50FC	0x4505 ;_Glcd_defaultFont+352
0x50FE	0x0005 ;_Glcd_defaultFont+354
0x5100	0x5007 ;_Glcd_defaultFont+356
0x5102	0x0005 ;_Glcd_defaultFont+358
0x5104	0x5B03 ;_Glcd_defaultFont+360
0x5106	0x0005 ;_Glcd_defaultFont+362
0x5108	0x6605 ;_Glcd_defaultFont+364
0x510A	0x0005 ;_Glcd_defaultFont+366
0x510C	0x7103 ;_Glcd_defaultFont+368
0x510E	0x0005 ;_Glcd_defaultFont+370
0x5110	0x7C03 ;_Glcd_defaultFont+372
0x5112	0x0005 ;_Glcd_defaultFont+374
0x5114	0x8702 ;_Glcd_defaultFont+376
0x5116	0x0005 ;_Glcd_defaultFont+378
0x5118	0x9203 ;_Glcd_defaultFont+380
0x511A	0x0005 ;_Glcd_defaultFont+382
0x511C	0x9D06 ;_Glcd_defaultFont+384
0x511E	0x0005 ;_Glcd_defaultFont+386
0x5120	0xA802 ;_Glcd_defaultFont+388
0x5122	0x0005 ;_Glcd_defaultFont+390
0x5124	0x0000 ;_Glcd_defaultFont+392
0x5126	0x0000 ;_Glcd_defaultFont+394
0x5128	0x0000 ;_Glcd_defaultFont+396
0x512A	0x0000 ;_Glcd_defaultFont+398
0x512C	0x0000 ;_Glcd_defaultFont+400
0x512E	0x0000 ;_Glcd_defaultFont+402
0x5130	0x0100 ;_Glcd_defaultFont+404
0x5132	0x0101 ;_Glcd_defaultFont+406
0x5134	0x0101 ;_Glcd_defaultFont+408
0x5136	0x0100 ;_Glcd_defaultFont+410
0x5138	0x0000 ;_Glcd_defaultFont+412
0x513A	0x0500 ;_Glcd_defaultFont+414
0x513C	0x0505 ;_Glcd_defaultFont+416
0x513E	0x0000 ;_Glcd_defaultFont+418
0x5140	0x0000 ;_Glcd_defaultFont+420
0x5142	0x0000 ;_Glcd_defaultFont+422
0x5144	0x0000 ;_Glcd_defaultFont+424
0x5146	0x2400 ;_Glcd_defaultFont+426
0x5148	0x7E24 ;_Glcd_defaultFont+428
0x514A	0x3F14 ;_Glcd_defaultFont+430
0x514C	0x1212 ;_Glcd_defaultFont+432
0x514E	0x0000 ;_Glcd_defaultFont+434
0x5150	0x0000 ;_Glcd_defaultFont+436
0x5152	0x1E04 ;_Glcd_defaultFont+438
0x5154	0x0605 ;_Glcd_defaultFont+440
0x5156	0x140C ;_Glcd_defaultFont+442
0x5158	0x040F ;_Glcd_defaultFont+444
0x515A	0x0004 ;_Glcd_defaultFont+446
0x515C	0x0000 ;_Glcd_defaultFont+448
0x515E	0x4600 ;_Glcd_defaultFont+450
0x5160	0x2900 ;_Glcd_defaultFont+452
0x5162	0x2900 ;_Glcd_defaultFont+454
0x5164	0xD600 ;_Glcd_defaultFont+456
0x5166	0x2800 ;_Glcd_defaultFont+458
0x5168	0x2801 ;_Glcd_defaultFont+460
0x516A	0xC401 ;_Glcd_defaultFont+462
0x516C	0x0000 ;_Glcd_defaultFont+464
0x516E	0x0000 ;_Glcd_defaultFont+466
0x5170	0x0000 ;_Glcd_defaultFont+468
0x5172	0x0600 ;_Glcd_defaultFont+470
0x5174	0x0909 ;_Glcd_defaultFont+472
0x5176	0x0916 ;_Glcd_defaultFont+474
0x5178	0x2619 ;_Glcd_defaultFont+476
0x517A	0x0000 ;_Glcd_defaultFont+478
0x517C	0x0100 ;_Glcd_defaultFont+480
0x517E	0x0101 ;_Glcd_defaultFont+482
0x5180	0x0000 ;_Glcd_defaultFont+484
0x5182	0x0000 ;_Glcd_defaultFont+486
0x5184	0x0000 ;_Glcd_defaultFont+488
0x5186	0x0000 ;_Glcd_defaultFont+490
0x5188	0x0204 ;_Glcd_defaultFont+492
0x518A	0x0101 ;_Glcd_defaultFont+494
0x518C	0x0101 ;_Glcd_defaultFont+496
0x518E	0x0101 ;_Glcd_defaultFont+498
0x5190	0x0402 ;_Glcd_defaultFont+500
0x5192	0x0000 ;_Glcd_defaultFont+502
0x5194	0x0201 ;_Glcd_defaultFont+504
0x5196	0x0202 ;_Glcd_defaultFont+506
0x5198	0x0202 ;_Glcd_defaultFont+508
0x519A	0x0102 ;_Glcd_defaultFont+510
0x519C	0x0400 ;_Glcd_defaultFont+512
0x519E	0x0E15 ;_Glcd_defaultFont+514
0x51A0	0x0415 ;_Glcd_defaultFont+516
0x51A2	0x0000 ;_Glcd_defaultFont+518
0x51A4	0x0000 ;_Glcd_defaultFont+520
0x51A6	0x0000 ;_Glcd_defaultFont+522
0x51A8	0x0000 ;_Glcd_defaultFont+524
0x51AA	0x0800 ;_Glcd_defaultFont+526
0x51AC	0x3E08 ;_Glcd_defaultFont+528
0x51AE	0x0808 ;_Glcd_defaultFont+530
0x51B0	0x0000 ;_Glcd_defaultFont+532
0x51B2	0x0000 ;_Glcd_defaultFont+534
0x51B4	0x0000 ;_Glcd_defaultFont+536
0x51B6	0x0000 ;_Glcd_defaultFont+538
0x51B8	0x0000 ;_Glcd_defaultFont+540
0x51BA	0x0202 ;_Glcd_defaultFont+542
0x51BC	0x0001 ;_Glcd_defaultFont+544
0x51BE	0x0000 ;_Glcd_defaultFont+546
0x51C0	0x0000 ;_Glcd_defaultFont+548
0x51C2	0x0000 ;_Glcd_defaultFont+550
0x51C4	0x0003 ;_Glcd_defaultFont+552
0x51C6	0x0000 ;_Glcd_defaultFont+554
0x51C8	0x0000 ;_Glcd_defaultFont+556
0x51CA	0x0000 ;_Glcd_defaultFont+558
0x51CC	0x0000 ;_Glcd_defaultFont+560
0x51CE	0x0000 ;_Glcd_defaultFont+562
0x51D0	0x0202 ;_Glcd_defaultFont+564
0x51D2	0x0000 ;_Glcd_defaultFont+566
0x51D4	0x0400 ;_Glcd_defaultFont+568
0x51D6	0x0204 ;_Glcd_defaultFont+570
0x51D8	0x0202 ;_Glcd_defaultFont+572
0x51DA	0x0202 ;_Glcd_defaultFont+574
0x51DC	0x0101 ;_Glcd_defaultFont+576
0x51DE	0x0000 ;_Glcd_defaultFont+578
0x51E0	0x0600 ;_Glcd_defaultFont+580
0x51E2	0x0909 ;_Glcd_defaultFont+582
0x51E4	0x0909 ;_Glcd_defaultFont+584
0x51E6	0x0609 ;_Glcd_defaultFont+586
0x51E8	0x0000 ;_Glcd_defaultFont+588
0x51EA	0x0000 ;_Glcd_defaultFont+590
0x51EC	0x0604 ;_Glcd_defaultFont+592
0x51EE	0x0404 ;_Glcd_defaultFont+594
0x51F0	0x0404 ;_Glcd_defaultFont+596
0x51F2	0x000E ;_Glcd_defaultFont+598
0x51F4	0x0000 ;_Glcd_defaultFont+600
0x51F6	0x0700 ;_Glcd_defaultFont+602
0x51F8	0x0808 ;_Glcd_defaultFont+604
0x51FA	0x0204 ;_Glcd_defaultFont+606
0x51FC	0x0F01 ;_Glcd_defaultFont+608
0x51FE	0x0000 ;_Glcd_defaultFont+610
0x5200	0x0000 ;_Glcd_defaultFont+612
0x5202	0x0807 ;_Glcd_defaultFont+614
0x5204	0x0608 ;_Glcd_defaultFont+616
0x5206	0x0808 ;_Glcd_defaultFont+618
0x5208	0x0007 ;_Glcd_defaultFont+620
0x520A	0x0000 ;_Glcd_defaultFont+622
0x520C	0x0800 ;_Glcd_defaultFont+624
0x520E	0x0A0C ;_Glcd_defaultFont+626
0x5210	0x1F09 ;_Glcd_defaultFont+628
0x5212	0x0808 ;_Glcd_defaultFont+630
0x5214	0x0000 ;_Glcd_defaultFont+632
0x5216	0x0000 ;_Glcd_defaultFont+634
0x5218	0x010F ;_Glcd_defaultFont+636
0x521A	0x0701 ;_Glcd_defaultFont+638
0x521C	0x0808 ;_Glcd_defaultFont+640
0x521E	0x0007 ;_Glcd_defaultFont+642
0x5220	0x0000 ;_Glcd_defaultFont+644
0x5222	0x0600 ;_Glcd_defaultFont+646
0x5224	0x0101 ;_Glcd_defaultFont+648
0x5226	0x0907 ;_Glcd_defaultFont+650
0x5228	0x0609 ;_Glcd_defaultFont+652
0x522A	0x0000 ;_Glcd_defaultFont+654
0x522C	0x0000 ;_Glcd_defaultFont+656
0x522E	0x080F ;_Glcd_defaultFont+658
0x5230	0x0404 ;_Glcd_defaultFont+660
0x5232	0x0202 ;_Glcd_defaultFont+662
0x5234	0x0001 ;_Glcd_defaultFont+664
0x5236	0x0000 ;_Glcd_defaultFont+666
0x5238	0x0600 ;_Glcd_defaultFont+668
0x523A	0x0909 ;_Glcd_defaultFont+670
0x523C	0x0906 ;_Glcd_defaultFont+672
0x523E	0x0609 ;_Glcd_defaultFont+674
0x5240	0x0000 ;_Glcd_defaultFont+676
0x5242	0x0000 ;_Glcd_defaultFont+678
0x5244	0x0906 ;_Glcd_defaultFont+680
0x5246	0x0E09 ;_Glcd_defaultFont+682
0x5248	0x0808 ;_Glcd_defaultFont+684
0x524A	0x0006 ;_Glcd_defaultFont+686
0x524C	0x0000 ;_Glcd_defaultFont+688
0x524E	0x0000 ;_Glcd_defaultFont+690
0x5250	0x0200 ;_Glcd_defaultFont+692
0x5252	0x0002 ;_Glcd_defaultFont+694
0x5254	0x0202 ;_Glcd_defaultFont+696
0x5256	0x0000 ;_Glcd_defaultFont+698
0x5258	0x0000 ;_Glcd_defaultFont+700
0x525A	0x0000 ;_Glcd_defaultFont+702
0x525C	0x0202 ;_Glcd_defaultFont+704
0x525E	0x0200 ;_Glcd_defaultFont+706
0x5260	0x0102 ;_Glcd_defaultFont+708
0x5262	0x0000 ;_Glcd_defaultFont+710
0x5264	0x0000 ;_Glcd_defaultFont+712
0x5266	0x2000 ;_Glcd_defaultFont+714
0x5268	0x021C ;_Glcd_defaultFont+716
0x526A	0x201C ;_Glcd_defaultFont+718
0x526C	0x0000 ;_Glcd_defaultFont+720
0x526E	0x0000 ;_Glcd_defaultFont+722
0x5270	0x0000 ;_Glcd_defaultFont+724
0x5272	0x3F00 ;_Glcd_defaultFont+726
0x5274	0x3F00 ;_Glcd_defaultFont+728
0x5276	0x0000 ;_Glcd_defaultFont+730
0x5278	0x0000 ;_Glcd_defaultFont+732
0x527A	0x0000 ;_Glcd_defaultFont+734
0x527C	0x0200 ;_Glcd_defaultFont+736
0x527E	0x201C ;_Glcd_defaultFont+738
0x5280	0x021C ;_Glcd_defaultFont+740
0x5282	0x0000 ;_Glcd_defaultFont+742
0x5284	0x0000 ;_Glcd_defaultFont+744
0x5286	0x0807 ;_Glcd_defaultFont+746
0x5288	0x0408 ;_Glcd_defaultFont+748
0x528A	0x0002 ;_Glcd_defaultFont+750
0x528C	0x0002 ;_Glcd_defaultFont+752
0x528E	0x0000 ;_Glcd_defaultFont+754
0x5290	0x1C00 ;_Glcd_defaultFont+756
0x5292	0x5922 ;_Glcd_defaultFont+758
0x5294	0x5555 ;_Glcd_defaultFont+760
0x5296	0x0239 ;_Glcd_defaultFont+762
0x5298	0x001C ;_Glcd_defaultFont+764
0x529A	0x0000 ;_Glcd_defaultFont+766
0x529C	0x0C0C ;_Glcd_defaultFont+768
0x529E	0x1212 ;_Glcd_defaultFont+770
0x52A0	0x213F ;_Glcd_defaultFont+772
0x52A2	0x0021 ;_Glcd_defaultFont+774
0x52A4	0x0000 ;_Glcd_defaultFont+776
0x52A6	0x0700 ;_Glcd_defaultFont+778
0x52A8	0x0909 ;_Glcd_defaultFont+780
0x52AA	0x110F ;_Glcd_defaultFont+782
0x52AC	0x0F11 ;_Glcd_defaultFont+784
0x52AE	0x0000 ;_Glcd_defaultFont+786
0x52B0	0x0000 ;_Glcd_defaultFont+788
0x52B2	0x221C ;_Glcd_defaultFont+790
0x52B4	0x0101 ;_Glcd_defaultFont+792
0x52B6	0x2201 ;_Glcd_defaultFont+794
0x52B8	0x001C ;_Glcd_defaultFont+796
0x52BA	0x0000 ;_Glcd_defaultFont+798
0x52BC	0x0F00 ;_Glcd_defaultFont+800
0x52BE	0x2111 ;_Glcd_defaultFont+802
0x52C0	0x2121 ;_Glcd_defaultFont+804
0x52C2	0x0F11 ;_Glcd_defaultFont+806
0x52C4	0x0000 ;_Glcd_defaultFont+808
0x52C6	0x0000 ;_Glcd_defaultFont+810
0x52C8	0x011F ;_Glcd_defaultFont+812
0x52CA	0x0F01 ;_Glcd_defaultFont+814
0x52CC	0x0101 ;_Glcd_defaultFont+816
0x52CE	0x001F ;_Glcd_defaultFont+818
0x52D0	0x0000 ;_Glcd_defaultFont+820
0x52D2	0x1F00 ;_Glcd_defaultFont+822
0x52D4	0x0101 ;_Glcd_defaultFont+824
0x52D6	0x010F ;_Glcd_defaultFont+826
0x52D8	0x0101 ;_Glcd_defaultFont+828
0x52DA	0x0000 ;_Glcd_defaultFont+830
0x52DC	0x0000 ;_Glcd_defaultFont+832
0x52DE	0x221C ;_Glcd_defaultFont+834
0x52E0	0x3901 ;_Glcd_defaultFont+836
0x52E2	0x2221 ;_Glcd_defaultFont+838
0x52E4	0x003C ;_Glcd_defaultFont+840
0x52E6	0x0000 ;_Glcd_defaultFont+842
0x52E8	0x2100 ;_Glcd_defaultFont+844
0x52EA	0x2121 ;_Glcd_defaultFont+846
0x52EC	0x213F ;_Glcd_defaultFont+848
0x52EE	0x2121 ;_Glcd_defaultFont+850
0x52F0	0x0000 ;_Glcd_defaultFont+852
0x52F2	0x0000 ;_Glcd_defaultFont+854
0x52F4	0x0207 ;_Glcd_defaultFont+856
0x52F6	0x0202 ;_Glcd_defaultFont+858
0x52F8	0x0202 ;_Glcd_defaultFont+860
0x52FA	0x0007 ;_Glcd_defaultFont+862
0x52FC	0x0000 ;_Glcd_defaultFont+864
0x52FE	0x0600 ;_Glcd_defaultFont+866
0x5300	0x0404 ;_Glcd_defaultFont+868
0x5302	0x0404 ;_Glcd_defaultFont+870
0x5304	0x0304 ;_Glcd_defaultFont+872
0x5306	0x0000 ;_Glcd_defaultFont+874
0x5308	0x0000 ;_Glcd_defaultFont+876
0x530A	0x0911 ;_Glcd_defaultFont+878
0x530C	0x0305 ;_Glcd_defaultFont+880
0x530E	0x0905 ;_Glcd_defaultFont+882
0x5310	0x0011 ;_Glcd_defaultFont+884
0x5312	0x0000 ;_Glcd_defaultFont+886
0x5314	0x0100 ;_Glcd_defaultFont+888
0x5316	0x0101 ;_Glcd_defaultFont+890
0x5318	0x0101 ;_Glcd_defaultFont+892
0x531A	0x0F01 ;_Glcd_defaultFont+894
0x531C	0x0000 ;_Glcd_defaultFont+896
0x531E	0x0000 ;_Glcd_defaultFont+898
0x5320	0x6363 ;_Glcd_defaultFont+900
0x5322	0x5555 ;_Glcd_defaultFont+902
0x5324	0x4949 ;_Glcd_defaultFont+904
0x5326	0x0041 ;_Glcd_defaultFont+906
0x5328	0x0000 ;_Glcd_defaultFont+908
0x532A	0x2100 ;_Glcd_defaultFont+910
0x532C	0x2523 ;_Glcd_defaultFont+912
0x532E	0x3129 ;_Glcd_defaultFont+914
0x5330	0x2121 ;_Glcd_defaultFont+916
0x5332	0x0000 ;_Glcd_defaultFont+918
0x5334	0x0000 ;_Glcd_defaultFont+920
0x5336	0x221C ;_Glcd_defaultFont+922
0x5338	0x4141 ;_Glcd_defaultFont+924
0x533A	0x2241 ;_Glcd_defaultFont+926
0x533C	0x001C ;_Glcd_defaultFont+928
0x533E	0x0000 ;_Glcd_defaultFont+930
0x5340	0x0F00 ;_Glcd_defaultFont+932
0x5342	0x1111 ;_Glcd_defaultFont+934
0x5344	0x0F11 ;_Glcd_defaultFont+936
0x5346	0x0101 ;_Glcd_defaultFont+938
0x5348	0x0000 ;_Glcd_defaultFont+940
0x534A	0x0000 ;_Glcd_defaultFont+942
0x534C	0x221C ;_Glcd_defaultFont+944
0x534E	0x4141 ;_Glcd_defaultFont+946
0x5350	0x2241 ;_Glcd_defaultFont+948
0x5352	0x101C ;_Glcd_defaultFont+950
0x5354	0x0060 ;_Glcd_defaultFont+952
0x5356	0x0F00 ;_Glcd_defaultFont+954
0x5358	0x1111 ;_Glcd_defaultFont+956
0x535A	0x050F ;_Glcd_defaultFont+958
0x535C	0x1109 ;_Glcd_defaultFont+960
0x535E	0x0000 ;_Glcd_defaultFont+962
0x5360	0x0000 ;_Glcd_defaultFont+964
0x5362	0x011E ;_Glcd_defaultFont+966
0x5364	0x0E01 ;_Glcd_defaultFont+968
0x5366	0x1010 ;_Glcd_defaultFont+970
0x5368	0x000F ;_Glcd_defaultFont+972
0x536A	0x0000 ;_Glcd_defaultFont+974
0x536C	0x1F00 ;_Glcd_defaultFont+976
0x536E	0x0404 ;_Glcd_defaultFont+978
0x5370	0x0404 ;_Glcd_defaultFont+980
0x5372	0x0404 ;_Glcd_defaultFont+982
0x5374	0x0000 ;_Glcd_defaultFont+984
0x5376	0x0000 ;_Glcd_defaultFont+986
0x5378	0x2121 ;_Glcd_defaultFont+988
0x537A	0x2121 ;_Glcd_defaultFont+990
0x537C	0x2121 ;_Glcd_defaultFont+992
0x537E	0x001E ;_Glcd_defaultFont+994
0x5380	0x0000 ;_Glcd_defaultFont+996
0x5382	0x2100 ;_Glcd_defaultFont+998
0x5384	0x2121 ;_Glcd_defaultFont+1000
0x5386	0x1212 ;_Glcd_defaultFont+1002
0x5388	0x0C0C ;_Glcd_defaultFont+1004
0x538A	0x0000 ;_Glcd_defaultFont+1006
0x538C	0x0000 ;_Glcd_defaultFont+1008
0x538E	0x4949 ;_Glcd_defaultFont+1010
0x5390	0x5555 ;_Glcd_defaultFont+1012
0x5392	0x2255 ;_Glcd_defaultFont+1014
0x5394	0x0022 ;_Glcd_defaultFont+1016
0x5396	0x0000 ;_Glcd_defaultFont+1018
0x5398	0x0900 ;_Glcd_defaultFont+1020
0x539A	0x0609 ;_Glcd_defaultFont+1022
0x539C	0x0606 ;_Glcd_defaultFont+1024
0x539E	0x0909 ;_Glcd_defaultFont+1026
0x53A0	0x0000 ;_Glcd_defaultFont+1028
0x53A2	0x0000 ;_Glcd_defaultFont+1030
0x53A4	0x0A11 ;_Glcd_defaultFont+1032
0x53A6	0x040A ;_Glcd_defaultFont+1034
0x53A8	0x0404 ;_Glcd_defaultFont+1036
0x53AA	0x0004 ;_Glcd_defaultFont+1038
0x53AC	0x0000 ;_Glcd_defaultFont+1040
0x53AE	0x0F00 ;_Glcd_defaultFont+1042
0x53B0	0x0408 ;_Glcd_defaultFont+1044
0x53B2	0x0202 ;_Glcd_defaultFont+1046
0x53B4	0x0F01 ;_Glcd_defaultFont+1048
0x53B6	0x0000 ;_Glcd_defaultFont+1050
0x53B8	0x0300 ;_Glcd_defaultFont+1052
0x53BA	0x0101 ;_Glcd_defaultFont+1054
0x53BC	0x0101 ;_Glcd_defaultFont+1056
0x53BE	0x0101 ;_Glcd_defaultFont+1058
0x53C0	0x0101 ;_Glcd_defaultFont+1060
0x53C2	0x0003 ;_Glcd_defaultFont+1062
0x53C4	0x0101 ;_Glcd_defaultFont+1064
0x53C6	0x0202 ;_Glcd_defaultFont+1066
0x53C8	0x0202 ;_Glcd_defaultFont+1068
0x53CA	0x0402 ;_Glcd_defaultFont+1070
0x53CC	0x0004 ;_Glcd_defaultFont+1072
0x53CE	0x0300 ;_Glcd_defaultFont+1074
0x53D0	0x0202 ;_Glcd_defaultFont+1076
0x53D2	0x0202 ;_Glcd_defaultFont+1078
0x53D4	0x0202 ;_Glcd_defaultFont+1080
0x53D6	0x0202 ;_Glcd_defaultFont+1082
0x53D8	0x0003 ;_Glcd_defaultFont+1084
0x53DA	0x0400 ;_Glcd_defaultFont+1086
0x53DC	0x110A ;_Glcd_defaultFont+1088
0x53DE	0x0000 ;_Glcd_defaultFont+1090
0x53E0	0x0000 ;_Glcd_defaultFont+1092
0x53E2	0x0000 ;_Glcd_defaultFont+1094
0x53E4	0x0000 ;_Glcd_defaultFont+1096
0x53E6	0x0000 ;_Glcd_defaultFont+1098
0x53E8	0x0000 ;_Glcd_defaultFont+1100
0x53EA	0x0000 ;_Glcd_defaultFont+1102
0x53EC	0x0000 ;_Glcd_defaultFont+1104
0x53EE	0x001F ;_Glcd_defaultFont+1106
0x53F0	0x0402 ;_Glcd_defaultFont+1108
0x53F2	0x0000 ;_Glcd_defaultFont+1110
0x53F4	0x0000 ;_Glcd_defaultFont+1112
0x53F6	0x0000 ;_Glcd_defaultFont+1114
0x53F8	0x0000 ;_Glcd_defaultFont+1116
0x53FA	0x0000 ;_Glcd_defaultFont+1118
0x53FC	0x0000 ;_Glcd_defaultFont+1120
0x53FE	0x0806 ;_Glcd_defaultFont+1122
0x5400	0x090E ;_Glcd_defaultFont+1124
0x5402	0x000E ;_Glcd_defaultFont+1126
0x5404	0x0000 ;_Glcd_defaultFont+1128
0x5406	0x0101 ;_Glcd_defaultFont+1130
0x5408	0x0701 ;_Glcd_defaultFont+1132
0x540A	0x0909 ;_Glcd_defaultFont+1134
0x540C	0x0709 ;_Glcd_defaultFont+1136
0x540E	0x0000 ;_Glcd_defaultFont+1138
0x5410	0x0000 ;_Glcd_defaultFont+1140
0x5412	0x0000 ;_Glcd_defaultFont+1142
0x5414	0x0106 ;_Glcd_defaultFont+1144
0x5416	0x0101 ;_Glcd_defaultFont+1146
0x5418	0x0006 ;_Glcd_defaultFont+1148
0x541A	0x0000 ;_Glcd_defaultFont+1150
0x541C	0x0808 ;_Glcd_defaultFont+1152
0x541E	0x0E08 ;_Glcd_defaultFont+1154
0x5420	0x0909 ;_Glcd_defaultFont+1156
0x5422	0x0E09 ;_Glcd_defaultFont+1158
0x5424	0x0000 ;_Glcd_defaultFont+1160
0x5426	0x0000 ;_Glcd_defaultFont+1162
0x5428	0x0000 ;_Glcd_defaultFont+1164
0x542A	0x0906 ;_Glcd_defaultFont+1166
0x542C	0x010F ;_Glcd_defaultFont+1168
0x542E	0x000E ;_Glcd_defaultFont+1170
0x5430	0x0000 ;_Glcd_defaultFont+1172
0x5432	0x0106 ;_Glcd_defaultFont+1174
0x5434	0x0701 ;_Glcd_defaultFont+1176
0x5436	0x0101 ;_Glcd_defaultFont+1178
0x5438	0x0101 ;_Glcd_defaultFont+1180
0x543A	0x0000 ;_Glcd_defaultFont+1182
0x543C	0x0000 ;_Glcd_defaultFont+1184
0x543E	0x0000 ;_Glcd_defaultFont+1186
0x5440	0x090E ;_Glcd_defaultFont+1188
0x5442	0x0909 ;_Glcd_defaultFont+1190
0x5444	0x080E ;_Glcd_defaultFont+1192
0x5446	0x0006 ;_Glcd_defaultFont+1194
0x5448	0x0101 ;_Glcd_defaultFont+1196
0x544A	0x0701 ;_Glcd_defaultFont+1198
0x544C	0x0909 ;_Glcd_defaultFont+1200
0x544E	0x0909 ;_Glcd_defaultFont+1202
0x5450	0x0000 ;_Glcd_defaultFont+1204
0x5452	0x0000 ;_Glcd_defaultFont+1206
0x5454	0x0001 ;_Glcd_defaultFont+1208
0x5456	0x0101 ;_Glcd_defaultFont+1210
0x5458	0x0101 ;_Glcd_defaultFont+1212
0x545A	0x0001 ;_Glcd_defaultFont+1214
0x545C	0x0000 ;_Glcd_defaultFont+1216
0x545E	0x0200 ;_Glcd_defaultFont+1218
0x5460	0x0300 ;_Glcd_defaultFont+1220
0x5462	0x0202 ;_Glcd_defaultFont+1222
0x5464	0x0202 ;_Glcd_defaultFont+1224
0x5466	0x0102 ;_Glcd_defaultFont+1226
0x5468	0x0100 ;_Glcd_defaultFont+1228
0x546A	0x0101 ;_Glcd_defaultFont+1230
0x546C	0x0509 ;_Glcd_defaultFont+1232
0x546E	0x0503 ;_Glcd_defaultFont+1234
0x5470	0x0009 ;_Glcd_defaultFont+1236
0x5472	0x0000 ;_Glcd_defaultFont+1238
0x5474	0x0101 ;_Glcd_defaultFont+1240
0x5476	0x0101 ;_Glcd_defaultFont+1242
0x5478	0x0101 ;_Glcd_defaultFont+1244
0x547A	0x0101 ;_Glcd_defaultFont+1246
0x547C	0x0000 ;_Glcd_defaultFont+1248
0x547E	0x0000 ;_Glcd_defaultFont+1250
0x5480	0x0000 ;_Glcd_defaultFont+1252
0x5482	0x4937 ;_Glcd_defaultFont+1254
0x5484	0x4949 ;_Glcd_defaultFont+1256
0x5486	0x0049 ;_Glcd_defaultFont+1258
0x5488	0x0000 ;_Glcd_defaultFont+1260
0x548A	0x0000 ;_Glcd_defaultFont+1262
0x548C	0x0700 ;_Glcd_defaultFont+1264
0x548E	0x0909 ;_Glcd_defaultFont+1266
0x5490	0x0909 ;_Glcd_defaultFont+1268
0x5492	0x0000 ;_Glcd_defaultFont+1270
0x5494	0x0000 ;_Glcd_defaultFont+1272
0x5496	0x0000 ;_Glcd_defaultFont+1274
0x5498	0x0906 ;_Glcd_defaultFont+1276
0x549A	0x0909 ;_Glcd_defaultFont+1278
0x549C	0x0006 ;_Glcd_defaultFont+1280
0x549E	0x0000 ;_Glcd_defaultFont+1282
0x54A0	0x0000 ;_Glcd_defaultFont+1284
0x54A2	0x0700 ;_Glcd_defaultFont+1286
0x54A4	0x0909 ;_Glcd_defaultFont+1288
0x54A6	0x0709 ;_Glcd_defaultFont+1290
0x54A8	0x0101 ;_Glcd_defaultFont+1292
0x54AA	0x0000 ;_Glcd_defaultFont+1294
0x54AC	0x0000 ;_Glcd_defaultFont+1296
0x54AE	0x090E ;_Glcd_defaultFont+1298
0x54B0	0x0909 ;_Glcd_defaultFont+1300
0x54B2	0x080E ;_Glcd_defaultFont+1302
0x54B4	0x0008 ;_Glcd_defaultFont+1304
0x54B6	0x0000 ;_Glcd_defaultFont+1306
0x54B8	0x0500 ;_Glcd_defaultFont+1308
0x54BA	0x0103 ;_Glcd_defaultFont+1310
0x54BC	0x0101 ;_Glcd_defaultFont+1312
0x54BE	0x0000 ;_Glcd_defaultFont+1314
0x54C0	0x0000 ;_Glcd_defaultFont+1316
0x54C2	0x0000 ;_Glcd_defaultFont+1318
0x54C4	0x0107 ;_Glcd_defaultFont+1320
0x54C6	0x0402 ;_Glcd_defaultFont+1322
0x54C8	0x0007 ;_Glcd_defaultFont+1324
0x54CA	0x0000 ;_Glcd_defaultFont+1326
0x54CC	0x0000 ;_Glcd_defaultFont+1328
0x54CE	0x0301 ;_Glcd_defaultFont+1330
0x54D0	0x0101 ;_Glcd_defaultFont+1332
0x54D2	0x0201 ;_Glcd_defaultFont+1334
0x54D4	0x0000 ;_Glcd_defaultFont+1336
0x54D6	0x0000 ;_Glcd_defaultFont+1338
0x54D8	0x0000 ;_Glcd_defaultFont+1340
0x54DA	0x0909 ;_Glcd_defaultFont+1342
0x54DC	0x0909 ;_Glcd_defaultFont+1344
0x54DE	0x000E ;_Glcd_defaultFont+1346
0x54E0	0x0000 ;_Glcd_defaultFont+1348
0x54E2	0x0000 ;_Glcd_defaultFont+1350
0x54E4	0x1100 ;_Glcd_defaultFont+1352
0x54E6	0x0A0A ;_Glcd_defaultFont+1354
0x54E8	0x040A ;_Glcd_defaultFont+1356
0x54EA	0x0000 ;_Glcd_defaultFont+1358
0x54EC	0x0000 ;_Glcd_defaultFont+1360
0x54EE	0x0000 ;_Glcd_defaultFont+1362
0x54F0	0x4949 ;_Glcd_defaultFont+1364
0x54F2	0x3655 ;_Glcd_defaultFont+1366
0x54F4	0x0022 ;_Glcd_defaultFont+1368
0x54F6	0x0000 ;_Glcd_defaultFont+1370
0x54F8	0x0000 ;_Glcd_defaultFont+1372
0x54FA	0x0500 ;_Glcd_defaultFont+1374
0x54FC	0x0202 ;_Glcd_defaultFont+1376
0x54FE	0x0502 ;_Glcd_defaultFont+1378
0x5500	0x0000 ;_Glcd_defaultFont+1380
0x5502	0x0000 ;_Glcd_defaultFont+1382
0x5504	0x0000 ;_Glcd_defaultFont+1384
0x5506	0x0A11 ;_Glcd_defaultFont+1386
0x5508	0x0A0A ;_Glcd_defaultFont+1388
0x550A	0x0404 ;_Glcd_defaultFont+1390
0x550C	0x0002 ;_Glcd_defaultFont+1392
0x550E	0x0000 ;_Glcd_defaultFont+1394
0x5510	0x0700 ;_Glcd_defaultFont+1396
0x5512	0x0204 ;_Glcd_defaultFont+1398
0x5514	0x0701 ;_Glcd_defaultFont+1400
0x5516	0x0000 ;_Glcd_defaultFont+1402
0x5518	0x0400 ;_Glcd_defaultFont+1404
0x551A	0x0202 ;_Glcd_defaultFont+1406
0x551C	0x0202 ;_Glcd_defaultFont+1408
0x551E	0x0201 ;_Glcd_defaultFont+1410
0x5520	0x0202 ;_Glcd_defaultFont+1412
0x5522	0x0004 ;_Glcd_defaultFont+1414
0x5524	0x0202 ;_Glcd_defaultFont+1416
0x5526	0x0202 ;_Glcd_defaultFont+1418
0x5528	0x0202 ;_Glcd_defaultFont+1420
0x552A	0x0202 ;_Glcd_defaultFont+1422
0x552C	0x0202 ;_Glcd_defaultFont+1424
0x552E	0x0100 ;_Glcd_defaultFont+1426
0x5530	0x0202 ;_Glcd_defaultFont+1428
0x5532	0x0202 ;_Glcd_defaultFont+1430
0x5534	0x0204 ;_Glcd_defaultFont+1432
0x5536	0x0202 ;_Glcd_defaultFont+1434
0x5538	0x0001 ;_Glcd_defaultFont+1436
0x553A	0x0000 ;_Glcd_defaultFont+1438
0x553C	0x0000 ;_Glcd_defaultFont+1440
0x553E	0x1926 ;_Glcd_defaultFont+1442
0x5540	0x0000 ;_Glcd_defaultFont+1444
0x5542	0x0000 ;_Glcd_defaultFont+1446
0x5544	0x0000 ;_Glcd_defaultFont+1448
0x5546	0x0300 ;_Glcd_defaultFont+1450
0x5548	0x0303 ;_Glcd_defaultFont+1452
0x554A	0x0303 ;_Glcd_defaultFont+1454
0x554C	0x0000 ;_Glcd_defaultFont+1456
0x554E	0x00 ;_Glcd_defaultFont+1458
; end of _Glcd_defaultFont
;TEC.c,6 :: _TEC
0x554F	0x0000 ;_TEC+0
0x5551	0x0000 ;_TEC+2
0x5553	0x0000 ;_TEC+4
0x5555	0x0000 ;_TEC+6
0x5557	0x0000 ;_TEC+8
0x5559	0x0000 ;_TEC+10
0x555B	0x0000 ;_TEC+12
0x555D	0x0000 ;_TEC+14
0x555F	0x0000 ;_TEC+16
0x5561	0x0000 ;_TEC+18
0x5563	0x0000 ;_TEC+20
0x5565	0x0000 ;_TEC+22
0x5567	0x0000 ;_TEC+24
0x5569	0x0000 ;_TEC+26
0x556B	0x0000 ;_TEC+28
0x556D	0x0000 ;_TEC+30
0x556F	0x0000 ;_TEC+32
0x5571	0x0000 ;_TEC+34
0x5573	0x0000 ;_TEC+36
0x5575	0x0000 ;_TEC+38
0x5577	0x3C00 ;_TEC+40
0x5579	0x0C1C ;_TEC+42
0x557B	0x0C0C ;_TEC+44
0x557D	0xFC0C ;_TEC+46
0x557F	0xFCFC ;_TEC+48
0x5581	0x0C0C ;_TEC+50
0x5583	0x0C0C ;_TEC+52
0x5585	0x3C1C ;_TEC+54
0x5587	0x0400 ;_TEC+56
0x5589	0xFC0C ;_TEC+58
0x558B	0xFCFC ;_TEC+60
0x558D	0x0C0C ;_TEC+62
0x558F	0x0C0C ;_TEC+64
0x5591	0x8C0C ;_TEC+66
0x5593	0x1C0C ;_TEC+68
0x5595	0x003C ;_TEC+70
0x5597	0xF0E0 ;_TEC+72
0x5599	0x1C38 ;_TEC+74
0x559B	0x0C0C ;_TEC+76
0x559D	0x0C0C ;_TEC+78
0x559F	0x381C ;_TEC+80
0x55A1	0xF870 ;_TEC+82
0x55A3	0x0000 ;_TEC+84
0x55A5	0x0000 ;_TEC+86
0x55A7	0x0000 ;_TEC+88
0x55A9	0x0000 ;_TEC+90
0x55AB	0x0000 ;_TEC+92
0x55AD	0x0000 ;_TEC+94
0x55AF	0x0000 ;_TEC+96
0x55B1	0x0000 ;_TEC+98
0x55B3	0x0000 ;_TEC+100
0x55B5	0x0000 ;_TEC+102
0x55B7	0x0000 ;_TEC+104
0x55B9	0x0000 ;_TEC+106
0x55BB	0x0000 ;_TEC+108
0x55BD	0x0000 ;_TEC+110
0x55BF	0x0000 ;_TEC+112
0x55C1	0x0000 ;_TEC+114
0x55C3	0x0000 ;_TEC+116
0x55C5	0x0000 ;_TEC+118
0x55C7	0x0000 ;_TEC+120
0x55C9	0x0000 ;_TEC+122
0x55CB	0x0000 ;_TEC+124
0x55CD	0x0000 ;_TEC+126
0x55CF	0x0000 ;_TEC+128
0x55D1	0x0000 ;_TEC+130
0x55D3	0x0000 ;_TEC+132
0x55D5	0x0000 ;_TEC+134
0x55D7	0x0000 ;_TEC+136
0x55D9	0x0000 ;_TEC+138
0x55DB	0x0000 ;_TEC+140
0x55DD	0x0000 ;_TEC+142
0x55DF	0x0000 ;_TEC+144
0x55E1	0x0000 ;_TEC+146
0x55E3	0x0000 ;_TEC+148
0x55E5	0x0000 ;_TEC+150
0x55E7	0x0000 ;_TEC+152
0x55E9	0x0000 ;_TEC+154
0x55EB	0x0000 ;_TEC+156
0x55ED	0x0000 ;_TEC+158
0x55EF	0x0000 ;_TEC+160
0x55F1	0x0000 ;_TEC+162
0x55F3	0x0000 ;_TEC+164
0x55F5	0x0000 ;_TEC+166
0x55F7	0x0000 ;_TEC+168
0x55F9	0x0000 ;_TEC+170
0x55FB	0x0000 ;_TEC+172
0x55FD	0xFF80 ;_TEC+174
0x55FF	0xFFFF ;_TEC+176
0x5601	0x0080 ;_TEC+178
0x5603	0x0000 ;_TEC+180
0x5605	0x0000 ;_TEC+182
0x5607	0x0000 ;_TEC+184
0x5609	0xFF80 ;_TEC+186
0x560B	0xFFFF ;_TEC+188
0x560D	0x8383 ;_TEC+190
0x560F	0x8383 ;_TEC+192
0x5611	0x8783 ;_TEC+194
0x5613	0xC080 ;_TEC+196
0x5615	0x00E0 ;_TEC+198
0x5617	0x7F3F ;_TEC+200
0x5619	0xC0E0 ;_TEC+202
0x561B	0x8080 ;_TEC+204
0x561D	0x8080 ;_TEC+206
0x561F	0xC080 ;_TEC+208
0x5621	0x78F0 ;_TEC+210
0x5623	0x0000 ;_TEC+212
0x5625	0x0000 ;_TEC+214
0x5627	0x0000 ;_TEC+216
0x5629	0x0000 ;_TEC+218
0x562B	0x0000 ;_TEC+220
0x562D	0x0000 ;_TEC+222
0x562F	0x0000 ;_TEC+224
0x5631	0x0000 ;_TEC+226
0x5633	0x0000 ;_TEC+228
0x5635	0x0000 ;_TEC+230
0x5637	0x0000 ;_TEC+232
0x5639	0x0000 ;_TEC+234
0x563B	0x0000 ;_TEC+236
0x563D	0x0000 ;_TEC+238
0x563F	0x0000 ;_TEC+240
0x5641	0x0000 ;_TEC+242
0x5643	0x0000 ;_TEC+244
0x5645	0x0000 ;_TEC+246
0x5647	0x0000 ;_TEC+248
0x5649	0x0000 ;_TEC+250
0x564B	0x0000 ;_TEC+252
0x564D	0x0000 ;_TEC+254
0x564F	0x0000 ;_TEC+256
0x5651	0x0000 ;_TEC+258
0x5653	0x0000 ;_TEC+260
0x5655	0x0000 ;_TEC+262
0x5657	0x0000 ;_TEC+264
0x5659	0x0000 ;_TEC+266
0x565B	0x0000 ;_TEC+268
0x565D	0x0000 ;_TEC+270
0x565F	0x0000 ;_TEC+272
0x5661	0x0000 ;_TEC+274
0x5663	0x0000 ;_TEC+276
0x5665	0x0000 ;_TEC+278
0x5667	0x0000 ;_TEC+280
0x5669	0x0000 ;_TEC+282
0x566B	0x0000 ;_TEC+284
0x566D	0x0000 ;_TEC+286
0x566F	0x0000 ;_TEC+288
0x5671	0x0000 ;_TEC+290
0x5673	0x0000 ;_TEC+292
0x5675	0x0000 ;_TEC+294
0x5677	0x0000 ;_TEC+296
0x5679	0x0000 ;_TEC+298
0x567B	0x0100 ;_TEC+300
0x567D	0x0101 ;_TEC+302
0x567F	0x0101 ;_TEC+304
0x5681	0x0101 ;_TEC+306
0x5683	0x0000 ;_TEC+308
0x5685	0x0000 ;_TEC+310
0x5687	0x0100 ;_TEC+312
0x5689	0x0101 ;_TEC+314
0x568B	0x0101 ;_TEC+316
0x568D	0x0101 ;_TEC+318
0x568F	0x0101 ;_TEC+320
0x5691	0x0101 ;_TEC+322
0x5693	0x0101 ;_TEC+324
0x5695	0x0001 ;_TEC+326
0x5697	0x0000 ;_TEC+328
0x5699	0x0100 ;_TEC+330
0x569B	0x0101 ;_TEC+332
0x569D	0x0101 ;_TEC+334
0x569F	0x0101 ;_TEC+336
0x56A1	0x0000 ;_TEC+338
0x56A3	0x0000 ;_TEC+340
0x56A5	0x0000 ;_TEC+342
0x56A7	0x0000 ;_TEC+344
0x56A9	0x0000 ;_TEC+346
0x56AB	0x0000 ;_TEC+348
0x56AD	0x0000 ;_TEC+350
0x56AF	0x0000 ;_TEC+352
0x56B1	0x0000 ;_TEC+354
0x56B3	0x0000 ;_TEC+356
0x56B5	0x0000 ;_TEC+358
0x56B7	0x0000 ;_TEC+360
0x56B9	0x0000 ;_TEC+362
0x56BB	0x0000 ;_TEC+364
0x56BD	0x0000 ;_TEC+366
0x56BF	0x0000 ;_TEC+368
0x56C1	0x0000 ;_TEC+370
0x56C3	0x0000 ;_TEC+372
0x56C5	0x0000 ;_TEC+374
0x56C7	0x0000 ;_TEC+376
0x56C9	0x0000 ;_TEC+378
0x56CB	0x0000 ;_TEC+380
0x56CD	0x0000 ;_TEC+382
0x56CF	0x0000 ;_TEC+384
0x56D1	0x0000 ;_TEC+386
0x56D3	0x0000 ;_TEC+388
0x56D5	0x0000 ;_TEC+390
0x56D7	0x0000 ;_TEC+392
0x56D9	0x0000 ;_TEC+394
0x56DB	0x0000 ;_TEC+396
0x56DD	0x0000 ;_TEC+398
0x56DF	0x0000 ;_TEC+400
0x56E1	0x0000 ;_TEC+402
0x56E3	0x0000 ;_TEC+404
0x56E5	0x0000 ;_TEC+406
0x56E7	0x0000 ;_TEC+408
0x56E9	0x0000 ;_TEC+410
0x56EB	0x0000 ;_TEC+412
0x56ED	0x0000 ;_TEC+414
0x56EF	0x0000 ;_TEC+416
0x56F1	0x0000 ;_TEC+418
0x56F3	0x0000 ;_TEC+420
0x56F5	0x0000 ;_TEC+422
0x56F7	0x0000 ;_TEC+424
0x56F9	0x0000 ;_TEC+426
0x56FB	0x0000 ;_TEC+428
0x56FD	0x0000 ;_TEC+430
0x56FF	0x0000 ;_TEC+432
0x5701	0x0000 ;_TEC+434
0x5703	0x0000 ;_TEC+436
0x5705	0x0000 ;_TEC+438
0x5707	0x0000 ;_TEC+440
0x5709	0x0000 ;_TEC+442
0x570B	0x0000 ;_TEC+444
0x570D	0x0000 ;_TEC+446
0x570F	0x0000 ;_TEC+448
0x5711	0x0000 ;_TEC+450
0x5713	0x0000 ;_TEC+452
0x5715	0x0000 ;_TEC+454
0x5717	0x0000 ;_TEC+456
0x5719	0x0000 ;_TEC+458
0x571B	0x0000 ;_TEC+460
0x571D	0x0000 ;_TEC+462
0x571F	0x0000 ;_TEC+464
0x5721	0x0000 ;_TEC+466
0x5723	0x0000 ;_TEC+468
0x5725	0x0000 ;_TEC+470
0x5727	0x0000 ;_TEC+472
0x5729	0x0000 ;_TEC+474
0x572B	0x0000 ;_TEC+476
0x572D	0x0000 ;_TEC+478
0x572F	0x0000 ;_TEC+480
0x5731	0x0000 ;_TEC+482
0x5733	0x0000 ;_TEC+484
0x5735	0x0000 ;_TEC+486
0x5737	0x0000 ;_TEC+488
0x5739	0x0000 ;_TEC+490
0x573B	0x0000 ;_TEC+492
0x573D	0x0000 ;_TEC+494
0x573F	0x0000 ;_TEC+496
0x5741	0x0000 ;_TEC+498
0x5743	0x0000 ;_TEC+500
0x5745	0x0000 ;_TEC+502
0x5747	0x0000 ;_TEC+504
0x5749	0x0000 ;_TEC+506
0x574B	0x0000 ;_TEC+508
0x574D	0x0000 ;_TEC+510
0x574F	0x0000 ;_TEC+512
0x5751	0x0000 ;_TEC+514
0x5753	0x0000 ;_TEC+516
0x5755	0x0000 ;_TEC+518
0x5757	0x0000 ;_TEC+520
0x5759	0x0000 ;_TEC+522
0x575B	0x0000 ;_TEC+524
0x575D	0x0000 ;_TEC+526
0x575F	0x0000 ;_TEC+528
0x5761	0x0000 ;_TEC+530
0x5763	0x0000 ;_TEC+532
0x5765	0x0000 ;_TEC+534
0x5767	0x0000 ;_TEC+536
0x5769	0x0000 ;_TEC+538
0x576B	0x0000 ;_TEC+540
0x576D	0x0000 ;_TEC+542
0x576F	0x0000 ;_TEC+544
0x5771	0x0000 ;_TEC+546
0x5773	0x0000 ;_TEC+548
0x5775	0x0000 ;_TEC+550
0x5777	0x0000 ;_TEC+552
0x5779	0x0000 ;_TEC+554
0x577B	0x0000 ;_TEC+556
0x577D	0x0000 ;_TEC+558
0x577F	0x0000 ;_TEC+560
0x5781	0x0000 ;_TEC+562
0x5783	0x0000 ;_TEC+564
0x5785	0x0000 ;_TEC+566
0x5787	0x0000 ;_TEC+568
0x5789	0x0000 ;_TEC+570
0x578B	0x0000 ;_TEC+572
0x578D	0x0000 ;_TEC+574
0x578F	0x0000 ;_TEC+576
0x5791	0x0000 ;_TEC+578
0x5793	0x0000 ;_TEC+580
0x5795	0x0000 ;_TEC+582
0x5797	0x0000 ;_TEC+584
0x5799	0x0000 ;_TEC+586
0x579B	0x0000 ;_TEC+588
0x579D	0x0000 ;_TEC+590
0x579F	0x0000 ;_TEC+592
0x57A1	0x0000 ;_TEC+594
0x57A3	0x0000 ;_TEC+596
0x57A5	0x0000 ;_TEC+598
0x57A7	0x0000 ;_TEC+600
0x57A9	0x0000 ;_TEC+602
0x57AB	0x0000 ;_TEC+604
0x57AD	0x0000 ;_TEC+606
0x57AF	0x0000 ;_TEC+608
0x57B1	0x0000 ;_TEC+610
0x57B3	0x0000 ;_TEC+612
0x57B5	0x0000 ;_TEC+614
0x57B7	0x0000 ;_TEC+616
0x57B9	0x0000 ;_TEC+618
0x57BB	0x0000 ;_TEC+620
0x57BD	0x0000 ;_TEC+622
0x57BF	0x0000 ;_TEC+624
0x57C1	0x0000 ;_TEC+626
0x57C3	0x0000 ;_TEC+628
0x57C5	0x0000 ;_TEC+630
0x57C7	0x0000 ;_TEC+632
0x57C9	0x0000 ;_TEC+634
0x57CB	0x0000 ;_TEC+636
0x57CD	0x0000 ;_TEC+638
0x57CF	0x0000 ;_TEC+640
0x57D1	0x0000 ;_TEC+642
0x57D3	0x0000 ;_TEC+644
0x57D5	0x0000 ;_TEC+646
0x57D7	0x0000 ;_TEC+648
0x57D9	0x0000 ;_TEC+650
0x57DB	0x0000 ;_TEC+652
0x57DD	0x0000 ;_TEC+654
0x57DF	0x0000 ;_TEC+656
0x57E1	0x0000 ;_TEC+658
0x57E3	0x0000 ;_TEC+660
0x57E5	0x0000 ;_TEC+662
0x57E7	0x0000 ;_TEC+664
0x57E9	0x0000 ;_TEC+666
0x57EB	0x0000 ;_TEC+668
0x57ED	0x0000 ;_TEC+670
0x57EF	0x0000 ;_TEC+672
0x57F1	0x0000 ;_TEC+674
0x57F3	0x0000 ;_TEC+676
0x57F5	0x0000 ;_TEC+678
0x57F7	0x0000 ;_TEC+680
0x57F9	0x0000 ;_TEC+682
0x57FB	0x0000 ;_TEC+684
0x57FD	0x0000 ;_TEC+686
0x57FF	0x0000 ;_TEC+688
0x5801	0x0000 ;_TEC+690
0x5803	0x0000 ;_TEC+692
0x5805	0x0000 ;_TEC+694
0x5807	0x0000 ;_TEC+696
0x5809	0x0000 ;_TEC+698
0x580B	0x0000 ;_TEC+700
0x580D	0x0000 ;_TEC+702
0x580F	0x0000 ;_TEC+704
0x5811	0x0000 ;_TEC+706
0x5813	0x0000 ;_TEC+708
0x5815	0x0000 ;_TEC+710
0x5817	0x0000 ;_TEC+712
0x5819	0x0000 ;_TEC+714
0x581B	0x0000 ;_TEC+716
0x581D	0x0000 ;_TEC+718
0x581F	0x0000 ;_TEC+720
0x5821	0x0000 ;_TEC+722
0x5823	0x0000 ;_TEC+724
0x5825	0x0000 ;_TEC+726
0x5827	0x0000 ;_TEC+728
0x5829	0x0000 ;_TEC+730
0x582B	0x0000 ;_TEC+732
0x582D	0x0000 ;_TEC+734
0x582F	0x0000 ;_TEC+736
0x5831	0x0000 ;_TEC+738
0x5833	0x0000 ;_TEC+740
0x5835	0x0000 ;_TEC+742
0x5837	0x0000 ;_TEC+744
0x5839	0x0000 ;_TEC+746
0x583B	0x0000 ;_TEC+748
0x583D	0x0000 ;_TEC+750
0x583F	0x0000 ;_TEC+752
0x5841	0x0000 ;_TEC+754
0x5843	0x0000 ;_TEC+756
0x5845	0x0000 ;_TEC+758
0x5847	0x0000 ;_TEC+760
0x5849	0x0000 ;_TEC+762
0x584B	0x0000 ;_TEC+764
0x584D	0x0000 ;_TEC+766
0x584F	0x0000 ;_TEC+768
0x5851	0x0000 ;_TEC+770
0x5853	0x0000 ;_TEC+772
0x5855	0x0000 ;_TEC+774
0x5857	0x0000 ;_TEC+776
0x5859	0x0000 ;_TEC+778
0x585B	0x0000 ;_TEC+780
0x585D	0x0000 ;_TEC+782
0x585F	0x0000 ;_TEC+784
0x5861	0x0000 ;_TEC+786
0x5863	0x0000 ;_TEC+788
0x5865	0x0000 ;_TEC+790
0x5867	0x0000 ;_TEC+792
0x5869	0x0000 ;_TEC+794
0x586B	0x0000 ;_TEC+796
0x586D	0x0000 ;_TEC+798
0x586F	0x0000 ;_TEC+800
0x5871	0x0000 ;_TEC+802
0x5873	0x0000 ;_TEC+804
0x5875	0x0000 ;_TEC+806
0x5877	0x0000 ;_TEC+808
0x5879	0x0000 ;_TEC+810
0x587B	0x0000 ;_TEC+812
0x587D	0x0000 ;_TEC+814
0x587F	0x0000 ;_TEC+816
0x5881	0x0000 ;_TEC+818
0x5883	0x0000 ;_TEC+820
0x5885	0x0000 ;_TEC+822
0x5887	0x0000 ;_TEC+824
0x5889	0x0000 ;_TEC+826
0x588B	0x0000 ;_TEC+828
0x588D	0x0000 ;_TEC+830
0x588F	0x0000 ;_TEC+832
0x5891	0x0000 ;_TEC+834
0x5893	0x0000 ;_TEC+836
0x5895	0x0000 ;_TEC+838
0x5897	0x0000 ;_TEC+840
0x5899	0x0000 ;_TEC+842
0x589B	0x0000 ;_TEC+844
0x589D	0x0000 ;_TEC+846
0x589F	0x0000 ;_TEC+848
0x58A1	0x0000 ;_TEC+850
0x58A3	0x0000 ;_TEC+852
0x58A5	0x0000 ;_TEC+854
0x58A7	0x0000 ;_TEC+856
0x58A9	0x0000 ;_TEC+858
0x58AB	0x0000 ;_TEC+860
0x58AD	0x0000 ;_TEC+862
0x58AF	0x0000 ;_TEC+864
0x58B1	0x0000 ;_TEC+866
0x58B3	0x0000 ;_TEC+868
0x58B5	0x0000 ;_TEC+870
0x58B7	0x0000 ;_TEC+872
0x58B9	0x0000 ;_TEC+874
0x58BB	0x0000 ;_TEC+876
0x58BD	0x0000 ;_TEC+878
0x58BF	0x0000 ;_TEC+880
0x58C1	0x0000 ;_TEC+882
0x58C3	0x0000 ;_TEC+884
0x58C5	0x0000 ;_TEC+886
0x58C7	0x0000 ;_TEC+888
0x58C9	0x0000 ;_TEC+890
0x58CB	0x0000 ;_TEC+892
0x58CD	0x0000 ;_TEC+894
0x58CF	0x0000 ;_TEC+896
0x58D1	0x0000 ;_TEC+898
0x58D3	0x0000 ;_TEC+900
0x58D5	0x0000 ;_TEC+902
0x58D7	0x0000 ;_TEC+904
0x58D9	0x0000 ;_TEC+906
0x58DB	0x0000 ;_TEC+908
0x58DD	0x0000 ;_TEC+910
0x58DF	0x0000 ;_TEC+912
0x58E1	0x0000 ;_TEC+914
0x58E3	0x0000 ;_TEC+916
0x58E5	0x0000 ;_TEC+918
0x58E7	0x0000 ;_TEC+920
0x58E9	0x0000 ;_TEC+922
0x58EB	0x0000 ;_TEC+924
0x58ED	0x0000 ;_TEC+926
0x58EF	0x0000 ;_TEC+928
0x58F1	0x0000 ;_TEC+930
0x58F3	0x0000 ;_TEC+932
0x58F5	0x0000 ;_TEC+934
0x58F7	0x0000 ;_TEC+936
0x58F9	0x0000 ;_TEC+938
0x58FB	0x0000 ;_TEC+940
0x58FD	0x0000 ;_TEC+942
0x58FF	0x0000 ;_TEC+944
0x5901	0x0000 ;_TEC+946
0x5903	0x0000 ;_TEC+948
0x5905	0x0000 ;_TEC+950
0x5907	0x0000 ;_TEC+952
0x5909	0x0000 ;_TEC+954
0x590B	0x0000 ;_TEC+956
0x590D	0x0000 ;_TEC+958
0x590F	0x0000 ;_TEC+960
0x5911	0x0000 ;_TEC+962
0x5913	0x0000 ;_TEC+964
0x5915	0x0000 ;_TEC+966
0x5917	0x0000 ;_TEC+968
0x5919	0x0000 ;_TEC+970
0x591B	0x0000 ;_TEC+972
0x591D	0x0000 ;_TEC+974
0x591F	0x0000 ;_TEC+976
0x5921	0x0000 ;_TEC+978
0x5923	0x0000 ;_TEC+980
0x5925	0x0000 ;_TEC+982
0x5927	0x0000 ;_TEC+984
0x5929	0x0000 ;_TEC+986
0x592B	0x0000 ;_TEC+988
0x592D	0x0000 ;_TEC+990
0x592F	0x0000 ;_TEC+992
0x5931	0x0000 ;_TEC+994
0x5933	0x0000 ;_TEC+996
0x5935	0x0000 ;_TEC+998
0x5937	0x0000 ;_TEC+1000
0x5939	0x0000 ;_TEC+1002
0x593B	0x0000 ;_TEC+1004
0x593D	0x0000 ;_TEC+1006
0x593F	0x0000 ;_TEC+1008
0x5941	0x0000 ;_TEC+1010
0x5943	0x0000 ;_TEC+1012
0x5945	0x0000 ;_TEC+1014
0x5947	0x0000 ;_TEC+1016
0x5949	0x0000 ;_TEC+1018
0x594B	0x0000 ;_TEC+1020
0x594D	0x0000 ;_TEC+1022
; end of _TEC
;GameOver.c,6 :: _GameOver
0x594F	0x0000 ;_GameOver+0
0x5951	0x0000 ;_GameOver+2
0x5953	0x0000 ;_GameOver+4
0x5955	0x0000 ;_GameOver+6
0x5957	0x0000 ;_GameOver+8
0x5959	0x0000 ;_GameOver+10
0x595B	0x0000 ;_GameOver+12
0x595D	0x0000 ;_GameOver+14
0x595F	0x0000 ;_GameOver+16
0x5961	0x0000 ;_GameOver+18
0x5963	0x0000 ;_GameOver+20
0x5965	0x0000 ;_GameOver+22
0x5967	0x0000 ;_GameOver+24
0x5969	0x0000 ;_GameOver+26
0x596B	0x0000 ;_GameOver+28
0x596D	0x0000 ;_GameOver+30
0x596F	0x0000 ;_GameOver+32
0x5971	0x0000 ;_GameOver+34
0x5973	0x0000 ;_GameOver+36
0x5975	0x0000 ;_GameOver+38
0x5977	0x0000 ;_GameOver+40
0x5979	0x0000 ;_GameOver+42
0x597B	0x0000 ;_GameOver+44
0x597D	0x0000 ;_GameOver+46
0x597F	0x0000 ;_GameOver+48
0x5981	0x0000 ;_GameOver+50
0x5983	0x0000 ;_GameOver+52
0x5985	0x0000 ;_GameOver+54
0x5987	0x0000 ;_GameOver+56
0x5989	0x0000 ;_GameOver+58
0x598B	0x0000 ;_GameOver+60
0x598D	0x0000 ;_GameOver+62
0x598F	0x0000 ;_GameOver+64
0x5991	0x0000 ;_GameOver+66
0x5993	0x0000 ;_GameOver+68
0x5995	0x0000 ;_GameOver+70
0x5997	0x0000 ;_GameOver+72
0x5999	0x0000 ;_GameOver+74
0x599B	0x0000 ;_GameOver+76
0x599D	0x0000 ;_GameOver+78
0x599F	0x0000 ;_GameOver+80
0x59A1	0x0000 ;_GameOver+82
0x59A3	0x0000 ;_GameOver+84
0x59A5	0x0000 ;_GameOver+86
0x59A7	0x0000 ;_GameOver+88
0x59A9	0x0000 ;_GameOver+90
0x59AB	0x0000 ;_GameOver+92
0x59AD	0x0000 ;_GameOver+94
0x59AF	0x0000 ;_GameOver+96
0x59B1	0x0000 ;_GameOver+98
0x59B3	0x0000 ;_GameOver+100
0x59B5	0x0000 ;_GameOver+102
0x59B7	0x0000 ;_GameOver+104
0x59B9	0x0000 ;_GameOver+106
0x59BB	0x0000 ;_GameOver+108
0x59BD	0x0000 ;_GameOver+110
0x59BF	0x0000 ;_GameOver+112
0x59C1	0x0000 ;_GameOver+114
0x59C3	0x0000 ;_GameOver+116
0x59C5	0x0000 ;_GameOver+118
0x59C7	0x0000 ;_GameOver+120
0x59C9	0x0000 ;_GameOver+122
0x59CB	0x0000 ;_GameOver+124
0x59CD	0x0000 ;_GameOver+126
0x59CF	0x0000 ;_GameOver+128
0x59D1	0x0000 ;_GameOver+130
0x59D3	0x0000 ;_GameOver+132
0x59D5	0x0000 ;_GameOver+134
0x59D7	0x0000 ;_GameOver+136
0x59D9	0x0000 ;_GameOver+138
0x59DB	0x0000 ;_GameOver+140
0x59DD	0x0000 ;_GameOver+142
0x59DF	0x0000 ;_GameOver+144
0x59E1	0x0000 ;_GameOver+146
0x59E3	0xE000 ;_GameOver+148
0x59E5	0x18E0 ;_GameOver+150
0x59E7	0x9818 ;_GameOver+152
0x59E9	0x8098 ;_GameOver+154
0x59EB	0x0080 ;_GameOver+156
0x59ED	0xE000 ;_GameOver+158
0x59EF	0x98E0 ;_GameOver+160
0x59F1	0x9898 ;_GameOver+162
0x59F3	0xE098 ;_GameOver+164
0x59F5	0x00E0 ;_GameOver+166
0x59F7	0xF800 ;_GameOver+168
0x59F9	0x60F8 ;_GameOver+170
0x59FB	0x8060 ;_GameOver+172
0x59FD	0x6080 ;_GameOver+174
0x59FF	0xF860 ;_GameOver+176
0x5A01	0x00F8 ;_GameOver+178
0x5A03	0xF800 ;_GameOver+180
0x5A05	0x98F8 ;_GameOver+182
0x5A07	0x9898 ;_GameOver+184
0x5A09	0x1898 ;_GameOver+186
0x5A0B	0x0018 ;_GameOver+188
0x5A0D	0x0000 ;_GameOver+190
0x5A0F	0x0000 ;_GameOver+192
0x5A11	0xE000 ;_GameOver+194
0x5A13	0x18E0 ;_GameOver+196
0x5A15	0x1818 ;_GameOver+198
0x5A17	0xE018 ;_GameOver+200
0x5A19	0x00E0 ;_GameOver+202
0x5A1B	0x7800 ;_GameOver+204
0x5A1D	0x8078 ;_GameOver+206
0x5A1F	0x0080 ;_GameOver+208
0x5A21	0x8000 ;_GameOver+210
0x5A23	0x7880 ;_GameOver+212
0x5A25	0x0078 ;_GameOver+214
0x5A27	0xF800 ;_GameOver+216
0x5A29	0x98F8 ;_GameOver+218
0x5A2B	0x9898 ;_GameOver+220
0x5A2D	0x1898 ;_GameOver+222
0x5A2F	0x0018 ;_GameOver+224
0x5A31	0xF800 ;_GameOver+226
0x5A33	0x98F8 ;_GameOver+228
0x5A35	0x9898 ;_GameOver+230
0x5A37	0x6098 ;_GameOver+232
0x5A39	0x0060 ;_GameOver+234
0x5A3B	0x0000 ;_GameOver+236
0x5A3D	0x0000 ;_GameOver+238
0x5A3F	0x0000 ;_GameOver+240
0x5A41	0x0000 ;_GameOver+242
0x5A43	0x0000 ;_GameOver+244
0x5A45	0x0000 ;_GameOver+246
0x5A47	0x0000 ;_GameOver+248
0x5A49	0x0000 ;_GameOver+250
0x5A4B	0x0000 ;_GameOver+252
0x5A4D	0x0000 ;_GameOver+254
0x5A4F	0x0000 ;_GameOver+256
0x5A51	0x0000 ;_GameOver+258
0x5A53	0x0000 ;_GameOver+260
0x5A55	0x0000 ;_GameOver+262
0x5A57	0x0000 ;_GameOver+264
0x5A59	0x0000 ;_GameOver+266
0x5A5B	0x0000 ;_GameOver+268
0x5A5D	0x0000 ;_GameOver+270
0x5A5F	0x0000 ;_GameOver+272
0x5A61	0x0000 ;_GameOver+274
0x5A63	0x0700 ;_GameOver+276
0x5A65	0x1807 ;_GameOver+278
0x5A67	0x1918 ;_GameOver+280
0x5A69	0x0719 ;_GameOver+282
0x5A6B	0x0007 ;_GameOver+284
0x5A6D	0x1F00 ;_GameOver+286
0x5A6F	0x011F ;_GameOver+288
0x5A71	0x0101 ;_GameOver+290
0x5A73	0x1F01 ;_GameOver+292
0x5A75	0x001F ;_GameOver+294
0x5A77	0x1F00 ;_GameOver+296
0x5A79	0x001F ;_GameOver+298
0x5A7B	0x0100 ;_GameOver+300
0x5A7D	0x0001 ;_GameOver+302
0x5A7F	0x1F00 ;_GameOver+304
0x5A81	0x001F ;_GameOver+306
0x5A83	0x1F00 ;_GameOver+308
0x5A85	0x191F ;_GameOver+310
0x5A87	0x1919 ;_GameOver+312
0x5A89	0x1819 ;_GameOver+314
0x5A8B	0x0018 ;_GameOver+316
0x5A8D	0x0000 ;_GameOver+318
0x5A8F	0x0000 ;_GameOver+320
0x5A91	0x0700 ;_GameOver+322
0x5A93	0x1807 ;_GameOver+324
0x5A95	0x1818 ;_GameOver+326
0x5A97	0x0718 ;_GameOver+328
0x5A99	0x0007 ;_GameOver+330
0x5A9B	0x0000 ;_GameOver+332
0x5A9D	0x0700 ;_GameOver+334
0x5A9F	0x1807 ;_GameOver+336
0x5AA1	0x0718 ;_GameOver+338
0x5AA3	0x0007 ;_GameOver+340
0x5AA5	0x0000 ;_GameOver+342
0x5AA7	0x1F00 ;_GameOver+344
0x5AA9	0x191F ;_GameOver+346
0x5AAB	0x1919 ;_GameOver+348
0x5AAD	0x1819 ;_GameOver+350
0x5AAF	0x0018 ;_GameOver+352
0x5AB1	0x1F00 ;_GameOver+354
0x5AB3	0x011F ;_GameOver+356
0x5AB5	0x0701 ;_GameOver+358
0x5AB7	0x1807 ;_GameOver+360
0x5AB9	0x0018 ;_GameOver+362
0x5ABB	0x0000 ;_GameOver+364
0x5ABD	0x0000 ;_GameOver+366
0x5ABF	0x0000 ;_GameOver+368
0x5AC1	0x0000 ;_GameOver+370
0x5AC3	0x0000 ;_GameOver+372
0x5AC5	0x0000 ;_GameOver+374
0x5AC7	0x0000 ;_GameOver+376
0x5AC9	0x0000 ;_GameOver+378
0x5ACB	0x0000 ;_GameOver+380
0x5ACD	0x0000 ;_GameOver+382
0x5ACF	0x0000 ;_GameOver+384
0x5AD1	0x0000 ;_GameOver+386
0x5AD3	0x0000 ;_GameOver+388
0x5AD5	0x0000 ;_GameOver+390
0x5AD7	0x0000 ;_GameOver+392
0x5AD9	0x0000 ;_GameOver+394
0x5ADB	0x0000 ;_GameOver+396
0x5ADD	0x0000 ;_GameOver+398
0x5ADF	0x0000 ;_GameOver+400
0x5AE1	0x0000 ;_GameOver+402
0x5AE3	0x0000 ;_GameOver+404
0x5AE5	0x0000 ;_GameOver+406
0x5AE7	0x0000 ;_GameOver+408
0x5AE9	0x0000 ;_GameOver+410
0x5AEB	0x0000 ;_GameOver+412
0x5AED	0x0000 ;_GameOver+414
0x5AEF	0x0000 ;_GameOver+416
0x5AF1	0x0000 ;_GameOver+418
0x5AF3	0x0000 ;_GameOver+420
0x5AF5	0x0000 ;_GameOver+422
0x5AF7	0x0000 ;_GameOver+424
0x5AF9	0x0000 ;_GameOver+426
0x5AFB	0x0000 ;_GameOver+428
0x5AFD	0x0000 ;_GameOver+430
0x5AFF	0x0000 ;_GameOver+432
0x5B01	0x0000 ;_GameOver+434
0x5B03	0x0000 ;_GameOver+436
0x5B05	0x0000 ;_GameOver+438
0x5B07	0x0000 ;_GameOver+440
0x5B09	0x0000 ;_GameOver+442
0x5B0B	0x0000 ;_GameOver+444
0x5B0D	0x0000 ;_GameOver+446
0x5B0F	0x0000 ;_GameOver+448
0x5B11	0x0000 ;_GameOver+450
0x5B13	0x0000 ;_GameOver+452
0x5B15	0x0000 ;_GameOver+454
0x5B17	0x0000 ;_GameOver+456
0x5B19	0x0000 ;_GameOver+458
0x5B1B	0x0000 ;_GameOver+460
0x5B1D	0x0000 ;_GameOver+462
0x5B1F	0x0000 ;_GameOver+464
0x5B21	0x0000 ;_GameOver+466
0x5B23	0x0000 ;_GameOver+468
0x5B25	0x0000 ;_GameOver+470
0x5B27	0x0000 ;_GameOver+472
0x5B29	0x0000 ;_GameOver+474
0x5B2B	0x0000 ;_GameOver+476
0x5B2D	0x0000 ;_GameOver+478
0x5B2F	0x0000 ;_GameOver+480
0x5B31	0x0000 ;_GameOver+482
0x5B33	0x0000 ;_GameOver+484
0x5B35	0x0000 ;_GameOver+486
0x5B37	0x0000 ;_GameOver+488
0x5B39	0x0000 ;_GameOver+490
0x5B3B	0x0000 ;_GameOver+492
0x5B3D	0x0000 ;_GameOver+494
0x5B3F	0x0000 ;_GameOver+496
0x5B41	0x0000 ;_GameOver+498
0x5B43	0x0000 ;_GameOver+500
0x5B45	0x0000 ;_GameOver+502
0x5B47	0x0000 ;_GameOver+504
0x5B49	0x0000 ;_GameOver+506
0x5B4B	0x0000 ;_GameOver+508
0x5B4D	0x0000 ;_GameOver+510
0x5B4F	0x0000 ;_GameOver+512
0x5B51	0x0000 ;_GameOver+514
0x5B53	0x0000 ;_GameOver+516
0x5B55	0x0000 ;_GameOver+518
0x5B57	0x0000 ;_GameOver+520
0x5B59	0x0000 ;_GameOver+522
0x5B5B	0x0000 ;_GameOver+524
0x5B5D	0x0000 ;_GameOver+526
0x5B5F	0x0000 ;_GameOver+528
0x5B61	0x0000 ;_GameOver+530
0x5B63	0x0000 ;_GameOver+532
0x5B65	0x0000 ;_GameOver+534
0x5B67	0x0000 ;_GameOver+536
0x5B69	0x0000 ;_GameOver+538
0x5B6B	0x0000 ;_GameOver+540
0x5B6D	0x0000 ;_GameOver+542
0x5B6F	0x0000 ;_GameOver+544
0x5B71	0x0000 ;_GameOver+546
0x5B73	0x0000 ;_GameOver+548
0x5B75	0x0000 ;_GameOver+550
0x5B77	0x0000 ;_GameOver+552
0x5B79	0x0000 ;_GameOver+554
0x5B7B	0x0000 ;_GameOver+556
0x5B7D	0x0000 ;_GameOver+558
0x5B7F	0x0000 ;_GameOver+560
0x5B81	0x0000 ;_GameOver+562
0x5B83	0x0000 ;_GameOver+564
0x5B85	0x0000 ;_GameOver+566
0x5B87	0x0000 ;_GameOver+568
0x5B89	0x0000 ;_GameOver+570
0x5B8B	0x0000 ;_GameOver+572
0x5B8D	0x0000 ;_GameOver+574
0x5B8F	0x0000 ;_GameOver+576
0x5B91	0x0000 ;_GameOver+578
0x5B93	0x0000 ;_GameOver+580
0x5B95	0x0000 ;_GameOver+582
0x5B97	0x0000 ;_GameOver+584
0x5B99	0x0000 ;_GameOver+586
0x5B9B	0x0000 ;_GameOver+588
0x5B9D	0x0000 ;_GameOver+590
0x5B9F	0x0000 ;_GameOver+592
0x5BA1	0x0000 ;_GameOver+594
0x5BA3	0x0000 ;_GameOver+596
0x5BA5	0x0000 ;_GameOver+598
0x5BA7	0x0000 ;_GameOver+600
0x5BA9	0x0000 ;_GameOver+602
0x5BAB	0x0000 ;_GameOver+604
0x5BAD	0x0000 ;_GameOver+606
0x5BAF	0x0000 ;_GameOver+608
0x5BB1	0x0000 ;_GameOver+610
0x5BB3	0x0000 ;_GameOver+612
0x5BB5	0x0000 ;_GameOver+614
0x5BB7	0x0000 ;_GameOver+616
0x5BB9	0x0000 ;_GameOver+618
0x5BBB	0x0000 ;_GameOver+620
0x5BBD	0x0000 ;_GameOver+622
0x5BBF	0x0000 ;_GameOver+624
0x5BC1	0x0000 ;_GameOver+626
0x5BC3	0x0000 ;_GameOver+628
0x5BC5	0x0000 ;_GameOver+630
0x5BC7	0x0000 ;_GameOver+632
0x5BC9	0x0000 ;_GameOver+634
0x5BCB	0x0000 ;_GameOver+636
0x5BCD	0x0000 ;_GameOver+638
0x5BCF	0x0000 ;_GameOver+640
0x5BD1	0x0000 ;_GameOver+642
0x5BD3	0x0000 ;_GameOver+644
0x5BD5	0x0000 ;_GameOver+646
0x5BD7	0x0000 ;_GameOver+648
0x5BD9	0x0000 ;_GameOver+650
0x5BDB	0x0000 ;_GameOver+652
0x5BDD	0x0000 ;_GameOver+654
0x5BDF	0x0000 ;_GameOver+656
0x5BE1	0x0000 ;_GameOver+658
0x5BE3	0x0000 ;_GameOver+660
0x5BE5	0x0000 ;_GameOver+662
0x5BE7	0x0000 ;_GameOver+664
0x5BE9	0x0000 ;_GameOver+666
0x5BEB	0x0000 ;_GameOver+668
0x5BED	0x0000 ;_GameOver+670
0x5BEF	0x0000 ;_GameOver+672
0x5BF1	0x0000 ;_GameOver+674
0x5BF3	0x0000 ;_GameOver+676
0x5BF5	0x0000 ;_GameOver+678
0x5BF7	0x0000 ;_GameOver+680
0x5BF9	0x0000 ;_GameOver+682
0x5BFB	0x0000 ;_GameOver+684
0x5BFD	0x0000 ;_GameOver+686
0x5BFF	0x0000 ;_GameOver+688
0x5C01	0x0000 ;_GameOver+690
0x5C03	0x0000 ;_GameOver+692
0x5C05	0x0000 ;_GameOver+694
0x5C07	0x0000 ;_GameOver+696
0x5C09	0x0000 ;_GameOver+698
0x5C0B	0x0000 ;_GameOver+700
0x5C0D	0x0000 ;_GameOver+702
0x5C0F	0x0000 ;_GameOver+704
0x5C11	0x0000 ;_GameOver+706
0x5C13	0x0000 ;_GameOver+708
0x5C15	0x0000 ;_GameOver+710
0x5C17	0x0000 ;_GameOver+712
0x5C19	0x0000 ;_GameOver+714
0x5C1B	0x0000 ;_GameOver+716
0x5C1D	0x0000 ;_GameOver+718
0x5C1F	0x0000 ;_GameOver+720
0x5C21	0x0000 ;_GameOver+722
0x5C23	0x0000 ;_GameOver+724
0x5C25	0x0000 ;_GameOver+726
0x5C27	0x0000 ;_GameOver+728
0x5C29	0x0000 ;_GameOver+730
0x5C2B	0x0000 ;_GameOver+732
0x5C2D	0x0000 ;_GameOver+734
0x5C2F	0x0000 ;_GameOver+736
0x5C31	0x0000 ;_GameOver+738
0x5C33	0x0000 ;_GameOver+740
0x5C35	0x0000 ;_GameOver+742
0x5C37	0x0000 ;_GameOver+744
0x5C39	0x0000 ;_GameOver+746
0x5C3B	0x0000 ;_GameOver+748
0x5C3D	0x0000 ;_GameOver+750
0x5C3F	0x0000 ;_GameOver+752
0x5C41	0x0000 ;_GameOver+754
0x5C43	0x0000 ;_GameOver+756
0x5C45	0x0000 ;_GameOver+758
0x5C47	0x0000 ;_GameOver+760
0x5C49	0x0000 ;_GameOver+762
0x5C4B	0x0000 ;_GameOver+764
0x5C4D	0x0000 ;_GameOver+766
0x5C4F	0x0000 ;_GameOver+768
0x5C51	0x0000 ;_GameOver+770
0x5C53	0x0000 ;_GameOver+772
0x5C55	0x0000 ;_GameOver+774
0x5C57	0x0000 ;_GameOver+776
0x5C59	0x0000 ;_GameOver+778
0x5C5B	0x0000 ;_GameOver+780
0x5C5D	0x0000 ;_GameOver+782
0x5C5F	0x0000 ;_GameOver+784
0x5C61	0x0000 ;_GameOver+786
0x5C63	0x0000 ;_GameOver+788
0x5C65	0x0000 ;_GameOver+790
0x5C67	0x0000 ;_GameOver+792
0x5C69	0x0000 ;_GameOver+794
0x5C6B	0x0000 ;_GameOver+796
0x5C6D	0x0000 ;_GameOver+798
0x5C6F	0x0000 ;_GameOver+800
0x5C71	0x0000 ;_GameOver+802
0x5C73	0x0000 ;_GameOver+804
0x5C75	0x0000 ;_GameOver+806
0x5C77	0x0000 ;_GameOver+808
0x5C79	0x0000 ;_GameOver+810
0x5C7B	0x0000 ;_GameOver+812
0x5C7D	0x0000 ;_GameOver+814
0x5C7F	0x0000 ;_GameOver+816
0x5C81	0x0000 ;_GameOver+818
0x5C83	0x0000 ;_GameOver+820
0x5C85	0x0000 ;_GameOver+822
0x5C87	0x0000 ;_GameOver+824
0x5C89	0x0000 ;_GameOver+826
0x5C8B	0x0000 ;_GameOver+828
0x5C8D	0x0000 ;_GameOver+830
0x5C8F	0x0000 ;_GameOver+832
0x5C91	0x0000 ;_GameOver+834
0x5C93	0x0000 ;_GameOver+836
0x5C95	0x0000 ;_GameOver+838
0x5C97	0x0000 ;_GameOver+840
0x5C99	0x0000 ;_GameOver+842
0x5C9B	0x0000 ;_GameOver+844
0x5C9D	0x0000 ;_GameOver+846
0x5C9F	0x0000 ;_GameOver+848
0x5CA1	0x0000 ;_GameOver+850
0x5CA3	0x0000 ;_GameOver+852
0x5CA5	0x0000 ;_GameOver+854
0x5CA7	0x0000 ;_GameOver+856
0x5CA9	0x0000 ;_GameOver+858
0x5CAB	0x0000 ;_GameOver+860
0x5CAD	0x0000 ;_GameOver+862
0x5CAF	0x0000 ;_GameOver+864
0x5CB1	0x0000 ;_GameOver+866
0x5CB3	0x0000 ;_GameOver+868
0x5CB5	0x0000 ;_GameOver+870
0x5CB7	0x0000 ;_GameOver+872
0x5CB9	0x0000 ;_GameOver+874
0x5CBB	0x0000 ;_GameOver+876
0x5CBD	0x0000 ;_GameOver+878
0x5CBF	0x0000 ;_GameOver+880
0x5CC1	0x0000 ;_GameOver+882
0x5CC3	0x0000 ;_GameOver+884
0x5CC5	0x0000 ;_GameOver+886
0x5CC7	0x0000 ;_GameOver+888
0x5CC9	0x0000 ;_GameOver+890
0x5CCB	0x0000 ;_GameOver+892
0x5CCD	0x0000 ;_GameOver+894
0x5CCF	0x0000 ;_GameOver+896
0x5CD1	0x0000 ;_GameOver+898
0x5CD3	0x0000 ;_GameOver+900
0x5CD5	0x0000 ;_GameOver+902
0x5CD7	0x0000 ;_GameOver+904
0x5CD9	0x0000 ;_GameOver+906
0x5CDB	0x0000 ;_GameOver+908
0x5CDD	0x0000 ;_GameOver+910
0x5CDF	0x0000 ;_GameOver+912
0x5CE1	0x0000 ;_GameOver+914
0x5CE3	0x0000 ;_GameOver+916
0x5CE5	0x0000 ;_GameOver+918
0x5CE7	0x0000 ;_GameOver+920
0x5CE9	0x0000 ;_GameOver+922
0x5CEB	0x0000 ;_GameOver+924
0x5CED	0x0000 ;_GameOver+926
0x5CEF	0x0000 ;_GameOver+928
0x5CF1	0x0000 ;_GameOver+930
0x5CF3	0x0000 ;_GameOver+932
0x5CF5	0x0000 ;_GameOver+934
0x5CF7	0x0000 ;_GameOver+936
0x5CF9	0x0000 ;_GameOver+938
0x5CFB	0x0000 ;_GameOver+940
0x5CFD	0x0000 ;_GameOver+942
0x5CFF	0x0000 ;_GameOver+944
0x5D01	0x0000 ;_GameOver+946
0x5D03	0x0000 ;_GameOver+948
0x5D05	0x0000 ;_GameOver+950
0x5D07	0x0000 ;_GameOver+952
0x5D09	0x0000 ;_GameOver+954
0x5D0B	0x0000 ;_GameOver+956
0x5D0D	0x0000 ;_GameOver+958
0x5D0F	0x0000 ;_GameOver+960
0x5D11	0x0000 ;_GameOver+962
0x5D13	0x0000 ;_GameOver+964
0x5D15	0x0000 ;_GameOver+966
0x5D17	0x0000 ;_GameOver+968
0x5D19	0x0000 ;_GameOver+970
0x5D1B	0x0000 ;_GameOver+972
0x5D1D	0x0000 ;_GameOver+974
0x5D1F	0x0000 ;_GameOver+976
0x5D21	0x0000 ;_GameOver+978
0x5D23	0x0000 ;_GameOver+980
0x5D25	0x0000 ;_GameOver+982
0x5D27	0x0000 ;_GameOver+984
0x5D29	0x0000 ;_GameOver+986
0x5D2B	0x0000 ;_GameOver+988
0x5D2D	0x0000 ;_GameOver+990
0x5D2F	0x0000 ;_GameOver+992
0x5D31	0x0000 ;_GameOver+994
0x5D33	0x0000 ;_GameOver+996
0x5D35	0x0000 ;_GameOver+998
0x5D37	0x0000 ;_GameOver+1000
0x5D39	0x0000 ;_GameOver+1002
0x5D3B	0x0000 ;_GameOver+1004
0x5D3D	0x0000 ;_GameOver+1006
0x5D3F	0x0000 ;_GameOver+1008
0x5D41	0x0000 ;_GameOver+1010
0x5D43	0x0000 ;_GameOver+1012
0x5D45	0x0000 ;_GameOver+1014
0x5D47	0x0000 ;_GameOver+1016
0x5D49	0x0000 ;_GameOver+1018
0x5D4B	0x0000 ;_GameOver+1020
0x5D4D	0x0000 ;_GameOver+1022
; end of _GameOver
;space.c,6 :: _space
0x5D4F	0x0000 ;_space+0
0x5D51	0x0000 ;_space+2
0x5D53	0x0000 ;_space+4
0x5D55	0x0000 ;_space+6
0x5D57	0x0000 ;_space+8
0x5D59	0x0000 ;_space+10
0x5D5B	0x0000 ;_space+12
0x5D5D	0x0000 ;_space+14
0x5D5F	0x0000 ;_space+16
0x5D61	0x0000 ;_space+18
0x5D63	0x0000 ;_space+20
0x5D65	0x0000 ;_space+22
0x5D67	0x0000 ;_space+24
0x5D69	0x0000 ;_space+26
0x5D6B	0x0000 ;_space+28
0x5D6D	0x0000 ;_space+30
0x5D6F	0x0000 ;_space+32
0x5D71	0x0000 ;_space+34
0x5D73	0x0000 ;_space+36
0x5D75	0x0000 ;_space+38
0x5D77	0x0000 ;_space+40
0x5D79	0x0000 ;_space+42
0x5D7B	0x1818 ;_space+44
0x5D7D	0x6666 ;_space+46
0x5D7F	0x6666 ;_space+48
0x5D81	0x8686 ;_space+50
0x5D83	0x0000 ;_space+52
0x5D85	0xFEFE ;_space+54
0x5D87	0x6666 ;_space+56
0x5D89	0x6666 ;_space+58
0x5D8B	0x1818 ;_space+60
0x5D8D	0x0000 ;_space+62
0x5D8F	0xF8F8 ;_space+64
0x5D91	0x6666 ;_space+66
0x5D93	0x6666 ;_space+68
0x5D95	0xF8F8 ;_space+70
0x5D97	0x0000 ;_space+72
0x5D99	0xF8F8 ;_space+74
0x5D9B	0x0606 ;_space+76
0x5D9D	0x0606 ;_space+78
0x5D9F	0x9898 ;_space+80
0x5DA1	0x0000 ;_space+82
0x5DA3	0xFEFE ;_space+84
0x5DA5	0x6666 ;_space+86
0x5DA7	0x6666 ;_space+88
0x5DA9	0x0606 ;_space+90
0x5DAB	0x0000 ;_space+92
0x5DAD	0x0000 ;_space+94
0x5DAF	0x0000 ;_space+96
0x5DB1	0x0000 ;_space+98
0x5DB3	0x0000 ;_space+100
0x5DB5	0x0000 ;_space+102
0x5DB7	0x0000 ;_space+104
0x5DB9	0x0000 ;_space+106
0x5DBB	0x0000 ;_space+108
0x5DBD	0x0000 ;_space+110
0x5DBF	0x0000 ;_space+112
0x5DC1	0x0000 ;_space+114
0x5DC3	0x0000 ;_space+116
0x5DC5	0x0000 ;_space+118
0x5DC7	0x0000 ;_space+120
0x5DC9	0x0000 ;_space+122
0x5DCB	0x0000 ;_space+124
0x5DCD	0x0000 ;_space+126
0x5DCF	0x0000 ;_space+128
0x5DD1	0x0000 ;_space+130
0x5DD3	0x0000 ;_space+132
0x5DD5	0x0000 ;_space+134
0x5DD7	0x0000 ;_space+136
0x5DD9	0x0000 ;_space+138
0x5DDB	0x0000 ;_space+140
0x5DDD	0x0000 ;_space+142
0x5DDF	0x0000 ;_space+144
0x5DE1	0x0000 ;_space+146
0x5DE3	0x0000 ;_space+148
0x5DE5	0x0000 ;_space+150
0x5DE7	0x0000 ;_space+152
0x5DE9	0x0000 ;_space+154
0x5DEB	0x0000 ;_space+156
0x5DED	0x0000 ;_space+158
0x5DEF	0x0000 ;_space+160
0x5DF1	0x0000 ;_space+162
0x5DF3	0x0000 ;_space+164
0x5DF5	0x0000 ;_space+166
0x5DF7	0x0000 ;_space+168
0x5DF9	0x0000 ;_space+170
0x5DFB	0x0606 ;_space+172
0x5DFD	0x0606 ;_space+174
0x5DFF	0xE6E6 ;_space+176
0x5E01	0x6161 ;_space+178
0x5E03	0x6060 ;_space+180
0x5E05	0x8787 ;_space+182
0x5E07	0x0000 ;_space+184
0x5E09	0x8080 ;_space+186
0x5E0B	0x6060 ;_space+188
0x5E0D	0x6060 ;_space+190
0x5E0F	0x8787 ;_space+192
0x5E11	0x0000 ;_space+194
0x5E13	0x8080 ;_space+196
0x5E15	0x6767 ;_space+198
0x5E17	0x6060 ;_space+200
0x5E19	0x8181 ;_space+202
0x5E1B	0x0606 ;_space+204
0x5E1D	0xE6E6 ;_space+206
0x5E1F	0x6161 ;_space+208
0x5E21	0x6060 ;_space+210
0x5E23	0x6767 ;_space+212
0x5E25	0x0606 ;_space+214
0x5E27	0x0606 ;_space+216
0x5E29	0x0606 ;_space+218
0x5E2B	0x0000 ;_space+220
0x5E2D	0x0000 ;_space+222
0x5E2F	0x0000 ;_space+224
0x5E31	0x0000 ;_space+226
0x5E33	0x0000 ;_space+228
0x5E35	0x0000 ;_space+230
0x5E37	0x0000 ;_space+232
0x5E39	0x0000 ;_space+234
0x5E3B	0x0000 ;_space+236
0x5E3D	0x0000 ;_space+238
0x5E3F	0x0000 ;_space+240
0x5E41	0x0000 ;_space+242
0x5E43	0x0000 ;_space+244
0x5E45	0x0000 ;_space+246
0x5E47	0x0000 ;_space+248
0x5E49	0x0000 ;_space+250
0x5E4B	0x0000 ;_space+252
0x5E4D	0x0000 ;_space+254
0x5E4F	0x0000 ;_space+256
0x5E51	0x0000 ;_space+258
0x5E53	0x0000 ;_space+260
0x5E55	0x0000 ;_space+262
0x5E57	0x0000 ;_space+264
0x5E59	0x0000 ;_space+266
0x5E5B	0x0000 ;_space+268
0x5E5D	0x0000 ;_space+270
0x5E5F	0x0000 ;_space+272
0x5E61	0x0000 ;_space+274
0x5E63	0x0000 ;_space+276
0x5E65	0x0000 ;_space+278
0x5E67	0x0000 ;_space+280
0x5E69	0x0000 ;_space+282
0x5E6B	0x0000 ;_space+284
0x5E6D	0x0000 ;_space+286
0x5E6F	0x0000 ;_space+288
0x5E71	0x0000 ;_space+290
0x5E73	0x0000 ;_space+292
0x5E75	0x0000 ;_space+294
0x5E77	0x0000 ;_space+296
0x5E79	0x0000 ;_space+298
0x5E7B	0x0000 ;_space+300
0x5E7D	0x0000 ;_space+302
0x5E7F	0x7F7F ;_space+304
0x5E81	0x0606 ;_space+306
0x5E83	0x1E1E ;_space+308
0x5E85	0x6161 ;_space+310
0x5E87	0x0000 ;_space+312
0x5E89	0x7F7F ;_space+314
0x5E8B	0x0606 ;_space+316
0x5E8D	0x0606 ;_space+318
0x5E8F	0x7F7F ;_space+320
0x5E91	0x0000 ;_space+322
0x5E93	0x1F1F ;_space+324
0x5E95	0x6060 ;_space+326
0x5E97	0x6060 ;_space+328
0x5E99	0x1919 ;_space+330
0x5E9B	0x0000 ;_space+332
0x5E9D	0x7F7F ;_space+334
0x5E9F	0x6666 ;_space+336
0x5EA1	0x6666 ;_space+338
0x5EA3	0x6060 ;_space+340
0x5EA5	0x0000 ;_space+342
0x5EA7	0x0000 ;_space+344
0x5EA9	0x0000 ;_space+346
0x5EAB	0x0000 ;_space+348
0x5EAD	0x0000 ;_space+350
0x5EAF	0x0000 ;_space+352
0x5EB1	0x0000 ;_space+354
0x5EB3	0x0000 ;_space+356
0x5EB5	0x0000 ;_space+358
0x5EB7	0x0000 ;_space+360
0x5EB9	0x0000 ;_space+362
0x5EBB	0x0000 ;_space+364
0x5EBD	0x0000 ;_space+366
0x5EBF	0x0000 ;_space+368
0x5EC1	0x0000 ;_space+370
0x5EC3	0x0000 ;_space+372
0x5EC5	0x0000 ;_space+374
0x5EC7	0x0000 ;_space+376
0x5EC9	0x0000 ;_space+378
0x5ECB	0x0000 ;_space+380
0x5ECD	0x0000 ;_space+382
0x5ECF	0x0000 ;_space+384
0x5ED1	0x0000 ;_space+386
0x5ED3	0x0000 ;_space+388
0x5ED5	0x0000 ;_space+390
0x5ED7	0x0000 ;_space+392
0x5ED9	0x0000 ;_space+394
0x5EDB	0x0000 ;_space+396
0x5EDD	0x0000 ;_space+398
0x5EDF	0x0000 ;_space+400
0x5EE1	0x0000 ;_space+402
0x5EE3	0x0000 ;_space+404
0x5EE5	0x0000 ;_space+406
0x5EE7	0x0000 ;_space+408
0x5EE9	0x0000 ;_space+410
0x5EEB	0x0000 ;_space+412
0x5EED	0x0000 ;_space+414
0x5EEF	0x0000 ;_space+416
0x5EF1	0x0000 ;_space+418
0x5EF3	0x0000 ;_space+420
0x5EF5	0x0000 ;_space+422
0x5EF7	0x0000 ;_space+424
0x5EF9	0x0000 ;_space+426
0x5EFB	0x0000 ;_space+428
0x5EFD	0x0000 ;_space+430
0x5EFF	0x0000 ;_space+432
0x5F01	0x0000 ;_space+434
0x5F03	0x0000 ;_space+436
0x5F05	0x0000 ;_space+438
0x5F07	0x0000 ;_space+440
0x5F09	0x0000 ;_space+442
0x5F0B	0x0000 ;_space+444
0x5F0D	0x0000 ;_space+446
0x5F0F	0x0000 ;_space+448
0x5F11	0x0000 ;_space+450
0x5F13	0x0000 ;_space+452
0x5F15	0x0000 ;_space+454
0x5F17	0x0000 ;_space+456
0x5F19	0x0000 ;_space+458
0x5F1B	0x0000 ;_space+460
0x5F1D	0x0000 ;_space+462
0x5F1F	0x0000 ;_space+464
0x5F21	0x0000 ;_space+466
0x5F23	0x0000 ;_space+468
0x5F25	0x0000 ;_space+470
0x5F27	0x0000 ;_space+472
0x5F29	0x0000 ;_space+474
0x5F2B	0x0000 ;_space+476
0x5F2D	0x0000 ;_space+478
0x5F2F	0x0000 ;_space+480
0x5F31	0x0000 ;_space+482
0x5F33	0x0000 ;_space+484
0x5F35	0x0000 ;_space+486
0x5F37	0x0000 ;_space+488
0x5F39	0x0000 ;_space+490
0x5F3B	0x0000 ;_space+492
0x5F3D	0x0000 ;_space+494
0x5F3F	0x0000 ;_space+496
0x5F41	0x0000 ;_space+498
0x5F43	0x0000 ;_space+500
0x5F45	0x0000 ;_space+502
0x5F47	0x0000 ;_space+504
0x5F49	0x0000 ;_space+506
0x5F4B	0x0000 ;_space+508
0x5F4D	0x0000 ;_space+510
0x5F4F	0x0000 ;_space+512
0x5F51	0x0000 ;_space+514
0x5F53	0x0000 ;_space+516
0x5F55	0x0000 ;_space+518
0x5F57	0x0000 ;_space+520
0x5F59	0x0000 ;_space+522
0x5F5B	0x0000 ;_space+524
0x5F5D	0x0000 ;_space+526
0x5F5F	0x0000 ;_space+528
0x5F61	0x0000 ;_space+530
0x5F63	0x0000 ;_space+532
0x5F65	0x0000 ;_space+534
0x5F67	0x0000 ;_space+536
0x5F69	0x0000 ;_space+538
0x5F6B	0x0000 ;_space+540
0x5F6D	0x0000 ;_space+542
0x5F6F	0x0000 ;_space+544
0x5F71	0x0000 ;_space+546
0x5F73	0x0000 ;_space+548
0x5F75	0x0000 ;_space+550
0x5F77	0x0000 ;_space+552
0x5F79	0x0000 ;_space+554
0x5F7B	0x0000 ;_space+556
0x5F7D	0x0000 ;_space+558
0x5F7F	0x0000 ;_space+560
0x5F81	0x0000 ;_space+562
0x5F83	0x0000 ;_space+564
0x5F85	0x0000 ;_space+566
0x5F87	0x0000 ;_space+568
0x5F89	0x0000 ;_space+570
0x5F8B	0x0000 ;_space+572
0x5F8D	0x0000 ;_space+574
0x5F8F	0x0000 ;_space+576
0x5F91	0x0000 ;_space+578
0x5F93	0x0000 ;_space+580
0x5F95	0x0000 ;_space+582
0x5F97	0x0000 ;_space+584
0x5F99	0x0000 ;_space+586
0x5F9B	0x0000 ;_space+588
0x5F9D	0x0000 ;_space+590
0x5F9F	0x0000 ;_space+592
0x5FA1	0x0000 ;_space+594
0x5FA3	0x0000 ;_space+596
0x5FA5	0x0000 ;_space+598
0x5FA7	0x0000 ;_space+600
0x5FA9	0x0000 ;_space+602
0x5FAB	0x0000 ;_space+604
0x5FAD	0x0000 ;_space+606
0x5FAF	0x0000 ;_space+608
0x5FB1	0x0000 ;_space+610
0x5FB3	0x0000 ;_space+612
0x5FB5	0x0000 ;_space+614
0x5FB7	0x0000 ;_space+616
0x5FB9	0x0000 ;_space+618
0x5FBB	0x0000 ;_space+620
0x5FBD	0x0000 ;_space+622
0x5FBF	0x0000 ;_space+624
0x5FC1	0x0000 ;_space+626
0x5FC3	0x0000 ;_space+628
0x5FC5	0x0000 ;_space+630
0x5FC7	0x0000 ;_space+632
0x5FC9	0x0000 ;_space+634
0x5FCB	0x0000 ;_space+636
0x5FCD	0x0000 ;_space+638
0x5FCF	0x0000 ;_space+640
0x5FD1	0x0000 ;_space+642
0x5FD3	0x0000 ;_space+644
0x5FD5	0x0000 ;_space+646
0x5FD7	0x0000 ;_space+648
0x5FD9	0x0000 ;_space+650
0x5FDB	0x0000 ;_space+652
0x5FDD	0x0000 ;_space+654
0x5FDF	0x0000 ;_space+656
0x5FE1	0x0000 ;_space+658
0x5FE3	0x0000 ;_space+660
0x5FE5	0x0000 ;_space+662
0x5FE7	0x0000 ;_space+664
0x5FE9	0x0000 ;_space+666
0x5FEB	0x0000 ;_space+668
0x5FED	0x0000 ;_space+670
0x5FEF	0x0000 ;_space+672
0x5FF1	0x0000 ;_space+674
0x5FF3	0x0000 ;_space+676
0x5FF5	0x0000 ;_space+678
0x5FF7	0x0000 ;_space+680
0x5FF9	0x0000 ;_space+682
0x5FFB	0x0000 ;_space+684
0x5FFD	0x0000 ;_space+686
0x5FFF	0x0000 ;_space+688
0x6001	0x0000 ;_space+690
0x6003	0x0000 ;_space+692
0x6005	0x0000 ;_space+694
0x6007	0x0000 ;_space+696
0x6009	0x0000 ;_space+698
0x600B	0x0000 ;_space+700
0x600D	0x0000 ;_space+702
0x600F	0x0000 ;_space+704
0x6011	0x0000 ;_space+706
0x6013	0x0000 ;_space+708
0x6015	0x0000 ;_space+710
0x6017	0x0000 ;_space+712
0x6019	0x0000 ;_space+714
0x601B	0x0000 ;_space+716
0x601D	0x0000 ;_space+718
0x601F	0x0000 ;_space+720
0x6021	0x0000 ;_space+722
0x6023	0x0000 ;_space+724
0x6025	0x0000 ;_space+726
0x6027	0x0000 ;_space+728
0x6029	0x0000 ;_space+730
0x602B	0x0000 ;_space+732
0x602D	0x0000 ;_space+734
0x602F	0x0000 ;_space+736
0x6031	0x0000 ;_space+738
0x6033	0x0000 ;_space+740
0x6035	0x0000 ;_space+742
0x6037	0x0000 ;_space+744
0x6039	0x0000 ;_space+746
0x603B	0x0000 ;_space+748
0x603D	0x0000 ;_space+750
0x603F	0x0000 ;_space+752
0x6041	0x0000 ;_space+754
0x6043	0x0000 ;_space+756
0x6045	0x0000 ;_space+758
0x6047	0x0000 ;_space+760
0x6049	0x0000 ;_space+762
0x604B	0x0000 ;_space+764
0x604D	0x0000 ;_space+766
0x604F	0x0000 ;_space+768
0x6051	0x0000 ;_space+770
0x6053	0x0000 ;_space+772
0x6055	0x0000 ;_space+774
0x6057	0x0000 ;_space+776
0x6059	0x0000 ;_space+778
0x605B	0x0000 ;_space+780
0x605D	0x0000 ;_space+782
0x605F	0x0000 ;_space+784
0x6061	0x0000 ;_space+786
0x6063	0x0000 ;_space+788
0x6065	0x0000 ;_space+790
0x6067	0x0000 ;_space+792
0x6069	0x0000 ;_space+794
0x606B	0x0000 ;_space+796
0x606D	0x0000 ;_space+798
0x606F	0x0000 ;_space+800
0x6071	0x0000 ;_space+802
0x6073	0x0000 ;_space+804
0x6075	0x0000 ;_space+806
0x6077	0x0000 ;_space+808
0x6079	0x0000 ;_space+810
0x607B	0x0000 ;_space+812
0x607D	0x0000 ;_space+814
0x607F	0x0000 ;_space+816
0x6081	0x0000 ;_space+818
0x6083	0x0000 ;_space+820
0x6085	0x0000 ;_space+822
0x6087	0x0000 ;_space+824
0x6089	0x0000 ;_space+826
0x608B	0x0000 ;_space+828
0x608D	0x0000 ;_space+830
0x608F	0x0000 ;_space+832
0x6091	0x0000 ;_space+834
0x6093	0x0000 ;_space+836
0x6095	0x0000 ;_space+838
0x6097	0x0000 ;_space+840
0x6099	0x0000 ;_space+842
0x609B	0x0000 ;_space+844
0x609D	0x0000 ;_space+846
0x609F	0x0000 ;_space+848
0x60A1	0x0000 ;_space+850
0x60A3	0x0000 ;_space+852
0x60A5	0x0000 ;_space+854
0x60A7	0x0000 ;_space+856
0x60A9	0x0000 ;_space+858
0x60AB	0x0000 ;_space+860
0x60AD	0x0000 ;_space+862
0x60AF	0x0000 ;_space+864
0x60B1	0x0000 ;_space+866
0x60B3	0x0000 ;_space+868
0x60B5	0x0000 ;_space+870
0x60B7	0x0000 ;_space+872
0x60B9	0x0000 ;_space+874
0x60BB	0x0000 ;_space+876
0x60BD	0x0000 ;_space+878
0x60BF	0x0000 ;_space+880
0x60C1	0x0000 ;_space+882
0x60C3	0x0000 ;_space+884
0x60C5	0x0000 ;_space+886
0x60C7	0x0000 ;_space+888
0x60C9	0x0000 ;_space+890
0x60CB	0x0000 ;_space+892
0x60CD	0x0000 ;_space+894
0x60CF	0x0000 ;_space+896
0x60D1	0x0000 ;_space+898
0x60D3	0x0000 ;_space+900
0x60D5	0x0000 ;_space+902
0x60D7	0x0000 ;_space+904
0x60D9	0x0000 ;_space+906
0x60DB	0x0000 ;_space+908
0x60DD	0x0000 ;_space+910
0x60DF	0x0000 ;_space+912
0x60E1	0x0000 ;_space+914
0x60E3	0x0000 ;_space+916
0x60E5	0x0000 ;_space+918
0x60E7	0x0000 ;_space+920
0x60E9	0x0000 ;_space+922
0x60EB	0x0000 ;_space+924
0x60ED	0x0000 ;_space+926
0x60EF	0x0000 ;_space+928
0x60F1	0x0000 ;_space+930
0x60F3	0x0000 ;_space+932
0x60F5	0x0000 ;_space+934
0x60F7	0x0000 ;_space+936
0x60F9	0x0000 ;_space+938
0x60FB	0x0000 ;_space+940
0x60FD	0x0000 ;_space+942
0x60FF	0x0000 ;_space+944
0x6101	0x0000 ;_space+946
0x6103	0x0000 ;_space+948
0x6105	0x0000 ;_space+950
0x6107	0x0000 ;_space+952
0x6109	0x0000 ;_space+954
0x610B	0x0000 ;_space+956
0x610D	0x0000 ;_space+958
0x610F	0x0000 ;_space+960
0x6111	0x0000 ;_space+962
0x6113	0x0000 ;_space+964
0x6115	0x0000 ;_space+966
0x6117	0x0000 ;_space+968
0x6119	0x0000 ;_space+970
0x611B	0x0000 ;_space+972
0x611D	0x0000 ;_space+974
0x611F	0x0000 ;_space+976
0x6121	0x0000 ;_space+978
0x6123	0x0000 ;_space+980
0x6125	0x0000 ;_space+982
0x6127	0x0000 ;_space+984
0x6129	0x0000 ;_space+986
0x612B	0x0000 ;_space+988
0x612D	0x0000 ;_space+990
0x612F	0x0000 ;_space+992
0x6131	0x0000 ;_space+994
0x6133	0x0000 ;_space+996
0x6135	0x0000 ;_space+998
0x6137	0x0000 ;_space+1000
0x6139	0x0000 ;_space+1002
0x613B	0x0000 ;_space+1004
0x613D	0x0000 ;_space+1006
0x613F	0x0000 ;_space+1008
0x6141	0x0000 ;_space+1010
0x6143	0x0000 ;_space+1012
0x6145	0x0000 ;_space+1014
0x6147	0x0000 ;_space+1016
0x6149	0x0000 ;_space+1018
0x614B	0x0000 ;_space+1020
0x614D	0x0000 ;_space+1022
; end of _space
;__Lib_GlcdFonts.c,612 :: _font5x7
0x614F	0x0000 ;_font5x7+0
0x6151	0x0000 ;_font5x7+2
0x6153	0x0000 ;_font5x7+4
0x6155	0x5F00 ;_font5x7+6
0x6157	0x0000 ;_font5x7+8
0x6159	0x0700 ;_font5x7+10
0x615B	0x0700 ;_font5x7+12
0x615D	0x1400 ;_font5x7+14
0x615F	0x147F ;_font5x7+16
0x6161	0x147F ;_font5x7+18
0x6163	0x2A24 ;_font5x7+20
0x6165	0x2A7F ;_font5x7+22
0x6167	0x2312 ;_font5x7+24
0x6169	0x0813 ;_font5x7+26
0x616B	0x6264 ;_font5x7+28
0x616D	0x4936 ;_font5x7+30
0x616F	0x2255 ;_font5x7+32
0x6171	0x0050 ;_font5x7+34
0x6173	0x0305 ;_font5x7+36
0x6175	0x0000 ;_font5x7+38
0x6177	0x1C00 ;_font5x7+40
0x6179	0x4122 ;_font5x7+42
0x617B	0x0000 ;_font5x7+44
0x617D	0x2241 ;_font5x7+46
0x617F	0x001C ;_font5x7+48
0x6181	0x2A08 ;_font5x7+50
0x6183	0x2A1C ;_font5x7+52
0x6185	0x0808 ;_font5x7+54
0x6187	0x3E08 ;_font5x7+56
0x6189	0x0808 ;_font5x7+58
0x618B	0x5000 ;_font5x7+60
0x618D	0x0030 ;_font5x7+62
0x618F	0x0800 ;_font5x7+64
0x6191	0x0808 ;_font5x7+66
0x6193	0x0808 ;_font5x7+68
0x6195	0x3000 ;_font5x7+70
0x6197	0x0030 ;_font5x7+72
0x6199	0x2000 ;_font5x7+74
0x619B	0x0810 ;_font5x7+76
0x619D	0x0204 ;_font5x7+78
0x619F	0x513E ;_font5x7+80
0x61A1	0x4549 ;_font5x7+82
0x61A3	0x003E ;_font5x7+84
0x61A5	0x7F42 ;_font5x7+86
0x61A7	0x0040 ;_font5x7+88
0x61A9	0x6142 ;_font5x7+90
0x61AB	0x4951 ;_font5x7+92
0x61AD	0x2146 ;_font5x7+94
0x61AF	0x4541 ;_font5x7+96
0x61B1	0x314B ;_font5x7+98
0x61B3	0x1418 ;_font5x7+100
0x61B5	0x7F12 ;_font5x7+102
0x61B7	0x2710 ;_font5x7+104
0x61B9	0x4545 ;_font5x7+106
0x61BB	0x3945 ;_font5x7+108
0x61BD	0x4A3C ;_font5x7+110
0x61BF	0x4949 ;_font5x7+112
0x61C1	0x0130 ;_font5x7+114
0x61C3	0x0971 ;_font5x7+116
0x61C5	0x0305 ;_font5x7+118
0x61C7	0x4936 ;_font5x7+120
0x61C9	0x4949 ;_font5x7+122
0x61CB	0x0636 ;_font5x7+124
0x61CD	0x4949 ;_font5x7+126
0x61CF	0x1E29 ;_font5x7+128
0x61D1	0x3600 ;_font5x7+130
0x61D3	0x0036 ;_font5x7+132
0x61D5	0x0000 ;_font5x7+134
0x61D7	0x3656 ;_font5x7+136
0x61D9	0x0000 ;_font5x7+138
0x61DB	0x0800 ;_font5x7+140
0x61DD	0x2214 ;_font5x7+142
0x61DF	0x1441 ;_font5x7+144
0x61E1	0x1414 ;_font5x7+146
0x61E3	0x1414 ;_font5x7+148
0x61E5	0x2241 ;_font5x7+150
0x61E7	0x0814 ;_font5x7+152
0x61E9	0x0200 ;_font5x7+154
0x61EB	0x5101 ;_font5x7+156
0x61ED	0x0609 ;_font5x7+158
0x61EF	0x4932 ;_font5x7+160
0x61F1	0x4179 ;_font5x7+162
0x61F3	0x7E3E ;_font5x7+164
0x61F5	0x1111 ;_font5x7+166
0x61F7	0x7E11 ;_font5x7+168
0x61F9	0x497F ;_font5x7+170
0x61FB	0x4949 ;_font5x7+172
0x61FD	0x3E36 ;_font5x7+174
0x61FF	0x4141 ;_font5x7+176
0x6201	0x2241 ;_font5x7+178
0x6203	0x417F ;_font5x7+180
0x6205	0x2241 ;_font5x7+182
0x6207	0x7F1C ;_font5x7+184
0x6209	0x4949 ;_font5x7+186
0x620B	0x4149 ;_font5x7+188
0x620D	0x097F ;_font5x7+190
0x620F	0x0109 ;_font5x7+192
0x6211	0x3E01 ;_font5x7+194
0x6213	0x4141 ;_font5x7+196
0x6215	0x3251 ;_font5x7+198
0x6217	0x087F ;_font5x7+200
0x6219	0x0808 ;_font5x7+202
0x621B	0x007F ;_font5x7+204
0x621D	0x7F41 ;_font5x7+206
0x621F	0x0041 ;_font5x7+208
0x6221	0x4020 ;_font5x7+210
0x6223	0x3F41 ;_font5x7+212
0x6225	0x7F01 ;_font5x7+214
0x6227	0x1408 ;_font5x7+216
0x6229	0x4122 ;_font5x7+218
0x622B	0x407F ;_font5x7+220
0x622D	0x4040 ;_font5x7+222
0x622F	0x7F40 ;_font5x7+224
0x6231	0x0402 ;_font5x7+226
0x6233	0x7F02 ;_font5x7+228
0x6235	0x047F ;_font5x7+230
0x6237	0x1008 ;_font5x7+232
0x6239	0x3E7F ;_font5x7+234
0x623B	0x4141 ;_font5x7+236
0x623D	0x3E41 ;_font5x7+238
0x623F	0x097F ;_font5x7+240
0x6241	0x0909 ;_font5x7+242
0x6243	0x3E06 ;_font5x7+244
0x6245	0x5141 ;_font5x7+246
0x6247	0x5E21 ;_font5x7+248
0x6249	0x097F ;_font5x7+250
0x624B	0x2919 ;_font5x7+252
0x624D	0x4646 ;_font5x7+254
0x624F	0x4949 ;_font5x7+256
0x6251	0x3149 ;_font5x7+258
0x6253	0x0101 ;_font5x7+260
0x6255	0x017F ;_font5x7+262
0x6257	0x3F01 ;_font5x7+264
0x6259	0x4040 ;_font5x7+266
0x625B	0x3F40 ;_font5x7+268
0x625D	0x201F ;_font5x7+270
0x625F	0x2040 ;_font5x7+272
0x6261	0x7F1F ;_font5x7+274
0x6263	0x1820 ;_font5x7+276
0x6265	0x7F20 ;_font5x7+278
0x6267	0x1463 ;_font5x7+280
0x6269	0x1408 ;_font5x7+282
0x626B	0x0363 ;_font5x7+284
0x626D	0x7804 ;_font5x7+286
0x626F	0x0304 ;_font5x7+288
0x6271	0x5161 ;_font5x7+290
0x6273	0x4549 ;_font5x7+292
0x6275	0x0043 ;_font5x7+294
0x6277	0x7F00 ;_font5x7+296
0x6279	0x4141 ;_font5x7+298
0x627B	0x0402 ;_font5x7+300
0x627D	0x1008 ;_font5x7+302
0x627F	0x4120 ;_font5x7+304
0x6281	0x7F41 ;_font5x7+306
0x6283	0x0000 ;_font5x7+308
0x6285	0x0204 ;_font5x7+310
0x6287	0x0201 ;_font5x7+312
0x6289	0x4004 ;_font5x7+314
0x628B	0x4040 ;_font5x7+316
0x628D	0x4040 ;_font5x7+318
0x628F	0x0100 ;_font5x7+320
0x6291	0x0402 ;_font5x7+322
0x6293	0x2000 ;_font5x7+324
0x6295	0x5454 ;_font5x7+326
0x6297	0x7854 ;_font5x7+328
0x6299	0x487F ;_font5x7+330
0x629B	0x4444 ;_font5x7+332
0x629D	0x3838 ;_font5x7+334
0x629F	0x4444 ;_font5x7+336
0x62A1	0x2044 ;_font5x7+338
0x62A3	0x4438 ;_font5x7+340
0x62A5	0x4844 ;_font5x7+342
0x62A7	0x387F ;_font5x7+344
0x62A9	0x5454 ;_font5x7+346
0x62AB	0x1854 ;_font5x7+348
0x62AD	0x7E08 ;_font5x7+350
0x62AF	0x0109 ;_font5x7+352
0x62B1	0x0802 ;_font5x7+354
0x62B3	0x5414 ;_font5x7+356
0x62B5	0x3C54 ;_font5x7+358
0x62B7	0x087F ;_font5x7+360
0x62B9	0x0404 ;_font5x7+362
0x62BB	0x0078 ;_font5x7+364
0x62BD	0x7D44 ;_font5x7+366
0x62BF	0x0040 ;_font5x7+368
0x62C1	0x4020 ;_font5x7+370
0x62C3	0x3D44 ;_font5x7+372
0x62C5	0x0000 ;_font5x7+374
0x62C7	0x107F ;_font5x7+376
0x62C9	0x4428 ;_font5x7+378
0x62CB	0x4100 ;_font5x7+380
0x62CD	0x407F ;_font5x7+382
0x62CF	0x7C00 ;_font5x7+384
0x62D1	0x1804 ;_font5x7+386
0x62D3	0x7804 ;_font5x7+388
0x62D5	0x087C ;_font5x7+390
0x62D7	0x0404 ;_font5x7+392
0x62D9	0x3878 ;_font5x7+394
0x62DB	0x4444 ;_font5x7+396
0x62DD	0x3844 ;_font5x7+398
0x62DF	0x147C ;_font5x7+400
0x62E1	0x1414 ;_font5x7+402
0x62E3	0x0808 ;_font5x7+404
0x62E5	0x1414 ;_font5x7+406
0x62E7	0x7C18 ;_font5x7+408
0x62E9	0x087C ;_font5x7+410
0x62EB	0x0404 ;_font5x7+412
0x62ED	0x4808 ;_font5x7+414
0x62EF	0x5454 ;_font5x7+416
0x62F1	0x2054 ;_font5x7+418
0x62F3	0x3F04 ;_font5x7+420
0x62F5	0x4044 ;_font5x7+422
0x62F7	0x3C20 ;_font5x7+424
0x62F9	0x4040 ;_font5x7+426
0x62FB	0x7C20 ;_font5x7+428
0x62FD	0x201C ;_font5x7+430
0x62FF	0x2040 ;_font5x7+432
0x6301	0x3C1C ;_font5x7+434
0x6303	0x3040 ;_font5x7+436
0x6305	0x3C40 ;_font5x7+438
0x6307	0x2844 ;_font5x7+440
0x6309	0x2810 ;_font5x7+442
0x630B	0x0C44 ;_font5x7+444
0x630D	0x5050 ;_font5x7+446
0x630F	0x3C50 ;_font5x7+448
0x6311	0x6444 ;_font5x7+450
0x6313	0x4C54 ;_font5x7+452
0x6315	0x0044 ;_font5x7+454
0x6317	0x3608 ;_font5x7+456
0x6319	0x0041 ;_font5x7+458
0x631B	0x0000 ;_font5x7+460
0x631D	0x007F ;_font5x7+462
0x631F	0x0000 ;_font5x7+464
0x6321	0x3641 ;_font5x7+466
0x6323	0x0008 ;_font5x7+468
0x6325	0x0808 ;_font5x7+470
0x6327	0x1C2A ;_font5x7+472
0x6329	0x0808 ;_font5x7+474
0x632B	0x2A1C ;_font5x7+476
0x632D	0x0808 ;_font5x7+478
; end of _font5x7
;glcd.c,0 :: ?ICS_flag
0x632F	0x53 ;?ICS_flag+0
; end of ?ICS_flag
;glcd.c,0 :: ?ICS_flagTime
0x6330	0x53 ;?ICS_flagTime+0
; end of ?ICS_flagTime
;glcd.c,0 :: ?ICS?lstr26_glcd
0x6331	0x0039 ;?ICS?lstr26_glcd+0
; end of ?ICS?lstr26_glcd
;glcd.c,0 :: ?ICS?lstr23_glcd
0x6333	0x0036 ;?ICS?lstr23_glcd+0
; end of ?ICS?lstr23_glcd
;glcd.c,0 :: ?ICS?lstr24_glcd
0x6335	0x0037 ;?ICS?lstr24_glcd+0
; end of ?ICS?lstr24_glcd
;glcd.c,0 :: ?ICS?lstr25_glcd
0x6337	0x0038 ;?ICS?lstr25_glcd+0
; end of ?ICS?lstr25_glcd
;glcd.c,0 :: ?ICS_flag_end
0x6339	0x30 ;?ICS_flag_end+0
; end of ?ICS_flag_end
;glcd.c,0 :: ?ICS?lstr29_glcd
0x633A	0x4350 ;?ICS?lstr29_glcd+0
0x633C	0x5720 ;?ICS?lstr29_glcd+2
0x633E	0x4E49 ;?ICS?lstr29_glcd+4
0x6340	0x2120 ;?ICS?lstr29_glcd+6
0x6342	0x0021 ;?ICS?lstr29_glcd+8
; end of ?ICS?lstr29_glcd
;glcd.c,0 :: ?ICS?lstr30_glcd
0x6344	0x6C50 ;?ICS?lstr30_glcd+0
0x6346	0x7961 ;?ICS?lstr30_glcd+2
0x6348	0x7265 ;?ICS?lstr30_glcd+4
0x634A	0x5720 ;?ICS?lstr30_glcd+6
0x634C	0x4E49 ;?ICS?lstr30_glcd+8
0x634E	0x2120 ;?ICS?lstr30_glcd+10
0x6350	0x0021 ;?ICS?lstr30_glcd+12
; end of ?ICS?lstr30_glcd
;glcd.c,0 :: ?ICS?lstr31_glcd
0x6352	0x2020 ;?ICS?lstr31_glcd+0
0x6354	0x2020 ;?ICS?lstr31_glcd+2
0x6356	0x00 ;?ICS?lstr31_glcd+4
; end of ?ICS?lstr31_glcd
;glcd.c,0 :: ?ICS?lstr28_glcd
0x6357	0x7754 ;?ICS?lstr28_glcd+0
0x6359	0x206F ;?ICS?lstr28_glcd+2
0x635B	0x6C70 ;?ICS?lstr28_glcd+4
0x635D	0x7961 ;?ICS?lstr28_glcd+6
0x635F	0x7265 ;?ICS?lstr28_glcd+8
0x6361	0x0073 ;?ICS?lstr28_glcd+10
; end of ?ICS?lstr28_glcd
;glcd.c,0 :: ?ICS_estado
0x6363	0x00 ;?ICS_estado+0
; end of ?ICS_estado
;glcd.c,0 :: ?ICS_y
0x6364	0x0000 ;?ICS_y+0
; end of ?ICS_y
;glcd.c,0 :: ?ICS?lstr27_glcd
0x6366	0x6E4F ;?ICS?lstr27_glcd+0
0x6368	0x2065 ;?ICS?lstr27_glcd+2
0x636A	0x6C70 ;?ICS?lstr27_glcd+4
0x636C	0x7961 ;?ICS?lstr27_glcd+6
0x636E	0x7265 ;?ICS?lstr27_glcd+8
0x6370	0x00 ;?ICS?lstr27_glcd+10
; end of ?ICS?lstr27_glcd
;glcd.c,0 :: ?ICS?lstr16_glcd
0x6371	0x0039 ;?ICS?lstr16_glcd+0
; end of ?ICS?lstr16_glcd
;glcd.c,0 :: ?ICS?lstr3_glcd
0x6373	0x6E41 ;?ICS?lstr3_glcd+0
0x6375	0x7264 ;?ICS?lstr3_glcd+2
0x6377	0x7965 ;?ICS?lstr3_glcd+4
0x6379	0x5320 ;?ICS?lstr3_glcd+6
0x637B	0x7165 ;?ICS?lstr3_glcd+8
0x637D	0x6575 ;?ICS?lstr3_glcd+10
0x637F	0x7269 ;?ICS?lstr3_glcd+12
0x6381	0x0061 ;?ICS?lstr3_glcd+14
; end of ?ICS?lstr3_glcd
;glcd.c,0 :: ?ICS?lstr4_glcd
0x6383	0x7245 ;?ICS?lstr4_glcd+0
0x6385	0x6369 ;?ICS?lstr4_glcd+2
0x6387	0x206B ;?ICS?lstr4_glcd+4
0x6389	0x7551 ;?ICS?lstr4_glcd+6
0x638B	0x7269 ;?ICS?lstr4_glcd+8
0x638D	0x736F ;?ICS?lstr4_glcd+10
0x638F	0x00 ;?ICS?lstr4_glcd+12
; end of ?ICS?lstr4_glcd
;glcd.c,0 :: ?ICS?lstr15_glcd
0x6390	0x0038 ;?ICS?lstr15_glcd+0
; end of ?ICS?lstr15_glcd
;glcd.c,0 :: ?ICS?lstr12_glcd
0x6392	0x0035 ;?ICS?lstr12_glcd+0
; end of ?ICS?lstr12_glcd
;glcd.c,0 :: ?ICS?lstr13_glcd
0x6394	0x0036 ;?ICS?lstr13_glcd+0
; end of ?ICS?lstr13_glcd
;glcd.c,0 :: ?ICS?lstr14_glcd
0x6396	0x0037 ;?ICS?lstr14_glcd+0
; end of ?ICS?lstr14_glcd
;glcd.c,0 :: ?ICS?lstr5_glcd
0x6398	0x7250 ;?ICS?lstr5_glcd+0
0x639A	0x666F ;?ICS?lstr5_glcd+2
0x639C	0x202E ;?ICS?lstr5_glcd+4
0x639E	0x7245 ;?ICS?lstr5_glcd+6
0x63A0	0x656E ;?ICS?lstr5_glcd+8
0x63A2	0x7473 ;?ICS?lstr5_glcd+10
0x63A4	0x206F ;?ICS?lstr5_glcd+12
0x63A6	0x6952 ;?ICS?lstr5_glcd+14
0x63A8	0x6576 ;?ICS?lstr5_glcd+16
0x63AA	0x6172 ;?ICS?lstr5_glcd+18
0x63AC	0x00 ;?ICS?lstr5_glcd+20
; end of ?ICS?lstr5_glcd
;glcd.c,0 :: ?ICS?lstr20_glcd
0x63AD	0x0033 ;?ICS?lstr20_glcd+0
; end of ?ICS?lstr20_glcd
;glcd.c,0 :: ?ICS?lstr21_glcd
0x63AF	0x0034 ;?ICS?lstr21_glcd+0
; end of ?ICS?lstr21_glcd
;glcd.c,0 :: ?ICS?lstr22_glcd
0x63B1	0x0035 ;?ICS?lstr22_glcd+0
; end of ?ICS?lstr22_glcd
;glcd.c,0 :: ?ICS?lstr19_glcd
0x63B3	0x0032 ;?ICS?lstr19_glcd+0
; end of ?ICS?lstr19_glcd
;glcd.c,0 :: ?ICS?lstr6_glcd
0x63B5	0x6154 ;?ICS?lstr6_glcd+0
0x63B7	0x6C6C ;?ICS?lstr6_glcd+2
0x63B9	0x7265 ;?ICS?lstr6_glcd+4
0x63BB	0x6420 ;?ICS?lstr6_glcd+6
0x63BD	0x2065 ;?ICS?lstr6_glcd+8
0x63BF	0x6953 ;?ICS?lstr6_glcd+10
0x63C1	0x7473 ;?ICS?lstr6_glcd+12
0x63C3	0x202E ;?ICS?lstr6_glcd+14
0x63C5	0x6D45 ;?ICS?lstr6_glcd+16
0x63C7	0x6562 ;?ICS?lstr6_glcd+18
0x63C9	0x6962 ;?ICS?lstr6_glcd+20
0x63CB	0x6F64 ;?ICS?lstr6_glcd+22
0x63CD	0x0073 ;?ICS?lstr6_glcd+24
; end of ?ICS?lstr6_glcd
;glcd.c,0 :: ?ICS?lstr17_glcd
0x63CF	0x0030 ;?ICS?lstr17_glcd+0
; end of ?ICS?lstr17_glcd
;glcd.c,0 :: ?ICS?lstr18_glcd
0x63D1	0x0031 ;?ICS?lstr18_glcd+0
; end of ?ICS?lstr18_glcd
;__Lib_Glcd.c,0 :: ?ICS__Lib_Glcd_FontInitialized_Adv
0x63D3	0x00 ;?ICS__Lib_Glcd_FontInitialized_Adv+0
; end of ?ICS__Lib_Glcd_FontInitialized_Adv
;glcd.c,0 :: ?ICS?lstr36_glcd
0x63D4	0x4F59 ;?ICS?lstr36_glcd+0
0x63D6	0x2055 ;?ICS?lstr36_glcd+2
0x63D8	0x4957 ;?ICS?lstr36_glcd+4
0x63DA	0x204E ;?ICS?lstr36_glcd+6
0x63DC	0x2121 ;?ICS?lstr36_glcd+8
0x63DE	0x00 ;?ICS?lstr36_glcd+10
; end of ?ICS?lstr36_glcd
;glcd.c,0 :: ?ICS?lstr37_glcd
0x63DF	0x4D45 ;?ICS?lstr37_glcd+0
0x63E1	0x4150 ;?ICS?lstr37_glcd+2
0x63E3	0x4554 ;?ICS?lstr37_glcd+4
0x63E5	0x2120 ;?ICS?lstr37_glcd+6
0x63E7	0x0021 ;?ICS?lstr37_glcd+8
; end of ?ICS?lstr37_glcd
;glcd.c,0 :: ?ICS?lstr35_glcd
0x63E9	0x4F59 ;?ICS?lstr35_glcd+0
0x63EB	0x2055 ;?ICS?lstr35_glcd+2
0x63ED	0x4F4C ;?ICS?lstr35_glcd+4
0x63EF	0x4553 ;?ICS?lstr35_glcd+6
0x63F1	0x2120 ;?ICS?lstr35_glcd+8
0x63F3	0x0021 ;?ICS?lstr35_glcd+10
; end of ?ICS?lstr35_glcd
;glcd.c,0 :: ?ICS?lstr32_glcd
0x63F5	0x3250 ;?ICS?lstr32_glcd+0
0x63F7	0x00 ;?ICS?lstr32_glcd+2
; end of ?ICS?lstr32_glcd
;glcd.c,0 :: ?ICS?lstr33_glcd
0x63F8	0x2020 ;?ICS?lstr33_glcd+0
0x63FA	0x2020 ;?ICS?lstr33_glcd+2
0x63FC	0x00 ;?ICS?lstr33_glcd+4
; end of ?ICS?lstr33_glcd
;glcd.c,0 :: ?ICS?lstr34_glcd
0x63FD	0x3150 ;?ICS?lstr34_glcd+0
0x63FF	0x00 ;?ICS?lstr34_glcd+2
; end of ?ICS?lstr34_glcd
;__Lib_ADC_A_D.c,0 :: ?ICS_vref_mask
0x6400	0x30 ;?ICS_vref_mask+0
; end of ?ICS_vref_mask
;glcd.c,0 :: ?ICS_count1
0x6401	0x00 ;?ICS_count1+0
; end of ?ICS_count1
;glcd.c,0 :: ?ICS_lineTime
0x6402	0x00 ;?ICS_lineTime+0
; end of ?ICS_lineTime
;glcd.c,0 :: ?ICS?lstr1_glcd
0x6403	0x6E4F ;?ICS?lstr1_glcd+0
0x6405	0x2065 ;?ICS?lstr1_glcd+2
0x6407	0x6C70 ;?ICS?lstr1_glcd+4
0x6409	0x7961 ;?ICS?lstr1_glcd+6
0x640B	0x7265 ;?ICS?lstr1_glcd+8
0x640D	0x00 ;?ICS?lstr1_glcd+10
; end of ?ICS?lstr1_glcd
;glcd.c,0 :: ?ICS_turno_player
0x640E	0x00 ;?ICS_turno_player+0
; end of ?ICS_turno_player
;glcd.c,0 :: ?ICS_score
0x640F	0x0000 ;?ICS_score+0
; end of ?ICS_score
;glcd.c,0 :: ?ICS?lstr7_glcd
0x6411	0x0030 ;?ICS?lstr7_glcd+0
; end of ?ICS?lstr7_glcd
;glcd.c,0 :: ?ICS?lstr9_glcd
0x6413	0x0032 ;?ICS?lstr9_glcd+0
; end of ?ICS?lstr9_glcd
;glcd.c,0 :: ?ICS?lstr8_glcd
0x6415	0x0031 ;?ICS?lstr8_glcd+0
; end of ?ICS?lstr8_glcd
;glcd.c,0 :: ?ICS_timeCount
0x6417	0x00 ;?ICS_timeCount+0
; end of ?ICS_timeCount
;glcd.c,0 :: ?ICS?lstr2_glcd
0x6418	0x7754 ;?ICS?lstr2_glcd+0
0x641A	0x206F ;?ICS?lstr2_glcd+2
0x641C	0x6C70 ;?ICS?lstr2_glcd+4
0x641E	0x7961 ;?ICS?lstr2_glcd+6
0x6420	0x7265 ;?ICS?lstr2_glcd+8
0x6422	0x0073 ;?ICS?lstr2_glcd+10
; end of ?ICS?lstr2_glcd
;glcd.c,0 :: ?ICS?lstr11_glcd
0x6424	0x0034 ;?ICS?lstr11_glcd+0
; end of ?ICS?lstr11_glcd
;glcd.c,0 :: ?ICS_count
0x6426	0x00 ;?ICS_count+0
; end of ?ICS_count
;glcd.c,0 :: ?ICS?lstr10_glcd
0x6427	0x0033 ;?ICS?lstr10_glcd+0
; end of ?ICS?lstr10_glcd
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x001C      [12]    _Delay_10us
0x0028      [10]    __Lib_Glcd_Strobe
0x0032       [6]    _Delay_1us
0x0038      [78]    _Glcd_Read_Data
0x0086      [14]    _Glcd_Write_Data
0x0094      [28]    _Glcd_Set_Side
0x00B0      [16]    _Glcd_Set_Page
0x00C0      [38]    _Glcd_Set_X
0x00E6     [180]    _Glcd_Dot
0x019A      [24]    _____DoIFC
0x01B2     [210]    _Glcd_Set_Font_Adv
0x0284      [80]    _Mul_16X16_U
0x02D4     [180]    __Lib_Glcd__Glcd_getHeader
0x0388       [8]    _FIXSIGN32
0x0390      [94]    _draw_player
0x03EE      [14]    _RES032
0x03FC      [26]    _SETFUN32
0x0416      [18]    __Lib_Glcd_Glcd_Move_Cursor
0x0428     [114]    _NRM3232
0x049A     [206]    _Compare_Double
0x0568     [920]    __Lib_Glcd__Glcd_Write_Char_AdvE
0x0900     [534]    __Lib_Glcd__Glcd_Write_Char_Adv
0x0B16     [312]    _Glcd_Write_Char
0x0C4E      [14]    _UART1_Write
0x0C5C      [28]    _SETIOV3224
0x0C78      [60]    _init
0x0CB4      [94]    _borrar_player
0x0D12      [10]    _UART1_Tx_Idle
0x0D1C     [676]    _move_players
0x0FC0      [86]    _fabs
0x1016      [80]    _check_coll
0x1066     [136]    _Glcd_Write_Text_Adv
0x10EE      [52]    _UART1_Write_Text
0x1122      [12]    _Delay_22us
0x112E     [162]    _Glcd_Image
0x11D0     [100]    _Glcd_Write_Text
0x1234     [210]    _double2int
0x1306    [2224]    _draw_aste
0x1BB6      [66]    _int2double
0x1BF8      [92]    _Glcd_Init
0x1C54      [16]    ___CC2DW
0x1C64      [40]    _ADC_Init
0x1C8C      [88]    _UART1_Init
0x1CE4      [96]    _Glcd_Fill
0x1D44     [158]    _first_CoverP
0x1DE2      [18]    _UART1_Read
0x1DF4      [60]    _serial_pack_data
0x1E30    [2692]    _IA_player
0x28B4      [10]    _UART1_Data_Ready
0x28BE     [342]    _draw_score_1
0x2A14     [342]    _draw_score_2
0x2B6A    [7114]    _move_aste
0x4734      [66]    _ADC_Read
0x4776      [68]    _port_space
0x47BA      [26]    _send_pack_data
0x47D4      [20]    _init_counts
0x47E8      [20]    _game_over
0x47FC      [38]    _draw_lineTime
0x4822     [312]    _init_aste
0x495A    [1602]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    SPI1_Write_tmp_L0
0x0000       [1]    UART1_Init_tmp_L0
0x0000       [1]    R0
0x0001       [1]    UART1_Read___tmp_UART1_Read_L0
0x0001       [1]    ispunct_rslt_L0
0x0001       [1]    __Lib_Conversions_Adjust_Hex_tmp_L0
0x0001       [1]    __Lib_USB_genHID_?FLOC____Lib_USB_genHID_USB_Handle_BusyT1
0x0001       [1]    R1
0x0001       [1]    __Lib_PS2_Wait_Falling_nsample_L0
0x0002       [1]    __Lib_USB_genHID_USB_CtrlTrf_Rx_Service_byteToRead_L0
0x0002       [2]    memcpy_dd_L0
0x0002       [1]    R2
0x0002       [2]    memchr_s_L0
0x0002       [2]    strlen_cp_L0
0x0002       [2]    memset_pp_L0
0x0003       [2]    memmove_tt_L0
0x0003       [2]    __Lib_USB_genHID_USB_CtrlTrf_Tx_Service_byteToSend_L0
0x0003       [1]    MM_Init_i_L0
0x0003       [2]    MM_TotalFreeMemSize_Tot_L0
0x0003       [1]    __Lib_USB_genHID_USB_CtrlTrf_Rx_Service_i_L0
0x0003       [2]    Ltrim_original_L0
0x0003       [1]    R3
0x0004       [2]    frexp_pom_L0
0x0004       [2]    strncat_cp_L0
0x0004       [2]    __Lib_USB_genHID_USB_Get_Status_Handler_p_L2
0x0004       [2]    strcpy_cp_L0
0x0004       [2]    __Lib_MemManager_MM_GetMemAlign_P_L0
0x0004       [2]    __Lib_USB_genHID_USB_Std_Feature_Req_Handler_p_L0
0x0004       [1]    __Lib_USB_genHID_GetMaxIndexInDevDsc_index_L0
0x0004       [2]    strcat_cp_L0
0x0004       [2]    strncpy_cp_L0
0x0004       [2]    memcpy_ss_L0
0x0004       [1]    R4
0x0004       [2]    __Lib_USB_genHID_USB_Transfer_Packet_handle_L0
0x0005       [2]    memmove_ff_L0
0x0005       [2]    LongIntToHex_input_half_L0
0x0005       [2]    LongWordToHex_input_half_L0
0x0005       [1]    MM_TotalFreeMemSize_i_L0
0x0005       [1]    R5
0x0005       [2]    Ltrim_p_L0
0x0006       [1]    __Lib_MemManager_MM_GetMemAlign_i_L0
0x0006       [1]    R6
0x0006       [2]    __Lib_USB_genHID_GetMaxIndexInConfigDsc_totalLen_L0
0x0007       [1]    R7
0x0008       [3]    __Lib_USB_genHID_GetMaxIndexInConfigDsc_ptr_L0
0x0008       [1]    R8
0x0009       [1]    R9
0x000A       [1]    R10
0x000B       [1]    R11
0x000C       [1]    R12
0x000D       [1]    R13
0x000E       [1]    R14
0x000F       [1]    R15
0x0010       [1]    R16
0x0011       [1]    R17
0x0012       [1]    R18
0x0013       [1]    R19
0x0014       [1]    R20
0x0015       [1]    _flag
0x0016       [1]    _flagTime
0x0017       [2]    ?lstr26_glcd
0x0019       [2]    ?lstr23_glcd
0x001B       [2]    ?lstr24_glcd
0x001D       [2]    ?lstr25_glcd
0x001F       [1]    _flag_end
0x0020      [10]    ?lstr29_glcd
0x002A      [14]    ?lstr30_glcd
0x0038       [5]    ?lstr31_glcd
0x003D      [12]    ?lstr28_glcd
0x0049       [1]    _estado
0x004A       [2]    _y
0x004C      [11]    ?lstr27_glcd
0x0057       [2]    ?lstr16_glcd
0x0059      [16]    ?lstr3_glcd
0x0069      [13]    ?lstr4_glcd
0x0076       [2]    ?lstr15_glcd
0x0078       [2]    ?lstr12_glcd
0x007A       [2]    ?lstr13_glcd
0x007C       [2]    ?lstr14_glcd
0x007E      [21]    ?lstr5_glcd
0x0093       [2]    ?lstr20_glcd
0x0095       [2]    ?lstr21_glcd
0x0097       [2]    ?lstr22_glcd
0x0099       [2]    ?lstr19_glcd
0x009B      [26]    ?lstr6_glcd
0x00B5       [2]    ?lstr17_glcd
0x00B7       [2]    ?lstr18_glcd
0x00B9       [1]    __Lib_Glcd_FontInitialized_Adv
0x00BA      [11]    ?lstr36_glcd
0x00C5      [10]    ?lstr37_glcd
0x00CF      [12]    ?lstr35_glcd
0x00DB       [3]    ?lstr32_glcd
0x00DE       [5]    ?lstr33_glcd
0x00E3       [3]    ?lstr34_glcd
0x00E6       [1]    _vref_mask
0x00E7       [1]    _count1
0x00E8       [1]    _lineTime
0x00E9      [11]    ?lstr1_glcd
0x00F4       [1]    _turno_player
0x00F5       [2]    _score
0x00F7       [2]    ?lstr7_glcd
0x00F9       [2]    ?lstr9_glcd
0x00FB       [2]    ?lstr8_glcd
0x00FD       [1]    _timeCount
0x00FE      [12]    ?lstr2_glcd
0x010A       [2]    ?lstr11_glcd
0x010C       [1]    _count
0x010D       [2]    ?lstr10_glcd
0x010F       [9]    _serial_data
0x0118       [3]    __Lib_Glcd__font
0x011B       [1]    __Lib_Glcd_FontOrientation
0x011C       [2]    __Lib_Glcd_y_cord
0x011E       [2]    __Lib_Glcd__fontLastChar
0x0120       [1]    __Lib_Glcd_fontH
0x0121       [2]    __Lib_Glcd__fontFirstChar
0x0123       [2]    __Lib_Glcd__fontHeight
0x0125       [4]    _UART_Rd_Ptr
0x0129       [4]    _UART_Rdy_Ptr
0x012D       [4]    _UART_Tx_Idle_Ptr
0x0131       [4]    _UART_Wr_Ptr
0x0135       [2]    __Lib_Glcd_x_cord
0x0137       [2]    __Lib_Glcd_FontColor
0x0139       [4]    __Lib_Glcd_activeExtFont
0x013D       [4]    _ADC_Get_Sample_Ptr
0x0141       [3]    __Lib_Glcd_fontDef
0x0144       [8]    __Lib_Glcd_headerBuffer
0x014C       [4]    _Glcd_Get_Ext_Data_Ptr
0x0150       [1]    __Lib_Glcd_fontW
0x0151       [1]    __Lib_Glcd_FontInitialized
0x0152       [2]    __Lib_Glcd_ExternalFontSet
0x0154       [2]    __Lib_Glcd_fontOffset
0x0156       [9]    _asteD2
0x015F      [12]    _aste3
0x016B      [12]    _asteD4
0x0177      [12]    _aste1
0x0183      [12]    _asteD1
0x018F      [12]    _aste2
0x019B      [12]    _aste5
0x01A7       [8]    _jugador
0x01AF       [9]    _asteD5
0x01B8      [12]    _asteD6
0x01C4      [12]    _aste7
0x01D0       [1]    main_E_M_L0
0x01D1       [1]    main_Player_L0
0x01D2       [1]    main_count_op_L0
0x01D3       [1]    draw_lineTime_i_L0
0x01D3       [1]    move_aste_i_L0
0x01D3       [1]    FARG_Glcd_Fill_pattern
0x01D3       [1]    FARG_ADC_Read_channel
0x01D3       [2]    FARG_send_pack_data_serial_dir
0x01D3       [1]    IA_player_i_L0
0x01D4       [1]    Glcd_Fill_yy_L0
0x01D4       [2]    IA_player_menor_aux_L0
0x01D5       [1]    Glcd_Fill_page_L0
0x01D6       [2]    IA_player_menor_L0
0x01D8       [2]    IA_player_menor2_L0
0x01DA       [1]    FARG_move_players_direc
0x01DA       [2]    FARG_Glcd_Write_Text_text
0x01DA       [2]    FARG_UART1_Write_Text_uart_text
0x01DA       [2]    FARG_Glcd_Write_Text_Adv_text
0x01DA       [3]    FARG_Glcd_Image_image
0x01DA       [1]    draw_aste_i_L0
0x01DA       [4]    FARG_fabs_d
0x01DA       [4]    FARG_check_coll_nave
0x01DB       [1]    FARG_move_players_player
0x01DC       [1]    UART1_Write_Text_data__L0
0x01DC       [2]    FARG_Glcd_Write_Text_Adv_x
0x01DC       [1]    FARG_Glcd_Write_Text_x_pos
0x01DD       [1]    UART1_Write_Text_counter_L0
0x01DD       [1]    Glcd_Image_col_L0
0x01DD       [1]    FARG_Glcd_Write_Text_page_num
0x01DE       [3]    FARG_check_coll_aste
0x01DE       [1]    FARG_Glcd_Write_Text_color
0x01DE       [1]    Glcd_Image_pg_L0
0x01DE       [2]    FARG_Glcd_Write_Text_Adv_y
0x01DF       [2]    Glcd_Image_clan_niza_L0
0x01DF       [1]    Glcd_Write_Text_i_L0
0x01E0       [2]    Glcd_Write_Text_Adv_i_L0
0x01E1       [1]    FARG_check_coll_num
0x01E2       [1]    FARG_UART1_Write_data_
0x01E2       [1]    FARG_Glcd_Write_Char_chr
0x01E2       [1]    FARG___Lib_Glcd__Glcd_Write_Char_Adv_ch
0x01E2       [1]    FARG_borrar_player_x
0x01E2       [2]    FARG___Lib_Glcd__Glcd_Write_Char_AdvE_ch
0x01E2       [2]    FARG___Lib_Glcd_Glcd_Move_Cursor__x
0x01E3       [1]    __Lib_Glcd__Glcd_Write_Char_Adv_xCnt_L0
0x01E3       [1]    FARG_Glcd_Write_Char_x_pos
0x01E3       [1]    FARG_borrar_player_y
0x01E4       [2]    FARG___Lib_Glcd_Glcd_Move_Cursor__y
0x01E4       [1]    __Lib_Glcd__Glcd_Write_Char_AdvE_xCnt_L0
0x01E4       [1]    __Lib_Glcd__Glcd_Write_Char_Adv_yCnt_L0
0x01E4       [1]    FARG_Glcd_Write_Char_page_num
0x01E5       [1]    FARG_Glcd_Write_Char_color
0x01E5       [1]    __Lib_Glcd__Glcd_Write_Char_AdvE_yCnt_L0
0x01E5       [1]    __Lib_Glcd__Glcd_Write_Char_Adv_y_L0
0x01E6       [1]    Glcd_Write_Char_ii_L0
0x01E6       [1]    __Lib_Glcd__Glcd_Write_Char_Adv_mask_L0
0x01E6       [2]    __Lib_Glcd__Glcd_Write_Char_AdvE_y_L0
0x01E7       [1]    Glcd_Write_Char_data_read_L0
0x01E7       [3]    __Lib_Glcd__Glcd_Write_Char_Adv_pChBitMap_L0
0x01E8       [1]    __Lib_Glcd__Glcd_Write_Char_AdvE_mask_L0
0x01E8       [1]    Glcd_Write_Char_font_ch_L0
0x01E9       [4]    __Lib_Glcd__Glcd_Write_Char_AdvE_pChBitMap_L0
0x01E9       [1]    Glcd_Write_Char_font_ch_inv_L0
0x01EA       [1]    __Lib_Glcd__Glcd_Write_Char_Adv_chWidth_L0
0x01EA       [2]    Glcd_Write_Char_pointer_L0
0x01EB       [1]    __Lib_Glcd__Glcd_Write_Char_Adv_x_L0
0x01EC       [1]    __Lib_Glcd__Glcd_Write_Char_Adv_temp_L0
0x01ED       [2]    __Lib_Glcd__Glcd_Write_Char_AdvE_readed_L0
0x01EF       [2]    __Lib_Glcd__Glcd_Write_Char_AdvE_count_L0
0x01F1       [2]    __Lib_Glcd__Glcd_Write_Char_AdvE_byteCount_L0
0x01F3       [2]    __Lib_Glcd__Glcd_Write_Char_AdvE_countSaved_L0
0x01F5       [2]    __Lib_Glcd__Glcd_Write_Char_AdvE_ptr_L0
0x01F7       [1]    __Lib_Glcd__Glcd_Write_Char_AdvE_chWidth_L0
0x01F8       [2]    __Lib_Glcd__Glcd_Write_Char_AdvE_x_L0
0x01FA       [1]    __Lib_Glcd__Glcd_Write_Char_AdvE_temp_L0
0x01FB       [1]    FLOC___Lib_Glcd__Glcd_Write_Char_AdvE
0x01FC       [2]    __Lib_Glcd__Glcd_getHeader_i_L0
0x01FC       [1]    FARG_draw_player_x
0x01FD       [1]    FARG_draw_player_y
0x01FE       [2]    __Lib_Glcd__Glcd_getHeader_num_L0
0x0200       [1]    Glcd_Dot_bit_mask1_L0
0x0201       [3]    FARG_Glcd_Set_Font_Adv_activeFont
0x0201       [4]    FARG___Lib_Glcd__Glcd_getHeader_offset
0x0204       [1]    FARG_Glcd_Set_Font_Adv_font_color
0x0205       [2]    FARG___Lib_Glcd__Glcd_getHeader_count
0x0205       [1]    FARG_Glcd_Set_Font_Adv_font_orientation
0x0207       [2]    __Lib_Glcd__Glcd_getHeader_ptr_L0
0x0209       [2]    __Lib_Glcd__Glcd_getHeader_ptrH_L0
0x020B       [1]    FARG_Glcd_Dot_x_pos
0x020C       [1]    FARG_Glcd_Dot_y_pos
0x020D       [1]    FARG_Glcd_Dot_color
0x020E       [1]    Glcd_Dot_bit_mask0_L0
0x020F       [1]    Glcd_Dot_ddata_L0
0x0210       [1]    Glcd_Read_Data_local_L0
0x0210       [1]    FARG_Glcd_Write_Data_ddata
0x0210       [1]    FARG_Glcd_Set_Page_page
0x0210       [1]    FARG_Glcd_Set_Side_x_pos
0x0210       [1]    FARG_Glcd_Set_X_x_pos
0x0F82       [1]    PORTC
0x0F83       [1]    PORTD
0x0F83       [1]    GLCD_DataPort
0x0F8A       [0]    GLCD_EN
0x0F8A       [0]    GLCD_CS1
0x0F8A       [0]    GLCD_RST
0x0F8A       [0]    LATB2_bit
0x0F8A       [0]    GLCD_RS
0x0F8A       [0]    LATB0_bit
0x0F8A       [0]    LATB1_bit
0x0F8A       [0]    GLCD_CS2
0x0F8A       [0]    LATB4_bit
0x0F8A       [0]    LATB5_bit
0x0F8A       [0]    LATB3_bit
0x0F8A       [0]    GLCD_RW
0x0F93       [0]    TRISB4_bit
0x0F93       [0]    TRISB5_bit
0x0F93       [0]    GLCD_CS1_Direction
0x0F93       [0]    TRISB3_bit
0x0F93       [0]    TRISB0_bit
0x0F93       [0]    TRISB1_bit
0x0F93       [0]    TRISB2_bit
0x0F93       [0]    GLCD_RST_Direction
0x0F93       [0]    GLCD_EN_Direction
0x0F93       [0]    GLCD_CS2_Direction
0x0F93       [0]    GLCD_RS_Direction
0x0F93       [0]    GLCD_RW_Direction
0x0F94       [0]    TRISC6_bit
0x0F94       [0]    TRISC7_bit
0x0F94       [1]    TRISC
0x0F9E       [1]    PIR1
0x0FAB       [1]    RCSTA
0x0FAC       [1]    TXSTA
0x0FAD       [1]    TXREG
0x0FAE       [1]    RCREG
0x0FAF       [1]    SPBRG
0x0FB0       [1]    SPBRGH
0x0FB8       [1]    BAUDCON
0x0FC0       [1]    ADCON2
0x0FC1       [1]    ADCON1
0x0FC2       [1]    ADCON0
0x0FC3       [1]    ADRESL
0x0FC4       [1]    ADRESH
0x0FD8       [1]    STATUS
0x0FD9       [1]    FSR2L
0x0FDA       [1]    FSR2H
0x0FDE       [1]    POSTINC2
0x0FE0       [1]    BSR
0x0FE1       [1]    FSR1L
0x0FE1       [2]    FSR1
0x0FE2       [1]    FSR1H
0x0FE4       [1]    PREINC1
0x0FE6       [1]    POSTINC1
0x0FE7       [1]    INDF1
0x0FE8       [1]    WREG
0x0FE9       [1]    FSR0L
0x0FEA       [1]    FSR0H
0x0FEE       [1]    POSTINC0
0x0FF2       [1]    INTCON
0x0FF3       [1]    PRODL
0x0FF4       [1]    PRODH
0x0FF5       [1]    TABLAT
0x0FF6       [1]    TBLPTRL
0x0FF6       [3]    TBLPTR
0x0FF7       [1]    TBLPTRH
0x0FF8       [1]    TBLPTRU
0x0FFD       [1]    TOSL
0x0FFE       [1]    TOSH
0x0FFF       [1]    TOSU
//** Constants locations ** 
//ADDRESS    SIZE    CONSTANT
//----------------------------------------------
0x4F9C    [1459]    _Glcd_defaultFont
0x554F    [1024]    _TEC
0x594F    [1024]    _GameOver
0x5D4F    [1024]    _space
0x614F     [480]    _font5x7
0x632F       [1]    ?ICS_flag
0x6330       [1]    ?ICS_flagTime
0x6331       [2]    ?ICS?lstr26_glcd
0x6333       [2]    ?ICS?lstr23_glcd
0x6335       [2]    ?ICS?lstr24_glcd
0x6337       [2]    ?ICS?lstr25_glcd
0x6339       [1]    ?ICS_flag_end
0x633A      [10]    ?ICS?lstr29_glcd
0x6344      [14]    ?ICS?lstr30_glcd
0x6352       [5]    ?ICS?lstr31_glcd
0x6357      [12]    ?ICS?lstr28_glcd
0x6363       [1]    ?ICS_estado
0x6364       [2]    ?ICS_y
0x6366      [11]    ?ICS?lstr27_glcd
0x6371       [2]    ?ICS?lstr16_glcd
0x6373      [16]    ?ICS?lstr3_glcd
0x6383      [13]    ?ICS?lstr4_glcd
0x6390       [2]    ?ICS?lstr15_glcd
0x6392       [2]    ?ICS?lstr12_glcd
0x6394       [2]    ?ICS?lstr13_glcd
0x6396       [2]    ?ICS?lstr14_glcd
0x6398      [21]    ?ICS?lstr5_glcd
0x63AD       [2]    ?ICS?lstr20_glcd
0x63AF       [2]    ?ICS?lstr21_glcd
0x63B1       [2]    ?ICS?lstr22_glcd
0x63B3       [2]    ?ICS?lstr19_glcd
0x63B5      [26]    ?ICS?lstr6_glcd
0x63CF       [2]    ?ICS?lstr17_glcd
0x63D1       [2]    ?ICS?lstr18_glcd
0x63D3       [1]    ?ICS__Lib_Glcd_FontInitialized_Adv
0x63D4      [11]    ?ICS?lstr36_glcd
0x63DF      [10]    ?ICS?lstr37_glcd
0x63E9      [12]    ?ICS?lstr35_glcd
0x63F5       [3]    ?ICS?lstr32_glcd
0x63F8       [5]    ?ICS?lstr33_glcd
0x63FD       [3]    ?ICS?lstr34_glcd
0x6400       [1]    ?ICS_vref_mask
0x6401       [1]    ?ICS_count1
0x6402       [1]    ?ICS_lineTime
0x6403      [11]    ?ICS?lstr1_glcd
0x640E       [1]    ?ICS_turno_player
0x640F       [2]    ?ICS_score
0x6411       [2]    ?ICS?lstr7_glcd
0x6413       [2]    ?ICS?lstr9_glcd
0x6415       [2]    ?ICS?lstr8_glcd
0x6417       [1]    ?ICS_timeCount
0x6418      [12]    ?ICS?lstr2_glcd
0x6424       [2]    ?ICS?lstr11_glcd
0x6426       [1]    ?ICS_count
0x6427       [2]    ?ICS?lstr10_glcd
